<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CS61A HW1</title>
      <link href="/2023/04/26/cs61a-hw1/"/>
      <url>/2023/04/26/cs61a-hw1/</url>
      
        <content type="html"><![CDATA[<h1 id="CS61A-HW1"><a href="#CS61A-HW1" class="headerlink" title="CS61A HW1"></a>CS61A HW1</h1><blockquote><p>CS61A HW1 Page: <a href="https://inst.eecs.berkeley.edu/~cs61a/fa20/hw/hw01/">https://inst.eecs.berkeley.edu/~cs61a/fa20/hw/hw01/</a></p></blockquote><h2 id="Instructions-‚òòÔ∏è"><a href="#Instructions-‚òòÔ∏è" class="headerlink" title="Instructions ‚òòÔ∏è"></a>Instructions ‚òòÔ∏è</h2><p>Download <a href="https://inst.eecs.berkeley.edu/~cs61a/fa20/hw/hw01/hw01.zip">hw01.zip</a>.</p><p><strong>Submission:</strong> When you are done, submit with <code>python3 ok --submit</code>. You may submit more than once before the deadline; only the final submission will be scored. Check that you have successfully submitted your code on <a href="https://okpy.org/">okpy.org</a>. See <a href="https://inst.eecs.berkeley.edu/~cs61a/fa20/lab/lab00#submitting-the-assignment">Lab 0</a> for more instructions on submitting assignments.</p><p><strong>Using Ok:</strong> If you have any questions about using Ok, please refer to <a href="https://inst.eecs.berkeley.edu/~cs61a/fa20/articles/using-ok.html">this guide.</a></p><p><strong>Readings:</strong> You might find the following references useful:</p><ul><li><a href="http://composingprograms.com/pages/12-elements-of-programming.html">Section 1.2</a></li><li><a href="http://composingprograms.com/pages/13-defining-new-functions.html">Section 1.3</a></li><li><a href="http://composingprograms.com/pages/14-designing-functions.html">Section 1.4</a></li><li><a href="http://composingprograms.com/pages/15-control.html">Section 1.5</a></li></ul><p><strong>Note:</strong> Some of these readings necessary for the homework questions will not be covered until Monday‚Äôs lecture on Control.</p><p><strong>Grading:</strong> Homework is graded based on correctness. Each incorrect problem will decrease the total score by one point. There is a homework recovery policy as stated in the syllabus. <strong>This homework is out of 2 points.</strong></p><hr><h2 id="Required-Questions-üßê"><a href="#Required-Questions-üßê" class="headerlink" title="Required Questions üßê"></a>Required Questions üßê</h2><h3 id="Q1-Syllabus-Quiz"><a href="#Q1-Syllabus-Quiz" class="headerlink" title="Q1: Syllabus Quiz"></a>Q1: Syllabus Quiz</h3><p>Please fill out our <a href="https://docs.google.com/forms/d/e/1FAIpQLSeaHfn-kBxKMDgmrj1EISCRdw9NIS9MQlVf6WTrLHaHfTnscw/viewform?usp=sf_link">Syllabus Quiz</a> based off of our policies found on our <a href="https://cs61a.org/articles/about.html">syllabus page</a>.</p><hr><h3 id="Q2-A-Plus-Abs-B"><a href="#Q2-A-Plus-Abs-B" class="headerlink" title="Q2: A Plus Abs B"></a>Q2: A Plus Abs B</h3><p>Fill in the blanks in the following function for adding <code>a</code> to the absolute value of <code>b</code>, without calling <code>abs</code>. You may <strong>not</strong> modify any of the provided code other than the two blanks.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> operator <span class="token keyword">import</span> add<span class="token punctuation">,</span> sub<span class="token keyword">def</span> <span class="token function">a_plus_abs_b</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Return a+abs(b), but without calling abs.    &gt;&gt;&gt; a_plus_abs_b(2, 3)    5    &gt;&gt;&gt; a_plus_abs_b(2, -3)    5    &gt;&gt;&gt; # a check that you didn't change the return statement!    &gt;&gt;&gt; import inspect, re    &gt;&gt;&gt; re.findall(r'^\s*(return .*)', inspect.getsource(a_plus_abs_b), re.M)    ['return f(a, b)']    """</span>    <span class="token keyword">if</span> b <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> _____    <span class="token keyword">else</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> _____    <span class="token keyword">return</span> f<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Use Ok to test your code:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ok <span class="token operator">-</span>q a_plus_abs_b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="Q3-Two-of-Three"><a href="#Q3-Two-of-Three" class="headerlink" title="Q3: Two of Three"></a>Q3: Two of Three</h3><p>Write a function that takes three <em>positive</em> numbers as arguments and returns the sum of the squares of the two smallest numbers. <strong>Use only a single line for the body of the function.</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">two_of_three</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Return a*a + b*b, where a and b are the two smallest members of the    positive numbers x, y, and z.    &gt;&gt;&gt; two_of_three(1, 2, 3)    5    &gt;&gt;&gt; two_of_three(5, 3, 1)    10    &gt;&gt;&gt; two_of_three(10, 2, 8)    68    &gt;&gt;&gt; two_of_three(5, 5, 5)    50    &gt;&gt;&gt; # check that your code consists of nothing but an expression (this docstring)    &gt;&gt;&gt; # a return statement    &gt;&gt;&gt; import inspect, ast    &gt;&gt;&gt; [type(x).__name__ for x in ast.parse(inspect.getsource(two_of_three)).body[0].body]    ['Expr', 'Return']    """</span>    <span class="token keyword">return</span> _____<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>Hint:</strong> Consider using the <code>max</code> or <code>min</code> function:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>Use Ok to test your code:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ok <span class="token operator">-</span>q two_of_three<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="Q4-Largest-Factor"><a href="#Q4-Largest-Factor" class="headerlink" title="Q4: Largest Factor"></a>Q4: Largest Factor</h3><p>Write a function that takes an integer <code>n</code> that is <strong>greater than 1</strong> and returns the largest integer that is smaller than <code>n</code> and evenly divides <code>n</code>.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">largest_factor</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Return the largest factor of n that is smaller than n.    &gt;&gt;&gt; largest_factor(15) # factors are 1, 3, 5    5    &gt;&gt;&gt; largest_factor(80) # factors are 1, 2, 4, 5, 8, 10, 16, 20, 40    40    &gt;&gt;&gt; largest_factor(13) # factor is 1 since 13 is prime    1    """</span>    <span class="token string">"*** YOUR CODE HERE ***"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>Hint:</strong> To check if <code>b</code> evenly divides <code>a</code>, you can use the expression <code>a % b == 0</code>, which can be read as, ‚Äúthe remainder of dividing <code>a</code> by <code>b</code> is 0.‚Äù</p></blockquote><p>Use Ok to test your code:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ok <span class="token operator">-</span>q largest_factor<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="Q5-If-Function-vs-Statement"><a href="#Q5-If-Function-vs-Statement" class="headerlink" title="Q5: If Function vs Statement"></a>Q5: If Function vs Statement</h3><p>Let‚Äôs try to write a function that does the same thing as an <code>if</code> statement.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">if_function</span><span class="token punctuation">(</span>condition<span class="token punctuation">,</span> true_result<span class="token punctuation">,</span> false_result<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Return true_result if condition is a true value, and    false_result otherwise.    &gt;&gt;&gt; if_function(True, 2, 3)    2    &gt;&gt;&gt; if_function(False, 2, 3)    3    &gt;&gt;&gt; if_function(3==2, 3+2, 3-2)    1    &gt;&gt;&gt; if_function(3&gt;2, 3+2, 3-2)    5    """</span>    <span class="token keyword">if</span> condition<span class="token punctuation">:</span>        <span class="token keyword">return</span> true_result    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> false_result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Despite the doctests above, this function actually does <em>not</em> do the same thing as an <code>if</code> statement in all cases. To prove this fact, write functions <code>cond</code>, <code>true_func</code>, and <code>false_func</code> such that <code>with_if_statement</code> prints the number <code>47</code>, but <code>with_if_function</code> prints both <code>42</code> and <code>47</code>.</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">with_if_statement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    &gt;&gt;&gt; result = with_if_statement()    47    &gt;&gt;&gt; print(result)    None    """</span>    <span class="token keyword">if</span> cond<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> true_func<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> false_func<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">with_if_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    &gt;&gt;&gt; result = with_if_function()    42    47    &gt;&gt;&gt; print(result)    None    """</span>    <span class="token keyword">return</span> if_function<span class="token punctuation">(</span>cond<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> true_func<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> false_func<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">cond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"*** YOUR CODE HERE ***"</span><span class="token keyword">def</span> <span class="token function">true_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"*** YOUR CODE HERE ***"</span><span class="token keyword">def</span> <span class="token function">false_func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"*** YOUR CODE HERE ***"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>Hint</strong>: If you are having a hard time identifying how an <code>if</code> statement and <code>if_function</code> differ, consider the <a href="http://composingprograms.com/pages/15-control.html#conditional-statements">rules of evaluation for <code>if</code> statements</a> and <a href="http://composingprograms.com/pages/12-elements-of-programming.html#call-expressions">call expressions</a>.</p></blockquote><p>Use Ok to test your code:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ok <span class="token operator">-</span>q with_if_statementpython3 ok <span class="token operator">-</span>q with_if_function<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h3 id="Q6-Hailstone"><a href="#Q6-Hailstone" class="headerlink" title="Q6: Hailstone"></a>Q6: Hailstone</h3><p>Douglas Hofstadter‚Äôs Pulitzer-prize-winning book, <em>G√∂del, Escher, Bach</em>, poses the following mathematical puzzle.</p><ol><li>Pick a positive integer <code>n</code> as the start.</li><li>If <code>n</code> is even, divide it by 2.</li><li>If <code>n</code> is odd, multiply it by 3 and add 1.</li><li>Continue this process until <code>n</code> is 1.</li></ol><p>The number <code>n</code> will travel up and down but eventually end at 1 (at least for all numbers that have ever been tried ‚Äì nobody has ever proved that the sequence will terminate). Analogously, a hailstone travels up and down in the atmosphere before eventually landing on earth.</p><blockquote><p><strong>Breaking News</strong> (or at least the closest thing to that in math). There was a <a href="https://www.quantamagazine.org/mathematician-terence-tao-and-the-collatz-conjecture-20191211/">recent development</a> in the hailstone conjecture last year that shows that almost all numbers will eventually get to 1 if you repeat this process. This isn‚Äôt a complete proof but a major breakthrough.</p></blockquote><p>This sequence of values of <code>n</code> is often called a Hailstone sequence. Write a function that takes a single argument with formal parameter name <code>n</code>, prints out the hailstone sequence starting at <code>n</code>, and returns the number of steps in the sequence:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">hailstone</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Print the hailstone sequence starting at n and return its    length.    &gt;&gt;&gt; a = hailstone(10)    10    5    16    8    4    2    1    &gt;&gt;&gt; a    7    """</span>    <span class="token string">"*** YOUR CODE HERE ***"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Hailstone sequences can get quite long! Try 27. What‚Äôs the longest you can find?</p><p>Use Ok to test your code:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ok <span class="token operator">-</span>q hailstone<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="Submit-üöÄ"><a href="#Submit-üöÄ" class="headerlink" title="Submit üöÄ"></a>Submit üöÄ</h2><p>Make sure to submit this assignment by running:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ok <span class="token operator">-</span><span class="token operator">-</span>submitpy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS61A: <a href="https://github.com/Ricky2333/CS61A">https://github.com/Ricky2333/CS61A</a></p><blockquote><p>Due to the <a href="https://inst.eecs.berkeley.edu/~cs61a/fa20/articles/about.html#academic-honesty">course policies</a>, this is a <strong>private repository</strong> only for self-review. </p><p>If you have any questions, feel free to contact me through the social links on my homepage.</p><p>Ricky‚Äôs Homepage: <a href="https://rickyxcoder.top/">https://rickyxcoder.top/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS61A </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS61A </tag>
            
            <tag> CS61A HW </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Problem Set4</title>
      <link href="/2023/04/25/cs50-problem-set4/"/>
      <url>/2023/04/25/cs50-problem-set4/</url>
      
        <content type="html"><![CDATA[<h1 id="CS50-Problem-Set4"><a href="#CS50-Problem-Set4" class="headerlink" title="CS50 Problem Set4"></a>CS50 Problem Set4</h1><blockquote><p>CS50 Problem Set4 PageÔºö<a href="https://cs50.harvard.edu/x/2023/psets/4/">https://cs50.harvard.edu/x/2023/psets/4/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="What-to-Do-üöÄ"><a href="#What-to-Do-üöÄ" class="headerlink" title="What to Do üöÄ"></a>What to Do üöÄ</h2><blockquote><p>Be sure you have completed <a href="https://cs50.harvard.edu/x/2023/labs/4/">Lab 4</a> before beginning this problem set.</p></blockquote><ol><li>Log into <a href="https://code.cs50.io/">code.cs50.io</a> using your GitHub account</li><li>Run <code>update50</code> in your codespace‚Äôs terminal window to ensure your codespace is up-to-date and, when prompted, click <strong>Rebuild now</strong></li><li>Submit one of:<ul><li><a href="https://cs50.harvard.edu/x/2023/psets/4/filter/less/">this version of Filter</a> if feeling less comfortable</li><li><a href="https://cs50.harvard.edu/x/2023/psets/4/filter/more/">this version of Filter</a> if feeling more comfortable</li></ul></li><li>Submit one of:<ul><li><a href="https://cs50.harvard.edu/x/2023/psets/4/recover/">Recover</a></li><li><a href="https://cs50.harvard.edu/x/2023/psets/4/reverse/">Reverse</a></li></ul></li></ol><p>If you submit both versions of Filter, we‚Äôll record the higher of your two scores.</p><hr><h2 id="Problem-Set-üìö"><a href="#Problem-Set-üìö" class="headerlink" title="Problem Set üìö"></a>Problem Set üìö</h2><h3 id="P1-Filter-Less"><a href="#P1-Filter-Less" class="headerlink" title="P1 - Filter-Less"></a>P1 - Filter-Less</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/4/filter/less/">https://cs50.harvard.edu/x/2023/psets/4/filter/less/</a></p></blockquote><h3 id="P2-Filter-More"><a href="#P2-Filter-More" class="headerlink" title="P2 - Filter-More"></a>P2 - Filter-More</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/4/filter/more/">https://cs50.harvard.edu/x/2023/psets/4/filter/more/</a></p></blockquote><h3 id="P3-Recover"><a href="#P3-Recover" class="headerlink" title="P3 - Recover"></a>P3 - Recover</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/4/recover/">https://cs50.harvard.edu/x/2023/psets/4/recover/</a></p></blockquote><h3 id="P4-Reverse"><a href="#P4-Reverse" class="headerlink" title="P4 - Reverse"></a>P4 - Reverse</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/4/reverse/">https://cs50.harvard.edu/x/2023/psets/4/reverse/</a></p></blockquote><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Problem Sets: <a href="https://github.com/Ricky2333/CS50-PSet">https://github.com/Ricky2333/CS50-PSet</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> C </tag>
            
            <tag> CS50 PSet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bash ScriptÔΩúÂ≠¶‰π†Á¨îËÆ∞1</title>
      <link href="/2023/04/24/bash-script-ji-chu/"/>
      <url>/2023/04/24/bash-script-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="Bash-Script-ÁÆÄ‰ªã-üìö"><a href="#Bash-Script-ÁÆÄ‰ªã-üìö" class="headerlink" title="Bash Script ÁÆÄ‰ªã üìö"></a>Bash Script ÁÆÄ‰ªã üìö</h2><p><strong>Bash  ScriptÔºàBash ËÑöÊú¨Ôºâ</strong> ÊòØ‰∏ÄÁßçÁî± <strong>Bash shell</strong> ÁºñÂÜôÁöÑËÑöÊú¨Êñá‰ª∂ÔºåÂèØ‰ª• <strong>Ëá™Âä®ÂåñÂú∞ÊâßË°å‰∏ÄÁ≥ªÂàóÂëΩ‰ª§</strong>„ÄÇ</p><p>Bash ËÑöÊú¨ÈÄöÂ∏∏‰ª• <code>.sh</code> ‰∏∫Êñá‰ª∂Êâ©Â±ïÂêçÔºåÂèØ‰ª•ÈÄöËøáÂëΩ‰ª§Ë°åÁªàÁ´ØÊàñËÄÖÂÖ∂ÂÆÉËÑöÊú¨Êù•ÊâßË°å„ÄÇ</p><p>Bash ËÑöÊú¨ÈÄöÂ∏∏Áî±‰∏ÄÁ≥ªÂàóÁöÑÂëΩ‰ª§ÂíåÈÄªËæëËØ≠Âè•ÁªÑÊàêÔºåÂèØ‰ª•ÂåÖÊã¨Âæ™ÁéØ„ÄÅÊù°‰ª∂ËØ≠Âè•„ÄÅÂáΩÊï∞„ÄÅÂèòÈáèÁ≠â„ÄÇ</p><p>Bash ËÑöÊú¨ÂèØ‰ª•Áî®‰∫éËá™Âä®ÂåñÂêÑÁßç‰ªªÂä°Ôºå‰æãÂ¶ÇÊâπÈáèÂ§ÑÁêÜÊñá‰ª∂„ÄÅÊâßË°åÁ≥ªÁªüÂëΩ‰ª§„ÄÅÂ§á‰ªΩÊï∞ÊçÆ„ÄÅÈÉ®ÁΩ≤Â∫îÁî®Á®ãÂ∫èÁ≠âÁ≠â„ÄÇÂõ†‰∏∫BashËÑöÊú¨ÊòØÊñáÊú¨Êñá‰ª∂ÔºåÊâÄ‰ª•ÂèØ‰ª•ÈÄöËøáÁºñËæëÂô®Êù•ÁºñÂÜôÂíå‰øÆÊîπÔºå‰πüÂèØ‰ª•Ë¢´ÁâàÊú¨ÊéßÂà∂Á≥ªÁªüÁÆ°ÁêÜ„ÄÇ</p><h2 id="Bash-Script-ÂÆûË∑µüßëüèª‚Äçüíª"><a href="#Bash-Script-ÂÆûË∑µüßëüèª‚Äçüíª" class="headerlink" title="Bash Script ÂÆûË∑µüßëüèª‚Äçüíª"></a>Bash Script ÂÆûË∑µüßëüèª‚Äçüíª</h2><blockquote><p>‰ª•‰∏ãÂÜÖÂÆπÈúÄË¶ÅÊúâ‰∏ÄÂÆöÁöÑ Linux Âü∫Á°ÄÔºåÂ¶ÇÂü∫Êú¨ÁöÑ Linux ÂëΩ‰ª§ÔºåLinux ÊùÉÈôêÁ≠â„ÄÇ</p></blockquote><h3 id="1-ÂàõÂª∫ËÑöÊú¨Âπ∂Ëµã‰∫àÊâßË°åÊùÉÈôê"><a href="#1-ÂàõÂª∫ËÑöÊú¨Âπ∂Ëµã‰∫àÊâßË°åÊùÉÈôê" class="headerlink" title="1. ÂàõÂª∫ËÑöÊú¨Âπ∂Ëµã‰∫àÊâßË°åÊùÉÈôê"></a>1. ÂàõÂª∫ËÑöÊú¨Âπ∂Ëµã‰∫àÊâßË°åÊùÉÈôê</h3><p>ÂàõÂª∫ Bash ËÑöÊú¨ <code>test.sh</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">touch</span> test.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><ol start="2"><li><strong>Ê£ÄÊü•Êñá‰ª∂ÊùÉÈôê</strong></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-l</span> test.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÂèØ‰ª•ÁúãÂà∞ÂΩìÂâçÊñá‰ª∂ <strong>Ê≤°ÊúâÊâßË°åÊùÉÈôê</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-rw-rw-r-- <span class="token number">1</span> rickyx rickyx <span class="token number">0</span> Apr <span class="token number">23</span> 00:28 test.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><ol start="3"><li><strong>Ê∑ªÂä†ÊâßË°åÊùÉÈôê</strong></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x test.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÂÜçÊ¨°Ê£ÄÊü•ËØ•Êñá‰ª∂ÊùÉÈôê</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-l</span> test.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÂèØ‰ª•ÁúãÂà∞ÂΩìÂâçÊñá‰ª∂Â∑≤ÁªèÊã•ÊúâÊâßË°åÊùÉÈôê</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-rwxrwxr-x <span class="token number">1</span> rickyx rickyx <span class="token number">0</span> Apr <span class="token number">23</span> 00:28 test.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-ÁºñÂÜôËÑöÊú¨"><a href="#2-ÁºñÂÜôËÑöÊú¨" class="headerlink" title="2. ÁºñÂÜôËÑöÊú¨"></a>2. ÁºñÂÜôËÑöÊú¨</h3><p>‰∏Ä‰∏™ÁÆÄÂçïÁöÑËÑöÊú¨ÔºåÂäüËÉΩÊòØ„ÄåÊ¨¢ËøéÁî®Êà∑„Äç</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">echo</span> <span class="token string">"Hello, Ricky!!"</span> <span class="token comment"># Âú®ÁªàÁ´Ø‰∏äÊâìÂç∞ËØ•ËØ≠Âè•</span><span class="token function">sleep</span> <span class="token number">1</span> <span class="token comment"># Á≠âÂæÖ1Áßí</span><span class="token builtin class-name">echo</span> <span class="token string">"You're looking good today, Ricky!!"</span> <span class="token comment"># Âú®ÁªàÁ´Ø‰∏äÊâìÂç∞ËØ•ËØ≠Âè•</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ÂÖ≥‰∫é <strong>shebang</strong> üçâ</p><p><code>#!</code>ÔºàÁß∞‰∏∫ <strong>shebang</strong> Êàñ <strong>hashbang</strong>ÔºâÊòØ‰∏Ä‰∏™ÁâπÊÆäÁöÑÂ≠óÁ¨¶Â∫èÂàóÔºåÂëäËØâÊìç‰ΩúÁ≥ªÁªüÊâÄË¶Å‰ΩøÁî®ÁöÑ shell ÁöÑË∑ØÂæÑ„ÄÇÂú® Linux Âíå Unix Á≥ªÁªü‰∏≠Ôºåshebang ÂøÖÈ°ªÊòØËÑöÊú¨Êñá‰ª∂ÁöÑÁ¨¨‰∏ÄË°åÔºåÂê¶ÂàôÊìç‰ΩúÁ≥ªÁªüÂ∞ÜÊó†Ê≥ïËØÜÂà´Âπ∂‰ΩøÁî®ÊåáÂÆöÁöÑ shell Ëß£ÈáäÂô®Êù•ÊâßË°åËÑöÊú¨„ÄÇ</p><p>Âú®Êú¨ÂÆû‰æã‰∏≠Ôºå<code>#!/bin/bash</code> ÊåáÂÆö‰∫ÜË¶Å‰ΩøÁî® Bash shell Êù•ÊâßË°åËØ•ËÑöÊú¨„ÄÇËøôÊÑèÂë≥ÁùÄÔºåÂΩìËøô‰∏™ËÑöÊú¨Ë¢´ÊâßË°åÊó∂ÔºåÊìç‰ΩúÁ≥ªÁªü‰ºöËá™Âä®Êü•Êâæ Bash Ëß£ÈáäÂô®ÁöÑ‰ΩçÁΩÆÔºåÁÑ∂Âêé‰ΩøÁî® Bash Ëß£ÈáäÂô®Êù•Ëß£ÈáäÂπ∂ÊâßË°åËøô‰∏™ËÑöÊú¨Êñá‰ª∂„ÄÇ</p><blockquote><p>Âú®‰ΩøÁî® Bash ÁºñÂÜôËÑöÊú¨Êó∂ÔºåÂßãÁªàÂ∞Ü <code>#!/bin/bash</code> ‰Ωú‰∏∫ËÑöÊú¨ÁöÑÂºÄÂ§¥ÈÉ®ÂàÜÊòØ‰∏Ä‰∏™ÂæàÂ•ΩÁöÑ‰π†ÊÉØÔºå‰ª•Á°Æ‰øùËÑöÊú¨ÂèØ‰ª•Ê≠£Á°ÆÂú∞Ë¢´ÊâßË°å„ÄÇ</p></blockquote><hr><h3 id="3-‰ºòÂåñÔºàÂºïÂÖ•ÂèòÈáèÔºâ"><a href="#3-‰ºòÂåñÔºàÂºïÂÖ•ÂèòÈáèÔºâ" class="headerlink" title="3. ‰ºòÂåñÔºàÂºïÂÖ•ÂèòÈáèÔºâ"></a>3. ‰ºòÂåñÔºàÂºïÂÖ•ÂèòÈáèÔºâ</h3><ol><li>‰ΩøÁî®ÂèòÈáè</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">"Ricky"</span> <span class="token comment"># ÂàõÂª∫ÂèòÈáèÔºåÂπ∂‰∏îËµãÂÄº</span><span class="token builtin class-name">echo</span> <span class="token string">"Hello, <span class="token variable">$name</span>!!"</span><span class="token function">sleep</span> <span class="token number">1</span><span class="token builtin class-name">echo</span> <span class="token string">"You're looking good today, <span class="token variable">$name</span>!!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>ÈÄöËøá <code>read</code> Ëé∑ÂèñÂèòÈáèÂÄº</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">"What's your name? "</span> name  <span class="token comment"># ÂàõÂª∫ÂèòÈáèÔºåÂπ∂‰∏îÈÄöËøáreadËµãÂÄºÔºà‰ΩøÁî®-pÂèÇÊï∞Ê∑ªÂä†PromptÊèêÁ§∫Ôºâ</span><span class="token builtin class-name">echo</span> <span class="token string">"Hello, <span class="token variable">$name</span>!!"</span><span class="token function">sleep</span> <span class="token number">1</span><span class="token builtin class-name">echo</span> <span class="token string">"You're looking good today, <span class="token variable">$name</span>!!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>ÈÄöËøá <strong>ÂëΩ‰ª§Ë°åÂèÇÊï∞</strong> Ëé∑ÂèñÂèòÈáèÂÄº</p><p>ÊâßË°åÊó∂ÔºåÊ∑ªÂä†ÂëΩ‰ª§Ë°åÂèÇÊï∞Ôºö<code>./test.sh Ricky</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable">$1</span> <span class="token comment"># Ëé∑ÂèñÁ¨¨1‰∏™ÂëΩ‰ª§Ë°åÂèÇÊï∞ÔºàÁ¨¨0‰∏™ÂëΩ‰ª§Ë°åÂèÇÊï∞ ./test.shÔºâ</span><span class="token builtin class-name">echo</span> <span class="token string">"Hello, <span class="token variable">$name</span>!!"</span><span class="token function">sleep</span> <span class="token number">1</span><span class="token builtin class-name">echo</span> <span class="token string">"You're looking good today, <span class="token variable">$name</span>!!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>ÈÄöËøá <strong>ÂëΩ‰ª§ÁªìÊûú</strong> Ëé∑ÂèñÂèòÈáèÂÄº</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">whoami</span><span class="token variable">)</span></span> <span class="token comment">#Ëé∑ÂèñwhoamiÂëΩ‰ª§ÁöÑÁªìÊûúÔºåÂπ∂‰∏îËµãÂÄºÁªôname</span><span class="token builtin class-name">echo</span> <span class="token string">"Hello, <span class="token variable">$name</span>!!"</span><span class="token function">sleep</span> <span class="token number">1</span><span class="token builtin class-name">echo</span> <span class="token string">"You're looking good today, <span class="token variable">$name</span>!!"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> LinuxÂü∫Á°Ä </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Bash Script </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Lab4</title>
      <link href="/2023/04/23/cs50-lab4/"/>
      <url>/2023/04/23/cs50-lab4/</url>
      
        <content type="html"><![CDATA[<h1 id="Lab-4-Smiley-amp-Volume"><a href="#Lab-4-Smiley-amp-Volume" class="headerlink" title="Lab 4: Smiley &amp; Volume"></a>Lab 4: Smiley &amp; Volume</h1><blockquote><p>Lab4 Page: <a href="https://cs50.harvard.edu/x/2023/labs/4/">https://cs50.harvard.edu/x/2023/labs/4/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="What-to-Do"><a href="#What-to-Do" class="headerlink" title="What to Do"></a>What to Do</h2><ol><li>Log into <a href="https://code.cs50.io/">code.cs50.io</a> using your GitHub account</li><li>Run <code>update50</code> in your codespace‚Äôs terminal window to ensure your codespace is up-to-date and, when prompted, click <strong>Rebuild now</strong></li><li>Submit one of:<ul><li><a href="https://cs50.harvard.edu/x/2023/labs/4/smiley/">Smiley</a></li><li><a href="https://cs50.harvard.edu/x/2023/labs/4/volume/">Volume</a></li></ul></li></ol><p>If you submit both Smiley and Volume, we‚Äôll record the higher of your two scores.</p><hr><h2 id="Smiley"><a href="#Smiley" class="headerlink" title="Smiley"></a>Smiley</h2><blockquote><p><a href="https://cs50.harvard.edu/x/2023/labs/4/smiley/">https://cs50.harvard.edu/x/2023/labs/4/smiley/</a></p></blockquote><h2 id="Volume"><a href="#Volume" class="headerlink" title="Volume"></a>Volume</h2><blockquote><p><a href="https://cs50.harvard.edu/x/2023/labs/4/volume/">https://cs50.harvard.edu/x/2023/labs/4/volume/</a></p></blockquote><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Labs: <a href="https://github.com/Ricky2333/CS50-Labs">https://github.com/Ricky2333/CS50-Labs</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> CS50 Lab </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Problem Set3</title>
      <link href="/2023/04/22/cs50-problem-set3/"/>
      <url>/2023/04/22/cs50-problem-set3/</url>
      
        <content type="html"><![CDATA[<h1 id="CS50-Problem-Set3"><a href="#CS50-Problem-Set3" class="headerlink" title="CS50 Problem Set3"></a>CS50 Problem Set3</h1><blockquote><p>CS50 Problem Set3 PageÔºö<a href="https://cs50.harvard.edu/x/2023/psets/3/">https://cs50.harvard.edu/x/2023/psets/3/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="What-to-Do-üöÄ"><a href="#What-to-Do-üöÄ" class="headerlink" title="What to Do üöÄ"></a>What to Do üöÄ</h2><blockquote><p>Be sure you have completed <a href="https://cs50.harvard.edu/x/2023/labs/3/">Lab 3</a> before beginning this problem set.</p></blockquote><ol><li>Log into <a href="https://code.cs50.io/">code.cs50.io</a> using your GitHub account</li><li>Run <code>update50</code> in your codespace‚Äôs terminal window to ensure your codespace is up-to-date and, when prompted, click <strong>Rebuild now</strong></li><li>Submit <a href="https://cs50.harvard.edu/x/2023/psets/3/plurality/">Plurality</a></li><li>Submit one of:<ul><li><a href="https://cs50.harvard.edu/x/2023/psets/3/runoff/">Runoff</a>, if feeling less comfortable</li><li><a href="https://cs50.harvard.edu/x/2023/psets/3/tideman/">Tideman</a>, if feeling more comfortable</li></ul></li></ol><p>If you submit both Runoff and Tideman, we‚Äôll record the higher of your two scores.</p><hr><h2 id="Problem-Set-üìö"><a href="#Problem-Set-üìö" class="headerlink" title="Problem Set üìö"></a>Problem Set üìö</h2><h3 id="P1-Plurality"><a href="#P1-Plurality" class="headerlink" title="P1 - Plurality"></a>P1 - Plurality</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/3/plurality/">https://cs50.harvard.edu/x/2023/psets/3/plurality/</a></p></blockquote><h3 id="P2-Runoff"><a href="#P2-Runoff" class="headerlink" title="P2 - Runoff"></a>P2 - Runoff</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/3/runoff/">https://cs50.harvard.edu/x/2023/psets/3/runoff/</a></p></blockquote><h3 id="P3-Tideman"><a href="#P3-Tideman" class="headerlink" title="P3 - Tideman"></a>P3 - Tideman</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/3/tideman/">https://cs50.harvard.edu/x/2023/psets/3/tideman/</a></p></blockquote><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Problem Sets: <a href="https://github.com/Ricky2333/CS50-PSet">https://github.com/Ricky2333/CS50-PSet</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> C </tag>
            
            <tag> CS50 PSet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Lab3</title>
      <link href="/2023/04/21/cs50-lab3/"/>
      <url>/2023/04/21/cs50-lab3/</url>
      
        <content type="html"><![CDATA[<h1 id="Lab-3-Sort"><a href="#Lab-3-Sort" class="headerlink" title="Lab 3: Sort"></a>Lab 3: Sort</h1><blockquote><p>Lab3 Page: <a href="https://cs50.harvard.edu/x/2023/labs/3/">https://cs50.harvard.edu/x/2023/labs/3/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="Background-üßê"><a href="#Background-üßê" class="headerlink" title="Background üßê"></a>Background üßê</h2><p>Recall from lecture that we saw a few algorithms for sorting a sequence of numbers: selection sort, bubble sort, and merge sort.</p><ul><li>Selection sort iterates through the unsorted portions of a list, selecting the smallest element each time and moving it to its correct location.</li><li>Bubble sort compares pairs of adjacent values one at a time and swaps them if they are in the incorrect order. This continues until the list is sorted.</li><li>Merge sort recursively divides the list into two repeatedly and then merges the smaller lists back into a larger one in the correct order.</li></ul><h2 id="Getting-Started-üçâ"><a href="#Getting-Started-üçâ" class="headerlink" title="Getting Started üçâ"></a>Getting Started üçâ</h2><p>Open <a href="https://code.cs50.io/">VS Code</a>.</p><p>Start by clicking inside your terminal window, then execute <code>cd</code> by itself. You should find that its ‚Äúprompt‚Äù resembles the below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Click inside of that terminal window and then execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://cdn.cs50.net/2022/fall/labs/3/sort.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>followed by Enter in order to download a ZIP called <code>sort.zip</code> in your codespace. Take care not to overlook the space between <code>wget</code> and the following URL, or any other character for that matter!</p><p>Now execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> sort.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>to create a folder called <code>sort</code>. You no longer need the ZIP file, so you can execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> sort.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>and respond with ‚Äúy‚Äù followed by Enter at the prompt to remove the ZIP file you downloaded.</p><p>Now type</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token function">sort</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>followed by Enter to move yourself into (i.e., open) that directory. Your prompt should now resemble the below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sort/ $<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>If all was successful, you should execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>and you should see a collection of <code>.txt</code> files alongside executable programs <code>sort1</code>, <code>sort2</code>, and <code>sort3</code>.</p><p>If you run into any trouble, follow these same steps steps again and see if you can determine where you went wrong!</p><h2 id="Instructions"><a href="#Instructions" class="headerlink" title="Instructions"></a>Instructions</h2><p>Provided to you are three already-compiled C programs, <code>sort1</code>, <code>sort2</code>, and <code>sort3</code>. Each of these programs implements a different sorting algorithm: selection sort, bubble sort, or merge sort (though not necessarily in that order!). Your task is to determine which sorting algorithm is used by each file.</p><ul><li><code>sort1</code>, <code>sort2</code>, and <code>sort3</code> are binary files, so you won‚Äôt be able to view the C source code for each. To assess which sort implements which algorithm, run the sorts on different lists of values.</li><li>Multiple <code>.txt</code> files are provided to you. These files contain <code>n</code> lines of values, either reversed, shuffled, or sorted.<ul><li>For example, <code>reversed10000.txt</code> contains 10000 lines of numbers that are reversed from <code>10000</code>, while <code>random10000.txt</code> contains 10000 lines of numbers that are in random order.</li></ul></li><li>To run the sorts on the text files, in the terminal, run <code>./[program_name] [text_file.txt]</code> . Make sure you have made use of <code>cd</code> to move into the <code>sort</code> directory!<ul><li>For example, to sort <code>reversed10000.txt</code> with <code>sort1</code>, run <code>./sort1 reversed10000.txt</code>.</li></ul></li><li>You may find it helpful to time your sorts. To do so, run <code>time ./[sort_file] [text_file.txt]</code>.<ul><li>For example, you could run <code>time ./sort1 reversed10000.txt</code> to run <code>sort1</code> on 10,000 reversed numbers. At the end of your terminal‚Äôs output, you can look at the <code>real</code> time to see how much time actually elapsed while running the program.</li></ul></li><li>Record your answers in <code>answers.txt</code>, along with an explanation for each program, by filling in the blanks marked <code>TODO</code>.</li></ul><h2 id="Hints-üí°"><a href="#Hints-üí°" class="headerlink" title="Hints üí°"></a>Hints üí°</h2><ul><li>The different types of <code>.txt</code> files may help you determine which sort is which. Consider how each algorithm performs with an already sorted list. How about a reversed list? Or shuffled list? It may help to work through a smaller list of each type and walk through each sorting process.</li></ul><h2 id="Walkthrough-üé•"><a href="#Walkthrough-üé•" class="headerlink" title="Walkthrough üé•"></a>Walkthrough üé•</h2><blockquote><p>YouTube: <a href="https://youtu.be/-Bhxxw6JKKY">https://youtu.be/-Bhxxw6JKKY</a></p><p>bilibili: <a href="https://www.bilibili.com/video/BV1pX4y1B7cj?share_source=copy_web">https://www.bilibili.com/video/BV1pX4y1B7cj?share_source=copy_web</a></p></blockquote><h2 id="How-to-Check-Your-Answers-üñ•"><a href="#How-to-Check-Your-Answers-üñ•" class="headerlink" title="How to Check Your Answers üñ•"></a>How to Check Your Answers üñ•</h2><p>Execute the below to evaluate the correctness of your answers using <code>check50</code>. But be sure to fill in your explanations as well, which <code>check50</code> won‚Äôt check here!</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">check50 cs50/labs/2023/x/sort<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="How-to-Submit-üöÄ"><a href="#How-to-Submit-üöÄ" class="headerlink" title="How to Submit üöÄ"></a>How to Submit üöÄ</h2><p>In your terminal, execute the below to submit your work.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">submit50 cs50/labs/2023/x/sort<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Labs: <a href="https://github.com/Ricky2333/CS50-Labs">https://github.com/Ricky2333/CS50-Labs</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> CS50 Lab </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Problem Set2</title>
      <link href="/2023/04/20/cs50-problem-set2/"/>
      <url>/2023/04/20/cs50-problem-set2/</url>
      
        <content type="html"><![CDATA[<h1 id="CS50-Problem-Set2"><a href="#CS50-Problem-Set2" class="headerlink" title="CS50 Problem Set2"></a>CS50 Problem Set2</h1><blockquote><p>CS50 Problem Set2 PageÔºö<a href="https://cs50.harvard.edu/x/2023/psets/2/">https://cs50.harvard.edu/x/2023/psets/2/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="What-to-Do-üöÄ"><a href="#What-to-Do-üöÄ" class="headerlink" title="What to Do üöÄ"></a>What to Do üöÄ</h2><blockquote><p>Be sure you have completed <a href="https://cs50.harvard.edu/x/2023/labs/2/">Lab 2</a> before beginning this problem set.</p></blockquote><ol><li>Log into <a href="https://code.cs50.io/">code.cs50.io</a> using your GitHub account</li><li>Run <code>update50</code> in your codespace‚Äôs terminal window to ensure your codespace is up-to-date and, when prompted, click <strong>Rebuild now</strong></li><li>Submit <a href="https://cs50.harvard.edu/x/2023/psets/2/readability/">Readability</a></li><li>Submit one of:<ul><li><a href="https://cs50.harvard.edu/x/2023/psets/2/bulbs/">Bulbs</a>, if feeling less comfortable</li><li><a href="https://cs50.harvard.edu/x/2023/psets/2/caesar/">Caesar</a>, if feeling less comfortable</li><li><a href="https://cs50.harvard.edu/x/2023/psets/2/substitution/">Substitution</a>, if feeling more comfortable</li><li><a href="https://cs50.harvard.edu/x/2023/psets/2/wordle50/">Wordle50</a>, if feeling more comfortable</li></ul></li></ol><p>If you submit more than one of Bulbs, Caesar, Substitution, or Wordle50, we‚Äôll record the single highest of your scores among those problems.</p><hr><h2 id="Problem-Set-üìö"><a href="#Problem-Set-üìö" class="headerlink" title="Problem Set üìö"></a>Problem Set üìö</h2><h3 id="P1-Bulbs"><a href="#P1-Bulbs" class="headerlink" title="P1 - Bulbs"></a>P1 - Bulbs</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/2/bulbs/">https://cs50.harvard.edu/x/2023/psets/2/bulbs/</a></p></blockquote><h3 id="P2-Caesar"><a href="#P2-Caesar" class="headerlink" title="P2 - Caesar"></a>P2 - Caesar</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/2/caesar/">https://cs50.harvard.edu/x/2023/psets/2/caesar/</a></p></blockquote><h3 id="P3-Substitution"><a href="#P3-Substitution" class="headerlink" title="P3 - Substitution"></a>P3 - Substitution</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/2/substitution/">https://cs50.harvard.edu/x/2023/psets/2/substitution/</a></p></blockquote><h3 id="P4-Wordle50"><a href="#P4-Wordle50" class="headerlink" title="P4 - Wordle50"></a>P4 - Wordle50</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/2/wordle50/">https://cs50.harvard.edu/x/2023/psets/2/wordle50/</a></p></blockquote><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Problem Sets: <a href="https://github.com/Ricky2333/CS50-PSet">https://github.com/Ricky2333/CS50-PSet</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> C </tag>
            
            <tag> CS50 PSet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Lab2</title>
      <link href="/2023/04/19/cs50-lab2/"/>
      <url>/2023/04/19/cs50-lab2/</url>
      
        <content type="html"><![CDATA[<h1 id="Lab-2-Scrabble"><a href="#Lab-2-Scrabble" class="headerlink" title="Lab 2: Scrabble"></a>Lab 2: Scrabble</h1><blockquote><p>Lab2 Page: <a href="https://cs50.harvard.edu/x/2023/labs/2/">https://cs50.harvard.edu/x/2023/labs/2/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="Background-üßê"><a href="#Background-üßê" class="headerlink" title="Background üßê"></a>Background üßê</h2><p>In the game of <a href="https://scrabble.hasbro.com/en-us/rules">Scrabble</a>, players create words to score points, and the number of points is the sum of the point values of each letter in the word.</p><table><thead><tr><th>Letter</th><th>Points</th></tr></thead><tbody><tr><td><strong>A</strong></td><td>1</td></tr><tr><td><strong>B</strong></td><td>3</td></tr><tr><td><strong>C</strong></td><td>3</td></tr><tr><td><strong>D</strong></td><td>2</td></tr><tr><td><strong>E</strong></td><td>1</td></tr><tr><td><strong>F</strong></td><td>4</td></tr><tr><td><strong>G</strong></td><td>2</td></tr><tr><td><strong>H</strong></td><td>4</td></tr><tr><td><strong>I</strong></td><td>1</td></tr><tr><td><strong>J</strong></td><td>8</td></tr><tr><td><strong>K</strong></td><td>5</td></tr><tr><td><strong>L</strong></td><td>1</td></tr><tr><td><strong>M</strong></td><td>3</td></tr><tr><td><strong>N</strong></td><td>1</td></tr><tr><td><strong>O</strong></td><td>1</td></tr><tr><td><strong>P</strong></td><td>3</td></tr><tr><td><strong>Q</strong></td><td>10</td></tr><tr><td><strong>R</strong></td><td>1</td></tr><tr><td><strong>S</strong></td><td>1</td></tr><tr><td><strong>T</strong></td><td>1</td></tr><tr><td><strong>U</strong></td><td>1</td></tr><tr><td><strong>V</strong></td><td>4</td></tr><tr><td><strong>W</strong></td><td>4</td></tr><tr><td><strong>X</strong></td><td>8</td></tr><tr><td><strong>Y</strong></td><td>4</td></tr><tr><td>Z</td><td>10</td></tr></tbody></table><p>For example, if we wanted to score the word <code>Code</code>, we would note that in general Scrabble rules, the <code>C</code> is worth <code>3</code> points, the <code>o</code> is worth <code>1</code> point, the <code>d</code> is worth <code>2</code> points, and the <code>e</code> is worth <code>1</code> point. Summing these, we get that <code>Code</code> is worth <code>3 + 1 + 2 + 1 = 7</code> points.</p><h2 id="Getting-Started-üçâ"><a href="#Getting-Started-üçâ" class="headerlink" title="Getting Started üçâ"></a>Getting Started üçâ</h2><p>Open <a href="https://code.cs50.io/">VS Code</a>.</p><p>Start by clicking inside your terminal window, then execute <code>cd</code> by itself. You should find that its ‚Äúprompt‚Äù resembles the below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Click inside of that terminal window and then execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://cdn.cs50.net/2022/fall/labs/2/scrabble.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>followed by Enter in order to download a ZIP called <code>scrabble.zip</code> in your codespace. Take care not to overlook the space between <code>wget</code> and the following URL, or any other character for that matter!</p><p>Now execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> scrabble.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>to create a folder called <code>scrabble</code>. You no longer need the ZIP file, so you can execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> scrabble.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>and respond with ‚Äúy‚Äù followed by Enter at the prompt to remove the ZIP file you downloaded.</p><p>Now type</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> scrabble<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>followed by Enter to move yourself into (i.e., open) that directory. Your prompt should now resemble the below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">scrabble/ $<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>If all was successful, you should execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>and you should see a file called <code>scrabble.c</code>. Open that file by executing the below:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">code scrabble.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>If you run into any trouble, follow these same steps steps again and see if you can determine where you went wrong!</p><h2 id="Walkthrough-üé•"><a href="#Walkthrough-üé•" class="headerlink" title="Walkthrough üé•"></a>Walkthrough üé•</h2><blockquote><p>YouTube: <a href="https://youtu.be/RtjxxxlN1gc">https://youtu.be/RtjxxxlN1gc</a></p><p>bilibili: <a href="https://www.bilibili.com/video/BV1Do4y1t7Dv?share_source=copy_web">https://www.bilibili.com/video/BV1Do4y1t7Dv?share_source=copy_web</a></p></blockquote><h2 id="Implementation-Details-‚òòÔ∏è"><a href="#Implementation-Details-‚òòÔ∏è" class="headerlink" title="Implementation Details ‚òòÔ∏è"></a>Implementation Details ‚òòÔ∏è</h2><p>Complete the implementation of <code>scrabble.c</code>, such that it determines the winner of a short scrabble-like game, where two players each enter their word, and the higher scoring player wins.</p><ul><li>Notice that we‚Äôve stored the point values of each letter of the alphabet in an integer array named <code>POINTS</code><ul><li>For example, <code>A</code> or <code>a</code> is worth 1 point (represented by <code>POINTS[0]</code>), <code>B</code> or <code>b</code> is worth 3 points (represented by <code>POINTS[1]</code>), etc.</li></ul></li><li>Notice that we‚Äôve created a prototype for a helper function called <code>compute_score()</code> that takes a string as input and returns an <code>int</code>. Whenever we would like to assign point values to a particular word, we can call this function. Note that this prototype is required for C to know that <code>compute_score()</code> exists later in the program.</li><li>In <code>main()</code>, the program prompts the two players for their words using the <code>get_string()</code> function. These values are stored inside variables named <code>word1</code> and <code>word2</code>.</li><li>In <code>compute_score()</code>, your program should compute, using the <code>POINTS</code> array, and return the score for the string argument. Characters that are not letters should be given zero points, and uppercase and lowercase letters should be given the same point values.<ul><li>For example, <code>!</code> is worth <code>0</code> points while <code>A</code> and <code>a</code> are both worth <code>1</code> point.</li><li>Though Scrabble rules normally require that a word be in the dictionary, no need to check for that in this problem!</li></ul></li><li>In <code>main()</code>, your program should print, depending on the players‚Äô scores, <code>Player 1 wins!</code>, <code>Player 2 wins!</code>, or <code>Tie!</code>.</li></ul><h2 id="How-to-Test-Your-Code-üñ•"><a href="#How-to-Test-Your-Code-üñ•" class="headerlink" title="How to Test Your Code üñ•"></a>How to Test Your Code üñ•</h2><p>Your program should behave per the examples below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ./scrabblePlayer <span class="token number">1</span>: Question?Player <span class="token number">2</span>: Question<span class="token operator">!</span>Tie<span class="token operator">!</span>$ ./scrabblePlayer <span class="token number">1</span>: Oh,Player <span class="token number">2</span>: hai<span class="token operator">!</span>Player <span class="token number">2</span> wins<span class="token operator">!</span>$ ./scrabblePlayer <span class="token number">1</span>: COMPUTERPlayer <span class="token number">2</span>: sciencePlayer <span class="token number">1</span> wins<span class="token operator">!</span>$ ./scrabblePlayer <span class="token number">1</span>: ScrabblePlayer <span class="token number">2</span>: wiNNeRPlayer <span class="token number">1</span> wins<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Execute the below to evaluate the correctness of your code using <code>check50</code>. But be sure to compile and test it yourself as well!</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">check50 cs50/labs/2023/x/scrabble<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Execute the below to evaluate the style of your code using <code>style50</code>.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">style50 scrabble.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="How-to-Submit-üöÄ"><a href="#How-to-Submit-üöÄ" class="headerlink" title="How to Submit üöÄ"></a>How to Submit üöÄ</h2><p>In your terminal, execute the below to submit your work.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">submit50 cs50/labs/2023/x/scrabble<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Labs: <a href="https://github.com/Ricky2333/CS50-Labs">https://github.com/Ricky2333/CS50-Labs</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> CS50 Lab </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Practice Problems</title>
      <link href="/2023/04/18/cs50-practice-problems-week1/"/>
      <url>/2023/04/18/cs50-practice-problems-week1/</url>
      
        <content type="html"><![CDATA[<h1 id="Week1-Practice-Problems"><a href="#Week1-Practice-Problems" class="headerlink" title="Week1-Practice Problems"></a>Week1-Practice Problems</h1><blockquote><p>Practice Problems Page: <a href="https://cs50.harvard.edu/x/2023/problems/1/">https://cs50.harvard.edu/x/2023/problems/1/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><p>These problems assume that you have already set up your CS50 Codespace in <a href="https://cs50.harvard.edu/x/2023/labs/1/">Lab 1</a>. Be sure to complete that before attempting these problems.</p><p>In addition to this week‚Äôs lab and problem set, you‚Äôre welcome to try any of these (optional!) practice problems:</p><ul><li><a href="https://cs50.harvard.edu/x/2023/problems/1/debug/">Debug</a>, for becoming familiar with C syntax and debugging programs</li><li><a href="https://cs50.harvard.edu/x/2023/problems/1/half/">Half</a>, for practice creating a function</li><li><a href="https://cs50.harvard.edu/x/2023/problems/1/prime/">Prime</a>, for practice using <code>for</code> loops</li></ul><hr><h2 id="P1-Debug"><a href="#P1-Debug" class="headerlink" title="P1-Debug"></a>P1-Debug</h2><blockquote><p><a href="https://cs50.harvard.edu/x/2023/problems/1/debug/">https://cs50.harvard.edu/x/2023/problems/1/debug/</a></p></blockquote><h3 id="Learning-Goals-üéØ"><a href="#Learning-Goals-üéØ" class="headerlink" title="Learning Goals üéØ"></a>Learning Goals üéØ</h3><ul><li>Become familiar with C syntax</li><li>Learn what C compiler error messages mean</li><li>Get practice debugging</li></ul><h3 id="Code-üßëüèª‚Äçüíª"><a href="#Code-üßëüèª‚Äçüíª" class="headerlink" title="Code üßëüèª‚Äçüíª"></a>Code üßëüèª‚Äçüíª</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// Become familiar wih C syntax</span><span class="token comment">// Learn to debug buggy code</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cs50.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// Ask for your name and where live</span>    string name <span class="token operator">=</span> <span class="token function">get_string</span><span class="token punctuation">(</span><span class="token string">"What is your name? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    string location <span class="token operator">=</span> <span class="token function">get_string</span><span class="token punctuation">(</span><span class="token string">"Where do you live? "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Say hello</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, %s, from %s!\n"</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> location<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="P2-Half"><a href="#P2-Half" class="headerlink" title="P2-Half"></a>P2-Half</h2><h3 id="Learning-Goals-üéØ-1"><a href="#Learning-Goals-üéØ-1" class="headerlink" title="Learning Goals üéØ"></a>Learning Goals üéØ</h3><ul><li>Work with different data types</li><li>Practice type casting</li><li>Use math operations</li><li>Create a function with input parameters and return value</li></ul><h3 id="Code-üßëüèª‚Äçüíª-1"><a href="#Code-üßëüèª‚Äçüíª-1" class="headerlink" title="Code üßëüèª‚Äçüíª"></a>Code üßëüèª‚Äçüíª</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// Calculate your half of a restaurant bill</span><span class="token comment">// Data types, operations, type casting, return value</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cs50.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">float</span> <span class="token function">half</span><span class="token punctuation">(</span><span class="token keyword">float</span> bill<span class="token punctuation">,</span> <span class="token keyword">float</span> tax<span class="token punctuation">,</span> <span class="token keyword">int</span> tip<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">float</span> bill_amount <span class="token operator">=</span> <span class="token function">get_float</span><span class="token punctuation">(</span><span class="token string">"Bill before tax and tip: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">float</span> tax_percent <span class="token operator">=</span> <span class="token function">get_float</span><span class="token punctuation">(</span><span class="token string">"Sale Tax Percent: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> tip_percent <span class="token operator">=</span> <span class="token function">get_int</span><span class="token punctuation">(</span><span class="token string">"Tip percent: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"You will owe $%.2f each!\n"</span><span class="token punctuation">,</span> <span class="token function">half</span><span class="token punctuation">(</span>bill_amount<span class="token punctuation">,</span> tax_percent<span class="token punctuation">,</span> tip_percent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// TODO: Complete the function</span><span class="token keyword">float</span> <span class="token function">half</span><span class="token punctuation">(</span><span class="token keyword">float</span> bill<span class="token punctuation">,</span> <span class="token keyword">float</span> tax<span class="token punctuation">,</span> <span class="token keyword">int</span> tip<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// add tax to the bill</span>    bill <span class="token operator">+=</span> bill <span class="token operator">*</span> tax <span class="token operator">/</span> <span class="token number">100.0</span><span class="token punctuation">;</span>    <span class="token comment">// add tip to the bill</span>    bill <span class="token operator">+=</span> bill <span class="token operator">*</span> tip <span class="token operator">/</span> <span class="token number">100.0</span><span class="token punctuation">;</span>    <span class="token comment">// split the bill</span>    <span class="token keyword">return</span> bill <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="P3-Prime"><a href="#P3-Prime" class="headerlink" title="P3-Prime"></a>P3-Prime</h2><blockquote><p><a href="https://cs50.harvard.edu/x/2023/problems/1/prime/">https://cs50.harvard.edu/x/2023/problems/1/prime/</a></p></blockquote><h3 id="Learning-Goals-üéØ-2"><a href="#Learning-Goals-üéØ-2" class="headerlink" title="Learning Goals üéØ"></a>Learning Goals üéØ</h3><ul><li>Practice using <code>for</code> loops</li><li>Using modulo</li><li>Creating a Boolean function</li></ul><h3 id="Code-üßëüèª‚Äçüíª-2"><a href="#Code-üßëüèª‚Äçüíª-2" class="headerlink" title="Code üßëüèª‚Äçüíª"></a>Code üßëüèª‚Äçüíª</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cs50.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>bool <span class="token function">prime</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// get the lower bound</span>    <span class="token keyword">int</span> min<span class="token punctuation">;</span>    <span class="token keyword">do</span>    <span class="token punctuation">{</span>        min <span class="token operator">=</span> <span class="token function">get_int</span><span class="token punctuation">(</span><span class="token string">"Minimum: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>min <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// get the upper bound</span>    <span class="token keyword">int</span> max<span class="token punctuation">;</span>    <span class="token keyword">do</span>    <span class="token punctuation">{</span>        max <span class="token operator">=</span> <span class="token function">get_int</span><span class="token punctuation">(</span><span class="token string">"Maximum: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>min <span class="token operator">&gt;=</span> max<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// list prime numbers in this range</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> min<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> max<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">prime</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%i\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// check if number is a prime number</span>bool <span class="token function">prime</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">// TODO</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> number <span class="token operator">/</span> i<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>number <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">return</span> false<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> true<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Problem Set1</title>
      <link href="/2023/04/18/cs50-problem-set1/"/>
      <url>/2023/04/18/cs50-problem-set1/</url>
      
        <content type="html"><![CDATA[<h1 id="CS50-Problem-Set1"><a href="#CS50-Problem-Set1" class="headerlink" title="CS50 Problem Set1"></a>CS50 Problem Set1</h1><blockquote><p>CS50 Problem Set1 PageÔºö<a href="https://cs50.harvard.edu/x/2023/psets/1/">https://cs50.harvard.edu/x/2023/psets/1/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="What-to-Do-üöÄ"><a href="#What-to-Do-üöÄ" class="headerlink" title="What to Do üöÄ"></a>What to Do üöÄ</h2><blockquote><p>Be sure you have completed <a href="https://cs50.harvard.edu/x/2023/labs/1/">Lab 1</a> before beginning this problem set.</p></blockquote><ol><li>Log into <a href="https://code.cs50.io/">code.cs50.io</a> using your GitHub account.</li><li>Run <code>update50</code> in your codespace‚Äôs terminal window to ensure your codespace is up-to-date and, when prompted, click <strong>Rebuild now</strong></li><li>Submit <a href="https://cs50.harvard.edu/x/2023/psets/1/hello/">Hello</a></li><li>Submit one of:<ul><li><a href="https://cs50.harvard.edu/x/2023/psets/1/mario/less/">this version of Mario</a> if feeling less comfortable</li><li><a href="https://cs50.harvard.edu/x/2023/psets/1/mario/more/">this version of Mario</a> if feeling more comfortable</li></ul></li><li>Submit one of:<ul><li><a href="https://cs50.harvard.edu/x/2023/psets/1/cash/">Cash</a> if feeling less comfortable</li><li><a href="https://cs50.harvard.edu/x/2023/psets/1/credit/">Credit</a> if feeling more comfortable</li></ul></li></ol><p>If you submit both versions of Mario, we‚Äôll record the higher of your two scores. If you submit both Cash and Credit, we‚Äôll record the higher of your two scores.</p><hr><h2 id="Problem-Set-üìö"><a href="#Problem-Set-üìö" class="headerlink" title="Problem Set üìö"></a>Problem Set üìö</h2><h3 id="P1-Hello"><a href="#P1-Hello" class="headerlink" title="P1 - Hello"></a>P1 - Hello</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/1/hello/">https://cs50.harvard.edu/x/2023/psets/1/hello/</a></p></blockquote><h3 id="P2-Mario-less"><a href="#P2-Mario-less" class="headerlink" title="P2 - Mario-less"></a>P2 - Mario-less</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/1/mario/less/">https://cs50.harvard.edu/x/2023/psets/1/mario/less/</a></p></blockquote><h3 id="P3-Mario-more"><a href="#P3-Mario-more" class="headerlink" title="P3 - Mario-more"></a>P3 - Mario-more</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/1/mario/more/">https://cs50.harvard.edu/x/2023/psets/1/mario/more/</a></p></blockquote><h3 id="P4-Cash"><a href="#P4-Cash" class="headerlink" title="P4 - Cash"></a>P4 - Cash</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/1/cash/">https://cs50.harvard.edu/x/2023/psets/1/cash/</a></p></blockquote><h3 id="P5-Credit"><a href="#P5-Credit" class="headerlink" title="P5 - Credit"></a>P5 - Credit</h3><blockquote><p><a href="https://cs50.harvard.edu/x/2023/psets/1/credit/">https://cs50.harvard.edu/x/2023/psets/1/credit/</a></p></blockquote><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Problem Sets: <a href="https://github.com/Ricky2333/CS50-PSet">https://github.com/Ricky2333/CS50-PSet</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> C </tag>
            
            <tag> CS50 PSet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS50 Lab1</title>
      <link href="/2023/04/17/cs50-lab1/"/>
      <url>/2023/04/17/cs50-lab1/</url>
      
        <content type="html"><![CDATA[<h1 id="Lab-1-Population-Growth"><a href="#Lab-1-Population-Growth" class="headerlink" title="Lab 1: Population Growth"></a>Lab 1: Population Growth</h1><blockquote><p>Lab1 Page: <a href="https://cs50.harvard.edu/x/2023/labs/1/">https://cs50.harvard.edu/x/2023/labs/1/</a></p><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote><h2 id="Background-üßê"><a href="#Background-üßê" class="headerlink" title="Background üßê"></a>Background üßê</h2><p>Say we have a population of <code>n</code> llamas. Each year, <code>n / 3</code> new llamas are born, and <code>n / 4</code> llamas pass away.</p><p>For example, if we were to start with <code>n = 1200</code> llamas, then in the first year, <code>1200 / 3 = 400</code> new llamas would be born and <code>1200 / 4 = 300</code> llamas would pass away. At the end of that year, we would have <code>1200 + 400 - 300 = 1300</code> llamas.</p><p>To try another example, if we were to start with <code>n = 1000</code> llamas, at the end of the year, we would have <code>1000 / 3 = 333.33</code> new llamas. We can‚Äôt have a decimal portion of a llama, though, so we‚Äôll truncate the decimal to get <code>333</code> new llamas born. <code>1000 / 4 = 250</code> llamas will pass away, so we‚Äôll end up with a total of <code>1000 + 333 - 250 = 1083</code> llamas at the end of the year.</p><h2 id="Getting-Started-üçâ"><a href="#Getting-Started-üçâ" class="headerlink" title="Getting Started üçâ"></a>Getting Started üçâ</h2><p>Recall that Visual Studio Code (aka VS Code) is a popular ‚Äúintegrated development environment‚Äù (IDE) via which you can write code. So that you don‚Äôt have to download, install, and configure your own copy of VS Code, we‚Äôll use a cloud-based version instead that has everything you‚Äôll need pre-installed.</p><ol><li>Log into <a href="https://code.cs50.io/">code.cs50.io</a> using your GitHub account and follow the on-screen instructions to set up your very own ‚Äúcodespace‚Äù for Visual Studio Code. Once your codespace loads, you should see that, by default, VS Code is divided into three regions. Toward the top of VS Code is your ‚Äútext editor,‚Äù where you‚Äôll write all of your programs. Toward the bottom is a ‚Äúterminal window,‚Äù a command-line interface (CLI) that allows you to explore your codespace‚Äôs files and directories (aka folders), compile code, and run programs. And on the left is your file ‚Äúexplorer,‚Äù a graphical user interface (GUI) via which you can also explore your codespace‚Äôs files and directories.</li><li>Once your codespace has loaded, close any <strong>Welcome</strong> tabs that might have opened by default</li><li>Log into <a href="https://submit.cs50.io/">submit.cs50.io</a> using your GitHub account and click <strong>Authorize cs50</strong> to activate <code>check50</code>.</li><li>Run <code>update50</code> in your codespace‚Äôs terminal window to ensure your codespace is up-to-date and, if prompted, click <strong>Rebuild now</strong>.</li></ol><p>Once complete, start by clicking inside your terminal window, then execute <code>cd</code> by itself. You should find that its ‚Äúprompt‚Äù resembles the below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Click inside of that terminal window and then type</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> population<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>followed by Enter in order to make a directory called <code>population</code> in your codespace. Take care not to overlook the space between <code>mkdir</code> and <code>population</code> or any other character for that matter!</p><p>Here on out, to execute (i.e., run) a command means to type it into a terminal window and then hit Enter. Commands are case-sensitive, so be sure not to type in uppercase when you mean lowercase or vice versa.</p><p>Now execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> population<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>to move yourself into (i.e., open) that directory. Your prompt should now resemble the below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">population/ $<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Click inside of that terminal window and then type</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://cdn.cs50.net/2022/fall/labs/1/population.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>followed by Enter in order to download a template file called <code>population.c</code> in your codespace. Take care not to overlook the space between <code>wget</code> and the following URL, or any other character for that matter! If all was successful, you should execute</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>and see a file named <code>population.c</code>. Executing <code>code population.c</code> should open the file where you will type your code for this lab. If not, retrace your steps and see if you can determine where you went wrong!</p><h2 id="Walkthrough-üé•"><a href="#Walkthrough-üé•" class="headerlink" title="Walkthrough üé•"></a>Walkthrough üé•</h2><blockquote><p>YouTube: <a href="https://www.youtube.com/watch?v=dZmtRHHUB1M&amp;ab_channel=CS50">https://www.youtube.com/watch?v=dZmtRHHUB1M&amp;ab_channel=CS50</a></p><p>bilibili: <a href="https://www.bilibili.com/video/BV1CX4y1z79G?share_source=copy_web">https://www.bilibili.com/video/BV1CX4y1z79G?share_source=copy_web</a></p></blockquote><h2 id="Implementation-Details-‚òòÔ∏è"><a href="#Implementation-Details-‚òòÔ∏è" class="headerlink" title="Implementation Details ‚òòÔ∏è"></a>Implementation Details ‚òòÔ∏è</h2><p>Complete the implementation of <code>population.c</code>, such that it calculates the number of years required for the population to grow from the start size to the end size.</p><ul><li>Your program should first prompt the user for a starting population size.<ul><li>If the user enters a number less than 9 (the minimum allowed population size), the user should be re-prompted to enter a starting population size until they enter a number that is greater than or equal to 9. (If we start with fewer than 9 llamas, the population of llamas will quickly become stagnant!)</li></ul></li><li>Your program should then prompt the user for an ending population size.<ul><li>If the user enters a number less than the starting population size, the user should be re-prompted to enter an ending population size until they enter a number that is greater than or equal to the starting population size. (After all, we want the population of llamas to grow!)</li></ul></li><li>Your program should then calculate the (integer) number of years required for the population to reach at least the size of the end value.</li><li>Finally, your program should print the number of years required for the llama population to reach that end size, as by printing to the terminal <code>Years: n</code>, where <code>n</code> is the number of years.</li></ul><h2 id="How-to-Test-Your-Code-üñ•"><a href="#How-to-Test-Your-Code-üñ•" class="headerlink" title="How to Test Your Code üñ•"></a>How to Test Your Code üñ•</h2><p>Your program should behave per these examples below.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ./populationStart size: <span class="token number">1200</span>End size: <span class="token number">1300</span>Years: <span class="token number">1</span>$ ./populationStart size: <span class="token parameter variable">-5</span>Start size: <span class="token number">3</span>Start size: <span class="token number">9</span>End size: <span class="token number">5</span>End size: <span class="token number">18</span>Years: <span class="token number">8</span>$ ./populationStart size: <span class="token number">20</span>End size: <span class="token number">1</span>End size: <span class="token number">10</span>End size: <span class="token number">100</span>Years: <span class="token number">20</span>$ ./populationStart size: <span class="token number">100</span>End size: <span class="token number">1000000</span>Years: <span class="token number">115</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Execute the below to evaluate the correctness of your code using <code>check50</code>. But be sure to compile and test it yourself as well!</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">check50 cs50/labs/2023/x/population<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Execute the below to evaluate the style of your code using <code>style50</code>.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">style50 population.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="How-to-Submit-üöÄ"><a href="#How-to-Submit-üöÄ" class="headerlink" title="How to Submit üöÄ"></a>How to Submit üöÄ</h2><p>In your terminal, execute the below to submit your work.</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">submit50 cs50/labs/2023/x/population<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="Solution-üßëüèª‚Äçüíª"><a href="#Solution-üßëüèª‚Äçüíª" class="headerlink" title="Solution üßëüèª‚Äçüíª"></a>Solution üßëüèª‚Äçüíª</h2><p>Ricky‚Äôs GitHub Repository for CS50 Labs: <a href="https://github.com/Ricky2333/CS50-Labs">https://github.com/Ricky2333/CS50-Labs</a></p><blockquote><p>CS50 Study GroupÔºö677535709ÔºàQQ GroupÔºâ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CS50 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> CS50 Lab </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitÊïôÁ®ã</title>
      <link href="/2023/04/16/git-jiao-cheng/"/>
      <url>/2023/04/16/git-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>Êú¨ÁØáÂçöÂÆ¢ËøòÂú®‰øÆÊîπÊ∂¶Ëâ≤‰∏≠ÔΩû</p><p>Êï¨ËØ∑ÊúüÂæÖÔΩû</p>]]></content>
      
      
      <categories>
          
          <category> GitÊïôÁ®ã </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> CS50W </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python VS CÔºà‰∏ãÁØáÔºâ</title>
      <link href="/2023/04/15/python-vs-c-xia-pian/"/>
      <url>/2023/04/15/python-vs-c-xia-pian/</url>
      
        <content type="html"><![CDATA[<h2 id="ÂÜôÂú®ÊúÄÂâç-‚úçÔ∏è"><a href="#ÂÜôÂú®ÊúÄÂâç-‚úçÔ∏è" class="headerlink" title="ÂÜôÂú®ÊúÄÂâç ‚úçÔ∏è"></a>ÂÜôÂú®ÊúÄÂâç ‚úçÔ∏è</h2><p>Âú®‰∏ä‰∏ÄÁØáÂçöÂÆ¢ <a href="https://rickyxcoder.top/2023/04/14/python-vs-c-shang-pian/">Python VS CÔºà‰∏äÁØáÔºâ</a>‰∏≠ÔºåÊëä‰∏ª‰ªéÁ®ãÂ∫èËøêË°åËøáÁ®ã„ÄÅÊ®°ÂùóÂØºÂÖ•„ÄÅÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûã„ÄÅÂèòÈáè„ÄÅËøêÁÆóÁ¨¶„ÄÅÊù°‰ª∂ËØ≠Âè•Á≠âËßíÂ∫¶ÂØπ CËØ≠Ë®Ä Âíå Python ËøõË°å‰∫ÜÂØπÊØî„ÄÇ</p><p>ÈÇ£Âú®ËøôÁØáÂçöÂÆ¢‰∏≠ÔºåÊëä‰∏ªÂ∞ÜÊõ¥Ëøõ‰∏ÄÊ≠•Ôºå‰ªéÂæ™ÁéØ„ÄÅÂáΩÊï∞ÂÆö‰πâ„ÄÅËæìÂÖ•„ÄÅËæìÂá∫Á≠âËßíÂ∫¶ÔºåÂØπËøô‰∏§‰∏™ËØ≠Ë®ÄËøõË°åÂØπÊØîÔºåÂ∏ÆÂä©ÊéåÊè°ÂÖ∂‰∏≠‰∏ÄÈó®ËØ≠Ë®ÄÁöÑÂ∞è‰ºô‰º¥Âø´ÈÄü‰∏äÊâãÂè¶‰∏ÄÈó®ËØ≠Ë®Ä„ÄÇ</p><blockquote><p>Êú¨ÁØáÂçöÂÆ¢‰πüÊòØÊëä‰∏ªÁöÑ <strong><a href="https://cs50.harvard.edu/x/2023/">CS50</a></strong> ËØæÁ®ãÂ≠¶‰π†Á¨îËÆ∞„ÄÇ</p><p><strong><a href="https://cs50.harvard.edu/x/2023/">CS50</a></strong> ÊòØÂìà‰ΩõÂ§ßÂ≠¶ÁöÑËÆ°ÁÆóÊú∫ÂØºËÆ∫ÂÖ¨ÂºÄËØæÔºå‰πüÊòØÊëä‰∏ªÊà™Ê≠¢ÁõÆÂâçËÆ§‰∏∫ÊúÄÊ£íÁöÑËÆ°ÁÆóÊú∫ÂØºËÆ∫ËØæÁ®ã„ÄÇ</p><p>ÊéàËØæÁöÑ <a href="https://cs.harvard.edu/malan/">David J. Malan</a> ÊïôÊéàÊòØÊëä‰∏ªËßÅËøáÁöÑÂØπËÆ°ÁÆóÊú∫ÊïôÂ≠¶ÊúÄÁÉ≠ÊÉÖÁöÑËÄÅÂ∏àÔºå‰πüÊòØÂú®ËÆ°ÁÆóÊú∫Âü∫Á°ÄÊïôÂ≠¶È¢ÜÂüüÂØπÊëä‰∏ªÂΩ±ÂìçÊúÄÂ§ßÁöÑ‰∏Ä‰ΩçËÄÅÂ∏à„ÄÇÊëä‰∏ª‰πüÂ∏åÊúõÈÄöËøáËá™Â∑±ÁöÑÂä™ÂäõÔºå‰∏çÊñ≠Âêë Malan ÊïôÊéàËøôÊ†∑ÁöÑÂ§ßÁâõÁúãÈΩê„ÄÇ</p><p>ÊúâÂÖ¥Ë∂£ÁöÑÂ∞è‰ºô‰º¥ÂèØ‰ª•ÁÇπÂáª‰∏ãÈù¢ÁöÑÈìæÊé•ÔºåÊü•Áúã <strong>CS50</strong> ËØæÁ®ãÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØ„ÄÇ</p><p><strong>CS50</strong> ÂÆòÊñπËØæÁ®ãÁΩëÁ´ôÔºö<a href="https://cs50.harvard.edu/x/2023/">https://cs50.harvard.edu/x/2023/</a></p></blockquote><hr><h2 id="Ê≠£ÊñáÔºà‰∏ãÁØáÔºâ"><a href="#Ê≠£ÊñáÔºà‰∏ãÁØáÔºâ" class="headerlink" title="Ê≠£ÊñáÔºà‰∏ãÁØáÔºâ"></a>Ê≠£ÊñáÔºà‰∏ãÁØáÔºâ</h2><h3 id="whileÂæ™ÁéØ"><a href="#whileÂæ™ÁéØ" class="headerlink" title="whileÂæ™ÁéØ"></a>whileÂæ™ÁéØ</h3><h4 id="CËØ≠Ë®Ä"><a href="#CËØ≠Ë®Ä" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">while</span> <span class="token punctuation">(</span>Êù°‰ª∂<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Âæ™ÁéØ‰Ωì<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> Êù°‰ª∂<span class="token punctuation">:</span>    Âæ™ÁéØ‰Ωì<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  i<span class="token operator">+</span><span class="token operator">+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>‰∏çÂêåÁÇπÔºö</p><ul><li>CËØ≠Ë®ÄÁöÑÊù°‰ª∂Ë°®ËææÂºèÈúÄË¶ÅÁî±Êã¨Âè∑<code>()</code> Êã¨Ëµ∑Êù•ÔºåËÄå Python ÁöÑÊù°‰ª∂Ë°®ËææÂºèÊó†ÈúÄÊ∑ªÂä† <code>()</code> Ôºà‰ΩÜÊòØÂä†‰∫Ü‰πüÊ≤°ÈîôÔºâ</li><li>CËØ≠Ë®Ä‰∏≠ÔºåÂæ™ÁéØ‰ΩìÈúÄË¶Å‰ΩøÁî® <strong>Ëä±Êã¨Âè∑</strong> <code>{}</code> Êã¨Ëµ∑Êù•ÔºõËÄå Python ‰∏≠ÔºåÂæ™ÁéØ‰ΩìÊòØÁî± <strong>Áº©Ëøõ</strong> Êù•Ë°®Á§∫ÁöÑ‰∏ÄÊÆµ‰ª£Á†ÅÂùóÔºå‰∏îÈúÄË¶ÅÂú®Êù°‰ª∂Ë°®ËææÂºèÂêéÊ∑ªÂä† <code>:</code></li></ul><hr><h3 id="forÂæ™ÁéØ"><a href="#forÂæ™ÁéØ" class="headerlink" title="forÂæ™ÁéØ"></a>forÂæ™ÁéØ</h3><h4 id="CËØ≠Ë®Ä-1"><a href="#CËØ≠Ë®Ä-1" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span> <span class="token punctuation">(</span>ÂàùÂßãÂåñË°®ËææÂºè<span class="token punctuation">;</span> Êù°‰ª∂Ë°®ËææÂºè<span class="token punctuation">;</span> Êõ¥Êñ∞Ë°®ËææÂºè<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Âæ™ÁéØ‰Ωì<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Python-1"><a href="#Python-1" class="headerlink" title="Python"></a>Python</h4><p>Âú® Python ‰∏≠Ôºåfor Âæ™ÁéØÁöÑÂèòÈáèÊòØ <strong>Ëø≠‰ª£Âô®</strong>ÔºàiteratorÔºâÔºåÂèØ‰ª•ÊòØ‰ªª‰ΩïÂèØËø≠‰ª£ÁöÑÂØπË±°Ôºå‰æãÂ¶ÇÂàóË°®„ÄÅÂÖÉÁªÑ„ÄÅÂ≠óÂÖ∏„ÄÅÂ≠óÁ¨¶‰∏≤Á≠â„ÄÇ</p><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> ÂèòÈáè <span class="token keyword">in</span> Â∫èÂàó<span class="token punctuation">:</span>    Âæ™ÁéØ‰Ωì<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>‰∏çÂêåÁÇπÔºö</p><ul><li>Âú® C ËØ≠Ë®Ä‰∏≠Ôºåfor Âæ™ÁéØ‰ΩøÁî®‰∏Ä‰∏™ <strong>Âæ™ÁéØÂèòÈáè</strong> Êù•Ë°®Á§∫Âæ™ÁéØÊ¨°Êï∞ÔºåÂèØ‰ª•‰ΩøÁî® <code>++</code> Âíå <code>--</code> ËøêÁÆóÁ¨¶Êù•ÈÄíÂ¢ûÊàñÈÄíÂáèÂæ™ÁéØÂèòÈáèÁöÑÂÄºÔºõËÄåÂú® Python ‰∏≠Ôºåfor Âæ™ÁéØ‰ΩøÁî®‰∏Ä‰∏™ <strong>Ëø≠‰ª£Âô®</strong> Êù•Ë°®Á§∫Âæ™ÁéØÊ¨°Êï∞ÔºåÂæ™ÁéØÂèòÈáèÊòØÊ†πÊçÆËø≠‰ª£Âô®ÁöÑÂÄºËá™Âä®ËÆ°ÁÆóÂæóÂà∞ÁöÑ„ÄÇ</li><li>Âú® C ËØ≠Ë®Ä‰∏≠ÔºåÂæ™ÁéØËåÉÂõ¥ÊòØ‰∏Ä‰∏™Êï∞ÂÄºÂå∫Èó¥ÔºåÈÄöÂ∏∏‰ΩøÁî®Âæ™ÁéØÂèòÈáèÁöÑÂÄºÊù•Ë°®Á§∫Âæ™ÁéØÊ¨°Êï∞ÔºõËÄåÂú® Python ‰∏≠ÔºåÂæ™ÁéØËåÉÂõ¥ÊòØ‰∏Ä‰∏™Â∫èÂàóÔºåÂèØ‰ª•ÊòØ‰ªª‰ΩïÂèØËø≠‰ª£ÁöÑÂØπË±°Ôºå‰æãÂ¶ÇÂàóË°®„ÄÅÂÖÉÁªÑ„ÄÅÂ≠óÂÖ∏„ÄÅÂ≠óÁ¨¶‰∏≤Á≠â„ÄÇ</li></ul><hr><h3 id="do-whileÂæ™ÁéØ"><a href="#do-whileÂæ™ÁéØ" class="headerlink" title="do-whileÂæ™ÁéØ"></a>do-whileÂæ™ÁéØ</h3><h4 id="CËØ≠Ë®Ä-2"><a href="#CËØ≠Ë®Ä-2" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>Âíå <code>while</code> Âæ™ÁéØ‰∏çÂêåÔºå <code>do-while</code> Âæ™ÁéØ‰ºö <strong>ÂÖàÊâßË°å‰∏ÄÊ¨°Âæ™ÁéØ‰Ωì</strong>ÔºåÁÑ∂ÂêéÂÜçÊ†πÊçÆÂæ™ÁéØÊù°‰ª∂Êù•ÂÜ≥ÂÆöÊòØÂê¶ÁªßÁª≠ÊâßË°åÂæ™ÁéØ„ÄÇ</p><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">do</span> <span class="token punctuation">{</span>    Âæ™ÁéØ‰Ωì<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>Êù°‰ª∂<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">do</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-2"><a href="#Python-2" class="headerlink" title="Python"></a>Python</h4><p>Python ‰∏≠ <strong>Ê≤°ÊúâÂéüÁîüÁöÑ do-while Âæ™ÁéØÁªìÊûÑ</strong>Ôºå‰ΩÜÊòØÂèØ‰ª•ÈÄöËøá <code>while</code> Âæ™ÁéØÂíå <code>break</code> ËØ≠Âè•Êù•ÂÆûÁé∞Á±ª‰ºº‰∫é <code>do-while</code> Âæ™ÁéØÁöÑÊïàÊûú„ÄÇ</p><p>ÂÆû‰æã</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    i <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> i <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="ÂáΩÊï∞ÂÆö‰πâ"><a href="#ÂáΩÊï∞ÂÆö‰πâ" class="headerlink" title="ÂáΩÊï∞ÂÆö‰πâ"></a>ÂáΩÊï∞ÂÆö‰πâ</h3><h4 id="CËØ≠Ë®Ä-3"><a href="#CËØ≠Ë®Ä-3" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">ËøîÂõûÁ±ªÂûã ÂáΩÊï∞Âêç<span class="token punctuation">(</span>ÂèÇÊï∞ÂàóË°®<span class="token punctuation">)</span> <span class="token punctuation">{</span>    ÂáΩÊï∞‰Ωì<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// ËÆ°ÁÆó1ÔΩûn‰πãÂíå</span><span class="token keyword">int</span> <span class="token function">get_sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        res <span class="token operator">+=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> res<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-3"><a href="#Python-3" class="headerlink" title="Python"></a>Python</h4><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> ÂáΩÊï∞Âêç<span class="token punctuation">(</span>ÂèÇÊï∞ÂàóË°®<span class="token punctuation">)</span><span class="token punctuation">:</span>    ÂáΩÊï∞‰Ωì<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ËÆ°ÁÆó1ÔΩûn‰πãÂíå</span><span class="token keyword">def</span> <span class="token function">get_sum</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>        res <span class="token operator">+=</span> i    <span class="token keyword">return</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>üçâ PSÔºöCËØ≠Ë®Ä‰∏≠ÔºåÈúÄË¶ÅÊåáÂÆöËøîÂõûÂÄºÁ±ªÂûãÔºàÊ≤°ÊúâËøîÂõûÂÄºÔºåÈúÄË¶ÅÂÜô <code>void</code>ÔºâÔºõËÄåÂú® Python ‰∏≠ÔºåÂ∞±ÂÉèÊó†ÈúÄÊåáÂÆöÂèòÈáèÁ±ªÂûã‰∏ÄÊ†∑ÔºåÊó†ÈúÄÊåáÂÆöËøîÂõûÂÄºÁ±ªÂûã„ÄÇ</p><hr><h3 id="ËæìÂÖ•"><a href="#ËæìÂÖ•" class="headerlink" title="ËæìÂÖ•"></a>ËæìÂÖ•</h3><h4 id="CËØ≠Ë®Ä-4"><a href="#CËØ≠Ë®Ä-4" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>CËØ≠Ë®Ä‰ΩøÁî®<code>scanf</code> ËØ≠Âè•ËøõË°åËæìÂÖ•Ôºå<code>scanf</code> Âú®ËØªÂèñ‰∏çÂêåÁ±ªÂûãÁöÑÊï∞ÊçÆÊó∂ÔºåÈúÄË¶Å‰ΩøÁî®‰∏çÂêåÁöÑÊ†ºÂºèËØªÂèñ„ÄÇ</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">float</span> f<span class="token punctuation">;</span><span class="token keyword">double</span> avg<span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token punctuation">;</span><span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ËØªÂÖ•‰∏Ä‰∏™Êï¥Êï∞</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%f"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ËØªÂÖ•‰∏Ä‰∏™ÂçïÁ≤æÂ∫¶ÊµÆÁÇπÊï∞</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lf"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>avg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ËØªÂÖ•‰∏Ä‰∏™ÂèåÁ≤æÂ∫¶ÊµÆÁÇπÊï∞</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ËØªÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// ËØªÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-4"><a href="#Python-4" class="headerlink" title="Python"></a>Python</h4><p>Python ‰ΩøÁî® <code>input()</code> ËØ≠Âè•ËøõË°åËæìÂÖ•ÔºåÂÖ∂ËøîÂõûÂÄºÂùá‰∏∫Â≠óÁ¨¶‰∏≤„ÄÇÊâÄ‰ª•Â¶ÇÊûúÊÉ≥Ë¶ÅÂØπËæìÂÖ•ÂÄºËøõË°åÂêéÁª≠Â§ÑÁêÜÔºåÈúÄË¶ÅËøõË°åÊï∞ÊçÆÁ±ªÂûãÁöÑËΩ¨Êç¢„ÄÇ</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"ËØ∑ËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞Ôºö"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"ËØ∑ËæìÂÖ•‰∏Ä‰∏™ÊµÆÁÇπÊï∞Ôºö"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>s <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"ËØ∑ËæìÂÖ•‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤Ôºö"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>üçâ PSÔºöÂú®ËØªÂèñÁî®Êà∑ËæìÂÖ•ÁöÑÊï∞ÊçÆÊó∂ÔºåÂèØËÉΩ‰ºöÂá∫Áé∞‰∏Ä‰∫õÂºÇÂ∏∏ÊÉÖÂÜµÔºå‰æãÂ¶ÇËæìÂÖ•ÁöÑÊï∞ÊçÆÊ†ºÂºè‰∏çÊ≠£Á°ÆÁ≠â„ÄÇ‰∏∫‰∫ÜÈÅøÂÖçËøô‰∫õÂºÇÂ∏∏ÊÉÖÂÜµÂØºËá¥Á®ãÂ∫èÂ¥©Ê∫ÉÔºåPython ‰ΩøÁî® <strong>ÂºÇÂ∏∏Â§ÑÁêÜÊú∫Âà∂</strong> ÂØπËøô‰∫õÂºÇÂ∏∏ÊÉÖÂÜµËøõË°åÂ§ÑÁêÜ„ÄÇ</p><p>Python ‰ΩøÁî® <code>try-except</code> ËØ≠Âè•Êù•ÊçïËé∑ <strong>ValueError</strong> ÂºÇÂ∏∏ÔºåÂ¶ÇÊûúÂèëÁîüËøôÁßçÂºÇÂ∏∏ÔºåÂàôËæìÂá∫ÊèêÁ§∫‰ø°ÊÅØ„ÄÇÈÄöËøáËøôÁßçÊñπÂºèÔºåÂèØ‰ª•‰øùËØÅÁ®ãÂ∫èÂú®ÂèëÁîüÂºÇÂ∏∏ÊÉÖÂÜµÊó∂‰∏ç‰ºöÂ¥©Ê∫ÉÔºåËÄåÊòØËøõË°åÁõ∏Â∫îÁöÑÂ§ÑÁêÜ„ÄÇ</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">try</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"ËØ∑ËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞Ôºö"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ËæìÂÖ•ÁöÑÊï∞ÊçÆ‰∏çÊòØÊï¥Êï∞ÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•ÔºÅ"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>Âú® <strong>ÁÆóÊ≥ïÁ´ûËµõ</strong> ‰∏≠ÔºåC/C++ Âíå Python ÁöÑËæìÂÖ•‰πüÊúâ‰∏çÂ∞ëÂ∑ÆÂà´„ÄÇ</p><p>Áî±‰∫éÁÆóÊ≥ïÁ´ûËµõ‰∏≠ÁöÑËæìÂÖ•Á±ªÂûãËæÉ‰∏∫ÁπÅÂ§öÔºåÊëä‰∏ªÊâìÁÆóÂçïÁã¨ÂÜô‰∏ÄÁØáÂçöÂÆ¢ÔºåÂàó‰∏æÁÆóÊ≥ïÁ´ûËµõ‰∏≠ C/C++ Âíå Python ÁöÑËæìÂÖ•ÂØπÊØîÔºåÊúâÂÖ¥Ë∂£ÁöÑÂ∞è‰ºô‰º¥‰ª¨ÂèØ‰ª•Â∞èÂ∞èÊúüÂæÖ‰∏Ä‰∏ã„ÄÇ</p></blockquote><hr><h3 id="ËæìÂá∫"><a href="#ËæìÂá∫" class="headerlink" title="ËæìÂá∫"></a>ËæìÂá∫</h3><h4 id="CËØ≠Ë®Ä-5"><a href="#CËØ≠Ë®Ä-5" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>CËØ≠Ë®Ä‰ΩøÁî® <code>printf</code> ËØ≠Âè•ËøõË°åËæìÂá∫Ôºå‰∏îÈúÄË¶ÅËá™Ë°å‰ΩøÁî® <code>\n</code> ÊéßÂà∂Êç¢Ë°å„ÄÇ</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span><span class="token keyword">double</span> avg <span class="token operator">=</span> <span class="token number">3.1415926</span><span class="token punctuation">;</span><span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token char">'a'</span><span class="token punctuation">;</span><span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"hello, world"</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token operator">*</span>pn <span class="token operator">=</span> <span class="token operator">&amp;</span>n<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>     <span class="token comment">// ËæìÂá∫‰∏Ä‰∏™Êï¥Êï∞</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%f\n"</span><span class="token punctuation">,</span>f<span class="token punctuation">)</span>     <span class="token comment">// ËæìÂá∫‰∏Ä‰∏™ÂçïÁ≤æÂ∫¶ÊµÆÁÇπÊï∞</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lf\n"</span><span class="token punctuation">,</span>avg<span class="token punctuation">)</span>  <span class="token comment">// ËæìÂá∫‰∏Ä‰∏™ÂèåÁ≤æÂ∫¶ÊµÆÁÇπÊï∞</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c\n"</span><span class="token punctuation">,</span>c<span class="token punctuation">)</span>     <span class="token comment">// ËæìÂá∫‰∏Ä‰∏™Â≠óÁ¨¶</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span>str<span class="token punctuation">)</span>   <span class="token comment">// ËæìÂá∫‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%p\n"</span><span class="token punctuation">,</span> pn<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ËæìÂá∫‰∏Ä‰∏™ÊåáÈíà</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-5"><a href="#Python-5" class="headerlink" title="Python"></a>Python</h4><p>Python ‰ΩøÁî® <code>print</code> ËØ≠Âè•ËøõË°åËæìÂá∫Ôºå‰∏î <code>print</code> ËØ≠Âè•ÈªòËÆ§Âú®ÁªìÂ∞æË°•ÂÖÖ‰∏Ä‰∏™ <code>\n</code> ËøõË°åÊç¢Ë°å„ÄÇÔºàÂèØ‰ª•ÈÄöËøáËÆæÁΩÆ <code>end</code> ÂèÇÊï∞ÊîπÂèòÈªòËÆ§ÁöÑ <code>\n</code> ÂÄºÔºåËßÅ‰∏ãÊñáÔºâ</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ËæìÂá∫‰∏Ä‰∏™Êï¥Êï∞</span>n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"ËØ∑ËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞Ôºö"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Êï¥Êï∞Ôºö"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token comment"># ËæìÂá∫‰∏Ä‰∏™ÊµÆÁÇπÊï∞</span>f <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"ËØ∑ËæìÂÖ•‰∏Ä‰∏™ÊµÆÁÇπÊï∞Ôºö"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"ÊµÆÁÇπÊï∞Ôºö"</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token comment"># ËæìÂá∫‰∏Ä‰∏™Â≠óÁ¨¶‰∏≤</span>s <span class="token operator">=</span> <span class="token string">"Hello, world!"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Â≠óÁ¨¶‰∏≤Ôºö"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><br><p>üçâ Ë°•ÂÖÖ1ÔºöÂú® <strong>Python 3</strong> ‰∏≠Ôºå<code>print</code> ÂáΩÊï∞ÁöÑÁî®Ê≥ïÂèëÁîü‰∫Ü‰∏Ä‰∫õÂèòÂåñÔºåÂèØ‰ª•ÈÄöËøáËÆæÁΩÆ <code>sep</code> Âíå <code>end</code> ÂèÇÊï∞Êù•ÊéßÂà∂ËæìÂá∫ÁöÑÊ†ºÂºèÔºö</p><ul><li><p><code>sep</code> ÂèÇÊï∞Áî®‰∫éÊåáÂÆöÂêÑ‰∏™ÂèÇÊï∞‰πãÈó¥ÁöÑÂàÜÈöîÁ¨¶ÔºåÈªòËÆ§‰∏∫‰∏Ä‰∏™Á©∫Ê†ºÔºõ</p><ul><li><p>ËæìÂÖ•</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">123</span>f <span class="token operator">=</span> <span class="token number">3.14</span>s <span class="token operator">=</span> <span class="token string">"Hello, world!"</span><span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> f<span class="token punctuation">,</span> s<span class="token punctuation">,</span> sep<span class="token operator">=</span><span class="token string">", "</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ËæìÂá∫</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">,</span> Hello<span class="token punctuation">,</span> world!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p><code>end</code> ÂèÇÊï∞Áî®‰∫éÊåáÂÆöËæìÂá∫ÁªìÊùüÊó∂‰ΩøÁî®ÁöÑÂ≠óÁ¨¶ÔºåÈªòËÆ§‰∏∫‰∏Ä‰∏™Êç¢Ë°åÁ¨¶„ÄÇ</p><ul><li><p>ËæìÂÖ•</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">123</span>f <span class="token operator">=</span> <span class="token number">3.14</span>s <span class="token operator">=</span> <span class="token string">"Hello, world!"</span><span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> f<span class="token punctuation">,</span> s<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">"~"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ËæìÂá∫</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">123</span> <span class="token number">3.14</span> Hello<span class="token punctuation">,</span> world!<span class="token operator">~</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><br><p>üçâ Ë°•ÂÖÖ2ÔºöÂú® <strong>Python 3</strong> ‰∏≠Ôºå<code>print</code> ÂáΩÊï∞ËøòÂèØ‰ª•ÈÄöËøáÊåáÂÆö <strong>Ê†ºÂºèÂåñÂ≠óÁ¨¶‰∏≤</strong> ÁöÑÊñπÂºèÊù•ËæìÂá∫ÂèòÈáèÂÄº„ÄÇ</p><p>ÈÄöËøáÂú®Â≠óÁ¨¶‰∏≤ÂâçÊ∑ªÂä† <code>f</code> ‰ª£Ë°® <strong>format</strong> Â≠óÁ¨¶‰∏≤ÔºåÂ≠óÁ¨¶‰∏≤ÂÜÖ‰ΩøÁî®‰∏ÄÂØπËä±Êã¨Âè∑ <code>{ÂèòÈáèÂêç}</code> Êù•ËæìÂá∫ÂèòÈáèÁöÑÂÄº„ÄÇ</p><ul><li><p>ÂÆû‰æã1ÔºöÂ≠óÁ¨¶‰∏≤ÊãºÊé•</p><ul><li><p>‰ª£Á†Å</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"Ricky"</span>hobby <span class="token operator">=</span> <span class="token string">"coding"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Hello, </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">\nYour hobby is </span><span class="token interpolation"><span class="token punctuation">{</span>hobby<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>ËæìÂá∫ÁªìÊûú</p><pre class="line-numbers language-none"><code class="language-none">Hello, RickyYour hobby is coding<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>ÂÆû‰æã2ÔºöÂ≠óÁ¨¶‰∏≤ÊãºÊé•ÂÖ∂‰ªñÁ±ªÂûãÂèòÈáè</p><ul><li><p>‰ª£Á†Å</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"Ricky"</span>age <span class="token operator">=</span> <span class="token number">20</span>score <span class="token operator">=</span> <span class="token number">99.99</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Hello, </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">\nYour age is </span><span class="token interpolation"><span class="token punctuation">{</span>age<span class="token punctuation">}</span></span><span class="token string">\nYour score is </span><span class="token interpolation"><span class="token punctuation">{</span>score<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>ËæìÂá∫ÁªìÊûú</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Hello<span class="token punctuation">,</span> RickyYour age <span class="token keyword">is</span> <span class="token number">20</span>Your score <span class="token keyword">is</span> <span class="token number">99.99</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>ÂÆû‰æã3ÔºöÊåáÂÆöÊµÆÁÇπÊï∞Á≤æÂ∫¶‰∏∫4‰Ωç</p><ul><li><p>‰ª£Á†Å</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">pi <span class="token operator">=</span> <span class="token number">3.1415926</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"ÂúÜÂë®ÁéáÊòØÔºö</span><span class="token interpolation"><span class="token punctuation">{</span>pi<span class="token punctuation">:</span><span class="token format-spec">.4f</span><span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>ËæìÂá∫ÁªìÊûú</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ÂúÜÂë®ÁéáÊòØÔºö<span class="token number">3.1415</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul><hr><h2 id="ÂÜôÂú®ÊúÄÂêé-‚úçÔ∏è"><a href="#ÂÜôÂú®ÊúÄÂêé-‚úçÔ∏è" class="headerlink" title="ÂÜôÂú®ÊúÄÂêé ‚úçÔ∏è"></a>ÂÜôÂú®ÊúÄÂêé ‚úçÔ∏è</h2><p>Áî±‰∫éÁØáÂπÖÊúâÈôêÔºåÂçöÂÆ¢‰∏≠Êúâ‰∏çÂ∞ëËØ≠Ê≥ïÁªÜËäÇÊ≤°ÊúâÂ±ïÂºÄÔºå‰æãÂ¶Ç Python <code>print</code> ËæìÂá∫ÁöÑÂ§öÁßçÊñπÂºèÁ≠âÔºåÊúâÂÖ¥Ë∂£ÁöÑÂ∞è‰ºô‰º¥ÂèØ‰ª•Ëá™Ë°åÊé¢Á¥¢„ÄÇ</p><p>ËÄåÂÉè Python ‰∏≠ÁöÑ‰∏Ä‰∫õÂèØËø≠‰ª£ÂØπË±°ÔºàÂ¶ÇÂàóË°®„ÄÅÂ≠óÂÖ∏„ÄÅÈõÜÂêà„ÄÅÂÖÉÁªÑÁ≠âÔºâ‰∏é C++ ‰∏≠ÂêÑÁßç STL ÂÆπÂô®ÁöÑÂØπÊØî‰πüÊ≤°ÊúâÂú®Êú¨ÁØáÂçöÂÆ¢‰∏≠ÂëàÁé∞ÔºåÊòØÂõ†‰∏∫Ëøô‰∫õÊï∞ÊçÆÁ±ªÂûãÁöÑÂØπÊØîÔºåÊØè‰∏Ä‰∏™ÈÉΩÂÄºÂæóÂÜô‰∏ÄÊï¥ÁØáÂçöÂÆ¢ÔºåÊâÄ‰ª•Ê≤°ÊúâÂåÜÂøôÁöÑÂàóÂÖ•ËøôÁØáÂçöÂÆ¢‰∏≠„ÄÇ</p><p>ÂΩìÁÑ∂ÔºåÊëä‰∏ª‰πü‰ºöÂú®ÂêéÁª≠ÁöÑÂçöÂÆ¢‰∏≠‰∏çÊñ≠ÂÆåÂñÑÁõ∏ÂÖ≥ÂÜÖÂÆπÔºåÊÑüÂÖ¥Ë∂£ÁöÑÂ∞è‰ºô‰º¥‰ª¨ÂèØ‰ª•ÊúüÂæÖ‰∏ÄÊ≥¢ÔºåÊàë‰ª¨‰∏ãÁØáÂçöÂÆ¢ÂÜçËßÅüëã</p><hr><h2 id="ÂèÇËÄÉËµÑÊñô-üìö"><a href="#ÂèÇËÄÉËµÑÊñô-üìö" class="headerlink" title="ÂèÇËÄÉËµÑÊñô üìö"></a>ÂèÇËÄÉËµÑÊñô üìö</h2><p>PythonÂÆòÊñπÊïôÁ®ãÔºö<a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p><p>CS50Ôºö<a href="https://cs50.harvard.edu/x/2023/">https://cs50.harvard.edu/x/2023/</a></p><p>ChatGPTÔºö<a href="https://openai.com/blog/chatgpt">https://openai.com/blog/chatgpt</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> C </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python VS CÔºà‰∏äÁØáÔºâ</title>
      <link href="/2023/04/14/python-vs-c-shang-pian/"/>
      <url>/2023/04/14/python-vs-c-shang-pian/</url>
      
        <content type="html"><![CDATA[<h2 id="ÂÜôÂú®ÊúÄÂâç-‚úçÔ∏è"><a href="#ÂÜôÂú®ÊúÄÂâç-‚úçÔ∏è" class="headerlink" title="ÂÜôÂú®ÊúÄÂâç ‚úçÔ∏è"></a>ÂÜôÂú®ÊúÄÂâç ‚úçÔ∏è</h2><p>Áõ∏‰ø°‰∏çÂ∞ëÁßëÁè≠ÁöÑÂêåÂ≠¶ÊúÄÂÖàÂ≠¶‰π†ÁöÑÁºñÁ®ãËØ≠Ë®ÄÊòØ <strong>CËØ≠Ë®Ä</strong>„ÄÇ</p><p>‰πãÂêéÂõ†‰∏∫ÂêÑÁßçÂêÑÊ†∑ÁöÑÈúÄÊ±ÇÔºåÂ∞±ÂéªÂ≠¶‰π†‰∫ÜÊõ¥Â§öÁöÑËØ≠Ë®ÄÔºåÊØîÂ¶Ç <strong>Python</strong>Ôºå<strong>Java</strong> Á≠â„ÄÇ</p><p>Â¶Ç‰ªä <strong>Python</strong> ÁöÑÁÉ≠Â∫¶ÂèØ‰ª•ËØ¥ÊòØË∂äÊù•Ë∂äÈ´òÔºå‰æùÈù†ÂÖ∂Âº∫Â§ßÁöÑËÆ°ÁÆóÁîüÊÄÅÔºåPython Áâ¢Áâ¢Âç†ÊçÆ <a href="https://www.tiobe.com/tiobe-index/">TIOBE ÁÉ≠Èó®ÁºñÁ®ãËØ≠Ë®ÄÊéíË°åÊ¶ú</a> TOP3 ÁöÑ‰ΩçÁΩÆÔºàÂÜôÁ®øÊó•Ôºö2023 Âπ¥ 4 Êúà 14 Êó•ÔºåPython ÊòØ TOP1Ôºâ„ÄÇ</p><p>Áõ∏ÊØî CËØ≠Ë®ÄÔºå<strong>Python</strong> Âú®‰∫∫Â∑•Êô∫ËÉΩ„ÄÅÊï∞ÊçÆÁßëÂ≠¶„ÄÅËá™Âä®Âåñ„ÄÅÁΩëÈ°µÂºÄÂèëÁ≠âÈ¢ÜÂüüÊúâÊõ¥Âä†ÂπøÊ≥õÁöÑÂ∫îÁî®„ÄÇ</p><p>‰ΩÜÊòØ‰ªé <strong>Âü∫Êú¨ËØ≠Ê≥ï</strong> ÁöÑËßíÂ∫¶Êù•ÁúãÔºåPython Âíå CËØ≠Ë®Ä <strong>Êúâ‰∏çÂ∞ëÂÖ±ÈÄö‰πãÂ§Ñ</strong>„ÄÇ</p><p>ÊâÄ‰ª•Êú¨ÊñáÂ∞Ü‰ªéËøô‰∏™ËßíÂ∫¶ÂàáÂÖ•ÔºåÂàó‰∏æ Python Âíå CËØ≠Ë®Ä Âú®Âü∫Á°ÄËØ≠Ê≥ï‰∏äÁöÑÂºÇÂêåÁÇπÔºåÂ∏ÆÂä©Â∑≤ÁªèÊéåÊè° CËØ≠Ë®ÄÁöÑÂêåÂ≠¶Êõ¥Âø´‰∏äÊâã Python„ÄÇ</p><blockquote><p>Êú¨ÁØáÂçöÂÆ¢‰πüÊòØÊëä‰∏ªÁöÑ <strong><a href="https://cs50.harvard.edu/x/2023/">CS50</a></strong> ËØæÁ®ãÂ≠¶‰π†Á¨îËÆ∞„ÄÇ</p><p><strong><a href="https://cs50.harvard.edu/x/2023/">CS50</a></strong> ÊòØÂìà‰ΩõÂ§ßÂ≠¶ÁöÑËÆ°ÁÆóÊú∫ÂØºËÆ∫ÂÖ¨ÂºÄËØæÔºå‰πüÊòØÊëä‰∏ªÊà™Ê≠¢ÁõÆÂâçËÆ§‰∏∫ÊúÄÊ£íÁöÑËÆ°ÁÆóÊú∫ÂØºËÆ∫ËØæÁ®ã„ÄÇ</p><p>ÊéàËØæÁöÑ <a href="https://cs.harvard.edu/malan/">David J. Malan</a> ÊïôÊéàÊòØÊëä‰∏ªËßÅËøáÁöÑÂØπËÆ°ÁÆóÊú∫ÊïôÂ≠¶ÊúÄÁÉ≠ÊÉÖÁöÑËÄÅÂ∏àÔºå‰πüÊòØÂú®ËÆ°ÁÆóÊú∫Âü∫Á°ÄÊïôÂ≠¶È¢ÜÂüüÂØπÊëä‰∏ªÂΩ±ÂìçÊúÄÂ§ßÁöÑ‰∏Ä‰ΩçËÄÅÂ∏à„ÄÇÊëä‰∏ª‰πüÂ∏åÊúõÈÄöËøáËá™Â∑±ÁöÑÂä™ÂäõÔºå‰∏çÊñ≠Âêë Malan ÊïôÊéàËøôÊ†∑ÁöÑÂ§ßÁâõÁúãÈΩê„ÄÇ</p><p>ÊúâÂÖ¥Ë∂£ÁöÑÂ∞è‰ºô‰º¥ÂèØ‰ª•ÁÇπÂáª‰∏ãÈù¢ÁöÑÈìæÊé•ÔºåÊü•Áúã <strong>CS50</strong> ËØæÁ®ãÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØ„ÄÇ</p><p><strong>CS50</strong> ÂÆòÊñπËØæÁ®ãÁΩëÁ´ôÔºö<a href="https://cs50.harvard.edu/x/2023/">https://cs50.harvard.edu/x/2023/</a></p></blockquote><hr><h2 id="Ê≠£ÊñáÔºà‰∏äÁØáÔºâ"><a href="#Ê≠£ÊñáÔºà‰∏äÁØáÔºâ" class="headerlink" title="Ê≠£ÊñáÔºà‰∏äÁØáÔºâ"></a>Ê≠£ÊñáÔºà‰∏äÁØáÔºâ</h2><h3 id="Á®ãÂ∫èËøêË°åËøáÁ®ã"><a href="#Á®ãÂ∫èËøêË°åËøáÁ®ã" class="headerlink" title="Á®ãÂ∫èËøêË°åËøáÁ®ã"></a>Á®ãÂ∫èËøêË°åËøáÁ®ã</h3><h4 id="CËØ≠Ë®Ä"><a href="#CËØ≠Ë®Ä" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>Âú® <strong>CËØ≠Ë®Ä</strong> ‰∏≠ÔºåÊ∫ê‰ª£Á†Å <code>test.c</code> ÈÄöËøá <strong>ÁºñËØëÂô®</strong> ÁºñËØë‰∏∫ÂèØÊâßË°åÊñá‰ª∂ <code>test</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token parameter variable">-o</span> <span class="token builtin class-name">test</span> test.c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÊâßË°åËØ•Êñá‰ª∂</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>Python ÊòØ <strong>Ëß£ÈáäÂûãËØ≠Ë®Ä</strong>Ôºå‰∏çÈúÄË¶ÅÁºñËØëÊàêÂèØÊâßË°åÊñá‰ª∂ÔºåÊ∫ê‰ª£Á†Å <code>test.py</code> ÂèØ‰ª•Áõ¥Êé•Ë¢´ <strong>Ëß£ÈáäÂô®</strong> ËØªÂèñÂíåÊâßË°åÔºåËß£ÈáäÂô®‰ºöÈÄêË°åËß£Èáä‰ª£Á†ÅÂπ∂ÊâßË°åÁõ∏Â∫îÁöÑÊìç‰Ωú„ÄÇ</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python test.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="Â∫ì-x2F-Ê®°ÂùóÁöÑÂØºÂÖ•"><a href="#Â∫ì-x2F-Ê®°ÂùóÁöÑÂØºÂÖ•" class="headerlink" title="Â∫ì/Ê®°ÂùóÁöÑÂØºÂÖ•"></a>Â∫ì/Ê®°ÂùóÁöÑÂØºÂÖ•</h3><h4 id="CËØ≠Ë®Ä-1"><a href="#CËØ≠Ë®Ä-1" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;...&gt;</span>  <span class="token comment">// Âü∫Êú¨ËØ≠Ê≥ï</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span>  <span class="token comment">// ÂÆû‰æã</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="Python-1"><a href="#Python-1" class="headerlink" title="Python"></a>Python</h4><p>Âü∫Êú¨ËØ≠Ê≥ï</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> <span class="token operator">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span>            <span class="token comment"># ÂØºÂÖ•Êï¥‰∏™Ê®°Âùó</span><span class="token keyword">import</span> <span class="token operator">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span> <span class="token keyword">as</span> <span class="token operator">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span>   <span class="token comment"># ÂØºÂÖ•Êï¥‰∏™Ê®°ÂùóÂπ∂‰∏îÁªôÊ®°ÂùóÂèñÂà´Âêç</span><span class="token keyword">from</span> <span class="token operator">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> <span class="token operator">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span> <span class="token comment"># ÂØºÂÖ•Ê®°Âùó‰∏≠ÁöÑÊüê‰∏™ÊñπÊ≥ïÊàñÂ±ûÊÄß</span><span class="token keyword">from</span> <span class="token operator">&lt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> <span class="token operator">*</span>     <span class="token comment"># ÂØºÂÖ•Ê®°Âùó‰∏≠ÁöÑÊâÄÊúâÊñπÊ≥ïÂíåÂ±ûÊÄß</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>ÂÆû‰æã</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> csv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> math <span class="token keyword">import</span> sqrt<span class="token punctuation">,</span> sin<span class="token punctuation">,</span> cos<span class="token keyword">from</span> datetime <span class="token keyword">import</span> <span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="‰∏ªÂáΩÊï∞"><a href="#‰∏ªÂáΩÊï∞" class="headerlink" title="‰∏ªÂáΩÊï∞"></a>‰∏ªÂáΩÊï∞</h3><h4 id="CËØ≠Ë®Ä-2"><a href="#CËØ≠Ë®Ä-2" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><p>Âú®CËØ≠Ë®Ä‰∏≠Ôºå‰∏ªÂáΩÊï∞ <code>main</code> ÊòØÁ®ãÂ∫èÊâßË°åÁöÑËµ∑ÁÇπÔºåÂÆÉÁöÑÂáΩÊï∞ÂéüÂûãÂ¶Ç‰∏ãÔºö</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÂÖ∂‰∏≠Ôºå<code>argc</code> Ë°®Á§∫ÂëΩ‰ª§Ë°åÂèÇÊï∞ÁöÑÊï∞ÈáèÔºå<code>argv</code> ÊòØ‰∏Ä‰∏™ÊåáÂêëÊØè‰∏™ÂèÇÊï∞ÁöÑÊåáÈíàÊï∞ÁªÑ„ÄÇ‰∏ªÂáΩÊï∞ÂèØ‰ª•ÈÄöËøáÂëΩ‰ª§Ë°åÂèÇÊï∞Êù•Êé•Êî∂Â§ñÈÉ®‰º†ÈÄíËøõÊù•ÁöÑÊï∞ÊçÆ„ÄÇ</p><p>‰∏Ä‰∫õÁâπÁÇπ</p><ul><li><p><code>main</code> ÂáΩÊï∞ÂøÖÈ°ªÂ≠òÂú®‰∫éÁ®ãÂ∫è‰∏≠ÔºåÂê¶ÂàôÁºñËØëÂô®‰ºöÊä•Èîô„ÄÇ</p></li><li><p><code>main</code> ÂáΩÊï∞‰∏≠ÁöÑ‰ª£Á†ÅÂ∞ÜÊåâÁÖß‰ªé‰∏äÂà∞‰∏ãÁöÑÈ°∫Â∫è‰æùÊ¨°ÊâßË°å„ÄÇ</p></li><li><p>Á®ãÂ∫èÊâßË°åÁªìÊùüÂêéÔºå<code>main</code> ÂáΩÊï∞ÂèØ‰ª•ËøîÂõû‰∏Ä‰∏™Êï¥Êï∞ÂÄºÔºåË°®Á§∫Á®ãÂ∫èÁöÑÊâßË°åÁªìÊûú„ÄÇ‰∏ÄËà¨Êù•ËØ¥ÔºåËøîÂõûÂÄº‰∏∫ 0 Ë°®Á§∫Á®ãÂ∫èÊâßË°åÊàêÂäüÔºåÈùûÈõ∂ÂÄºË°®Á§∫Á®ãÂ∫èÊâßË°åÂ§±Ë¥•ÊàñÂá∫Èîô„ÄÇ</p></li></ul><p>CËØ≠Ë®Ä <code>main</code> ÂáΩÊï∞ÂÆû‰æãÔºö</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-2"><a href="#Python-2" class="headerlink" title="Python"></a>Python</h4><p>Python ‰∏≠Ê≤°ÊúâÂÉè C ËØ≠Ë®Ä‰∏≠ÁöÑ <code>main</code> ÂáΩÊï∞ÈÇ£Ê†∑ÁöÑÂÖ•Âè£ÂáΩÊï∞ÔºåÊï¥‰∏™ Python ËÑöÊú¨ÈÉΩÊòØÂèØÊâßË°åÁöÑ„ÄÇ</p><p>‰ΩÜÊòØÔºå<strong>‰∏∫‰∫ÜÊñπ‰æøÁºñÂÜôÊµãËØï‰ª£Á†ÅÂíåÊ®°ÂùóÂåñÁºñÁ®ã</strong>ÔºåPython Êèê‰æõ‰∫Ü‰∏ÄÁßç <strong>Âà§Êñ≠ÂΩìÂâçËÑöÊú¨ÊòØÂê¶‰Ωú‰∏∫‰∏ªÁ®ãÂ∫èÊâßË°å</strong> ÁöÑÊñπÂºèÔºåÂç≥ÈÄöËøáÂà§Êñ≠ <code>__name__</code> ÂèòÈáèÁöÑÂÄºÊòØÂê¶‰∏∫ <code>"__main__"</code>„ÄÇ</p><ul><li>ÂΩì Python ËÑöÊú¨‰Ωú‰∏∫‰∏ªÁ®ãÂ∫èÊâßË°åÊó∂Ôºå<code>__name__</code> ÁöÑÂÄº‰ºöË¢´ËÆæÁΩÆ‰∏∫ <code>"__main__"</code></li><li>ÂΩì Python ËÑöÊú¨‰Ωú‰∏∫Ê®°ÂùóË¢´ÂØºÂÖ•Êó∂Ôºå<code>__name__</code> ÁöÑÂÄº‰ºöË¢´ËÆæÁΩÆ‰∏∫Ê®°ÂùóÁöÑÂêçÁß∞„ÄÇ</li></ul><p>Ëøô‰∏™ÁâπÊÄßÂèØ‰ª•ËÆ©Êàë‰ª¨Âú® Python ËÑöÊú¨‰∏≠ÁºñÂÜô‰∏Ä‰∫õÊµãËØï‰ª£Á†ÅÔºå‰ΩÜ‰∏ç‰ºöÂΩ±ÂìçÂà∞Ë¢´ÂØºÂÖ•ÁöÑ‰ª£Á†Å„ÄÇ</p><p>ÈÄöÂ∏∏ÔºåÂú® Python ËÑöÊú¨ÁöÑÊú´Â∞æ‰ºö‰ΩøÁî®‰ª•‰∏ã‰ª£Á†ÅÊù•Âà§Êñ≠ÂΩìÂâçËÑöÊú¨ÊòØÂê¶‰Ωú‰∏∫‰∏ªÁ®ãÂ∫èÊâßË°åÔºö</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token comment"># Âú®ËøôÈáåÁºñÂÜô‰∏ªÁ®ãÂ∫è</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Âú®Ëøô‰∏™‰ª£Á†ÅÂùó‰∏≠ÔºåÊàë‰ª¨ÂèØ‰ª•ÁºñÂÜô Python ËÑöÊú¨ÁöÑ‰∏ªË¶ÅÈÄªËæë„ÄÇÂΩìÊàë‰ª¨Âú®ÂëΩ‰ª§Ë°å‰∏≠ÊâßË°åËøô‰∏™ËÑöÊú¨Êó∂ÔºåÂ∞±‰ºöÊâßË°åËøô‰∏™‰ª£Á†ÅÂùó‰∏≠ÁöÑ‰ª£Á†Å„ÄÇ‰æãÂ¶ÇÔºå‰∏ãÈù¢ÊòØ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ Python ËÑöÊú¨Á§∫‰æãÔºö</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">say_hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, World!"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    say_hello<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ÂΩìÊàë‰ª¨Âú®ÂëΩ‰ª§Ë°å‰∏≠ÊâßË°åËøô‰∏™ËÑöÊú¨Êó∂ÔºåÂ∞Ü‰ºöËæìÂá∫ <code>"Hello, World!"</code>ÔºõËÄåÂ¶ÇÊûúÊàë‰ª¨Â∞ÜËøô‰∏™ËÑöÊú¨‰Ωú‰∏∫Ê®°ÂùóÂØºÂÖ•Âà∞ÂÖ∂‰ªñËÑöÊú¨‰∏≠Êó∂Ôºå<code>say_hello</code> ÂáΩÊï∞‰∏ç‰ºöË¢´ÊâßË°å„ÄÇ</p><hr><h3 id="Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã"><a href="#Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã" class="headerlink" title="Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã"></a>Âü∫Êú¨Êï∞ÊçÆÁ±ªÂûã</h3><h4 id="C-x2F-C"><a href="#C-x2F-C" class="headerlink" title="C/C++"></a>C/C++</h4><table><thead><tr><th align="center">Êï∞ÊçÆÁ±ªÂûã</th><th align="center">ÂÆû‰æã</th><th align="center">Â§áÊ≥®</th></tr></thead><tbody><tr><td align="center">bool</td><td align="center"><code>bool is_prime = true</code>„ÄÅ<code>bool is_odd = false</code></td><td align="center">Êó©Êúü CËØ≠Ë®Ä Âπ∂‰∏çÊîØÊåÅ <code>bool</code> Á±ªÂûãÔºåÈÄöÂ∏∏Áî®0Âíå1Ë°®Á§∫<br>ËÄå C++ ÊîØÊåÅ <code>bool</code> Á±ªÂûã</td></tr><tr><td align="center">char</td><td align="center"><code>char c = 'b'</code></td><td align="center">Ë°®Á§∫Âçï‰∏™Â≠óÁ¨¶</td></tr><tr><td align="center">int</td><td align="center"><code>int n = 10</code></td><td align="center">Êï¥Êï∞</td></tr><tr><td align="center">float</td><td align="center"><code>float a = 1.101</code></td><td align="center">ÂçïÁ≤æÂ∫¶ÊµÆÁÇπÊï∞</td></tr><tr><td align="center">double</td><td align="center"><code>double b = 1.10001</code></td><td align="center">ÂèåÁ≤æÂ∫¶ÊµÆÁÇπÊï∞</td></tr><tr><td align="center">long</td><td align="center"><code>long long n = 10000</code></td><td align="center">ÈïøÊï¥ÂΩ¢</td></tr><tr><td align="center">string</td><td align="center"><code>string s = "hello"</code></td><td align="center">CËØ≠Ë®Ä Âπ∂Ê≤°Êúâ <code>string</code> Á±ªÂûãÔºåÈÄöÂ∏∏Áî®Â≠óÁ¨¶Êï∞ÁªÑÊàñÂ≠óÁ¨¶ÊåáÈíàË°®Á§∫<br>ËÄå C++ ÊîØÊåÅ <code>string</code> Á±ªÂûã</td></tr></tbody></table><p>üçâ PSÔºöÊõ¥Â§öËØ≠Ê≥ïÁªÜËäÇÁî±‰∫éÁØáÂπÖÊâÄÈôêÔºå‰∏îÊú¨ÊñáÈáçÁÇπÊòØ‰∏§‰∏™ËØ≠Ë®ÄÁöÑËØ≠Ê≥ïÂØπÊØîÔºåÊïÖÊöÇ‰∏çÂàóÂá∫ÔºåÊúâÈúÄË¶ÅÂêåÂ≠¶ÂèØ‰ª•Ëá™Ë°åÊü•ÈòÖÁõ∏ÂÖ≥ÁªÜËäÇ„ÄÇ</p><h4 id="Python-3"><a href="#Python-3" class="headerlink" title="Python"></a>Python</h4><table><thead><tr><th>Êï∞ÊçÆÁ±ªÂûã</th><th>ÂÆû‰æã</th><th>Â§áÊ≥®</th></tr></thead><tbody><tr><td>bool</td><td><code>is_prime = True</code> „ÄÅ<code>is_odd = False</code></td><td>È¶ñÂ≠óÊØçÈúÄÂ§ßÂÜô</td></tr><tr><td>int</td><td><code>num = 10</code></td><td>Êï¥Êï∞</td></tr><tr><td>float</td><td><code>avg = 33.333</code></td><td>ÊµÆÁÇπÊï∞</td></tr><tr><td>complex</td><td><code>c = 1 + 2j</code></td><td>Â§çÊï∞</td></tr><tr><td>str</td><td><code>s = 'hello'</code>„ÄÅ<code>t = "world"</code></td><td>ÂçïÂºïÂè∑ÂíåÂèåÂºïÂè∑ÂùáÂèØË°®Á§∫Â≠óÁ¨¶‰∏≤</td></tr><tr><td>NoneType</td><td><code>n = None</code></td><td>Á©∫Á±ªÂûãÔºåË°®Á§∫Ê≤°ÊúâÂÄºÔºåÁî®‰∫éÂç†‰ΩçÊàñË°®Á§∫‰∏çÂ≠òÂú®ÁöÑÊÉÖÂÜµ„ÄÇ</td></tr></tbody></table><p>üçâ PSÔºöC ËØ≠Ë®Ä‰∏≠ÁöÑÊï¥Êï∞Á±ªÂûãÊúâÂõ∫ÂÆöÁöÑ‰ΩçÊï∞Ôºå‰æãÂ¶Ç int Á±ªÂûãÈÄöÂ∏∏ÊòØ 32 ‰ΩçÊàñ 64 ‰Ωç„ÄÇËÄå Python ‰∏≠ÁöÑÊï¥Êï∞Á±ªÂûãÊòØÂä®ÊÄÅÁöÑÔºåÂèØ‰ª•Ë°®Á§∫‰ªªÊÑèÂ§ßÂ∞èÁöÑÊï¥Êï∞„ÄÇ</p><blockquote><p>Python‰∏≠ÁöÑÂàóË°®ÔºàlistÔºâ„ÄÅÈõÜÂêàÔºàsetÔºâ„ÄÅÂ≠óÂÖ∏ÔºàdictionaryÔºâÁ≠âÂ∞ÜÂú® Python VS CÔºà‰∏ãÁØáÔºâ‰∏≠ÂØπÊØî„ÄÇ</p></blockquote><hr><h3 id="ÂèòÈáè"><a href="#ÂèòÈáè" class="headerlink" title="ÂèòÈáè"></a>ÂèòÈáè</h3><h4 id="CËØ≠Ë®Ä-3"><a href="#CËØ≠Ë®Ä-3" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// ÈúÄË¶ÅÊåáÂÆöÂèòÈáèÁöÑÊï∞ÊçÆÁ±ªÂûã</span>counter<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">// ÊîØÊåÅ++Á≠âËá™Â¢ûËøêÁÆóÁ¨¶</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p> C ËØ≠Ë®ÄÊòØ‰∏ÄÁßç <strong>ÈùôÊÄÅÁ±ªÂûãËØ≠Ë®Ä</strong>ÔºåÈúÄË¶Å <strong>Âú®‰ΩøÁî®ÂèòÈáè‰πãÂâçÊòéÁ°ÆÂÆö‰πâÂèòÈáèÁöÑÊï∞ÊçÆÁ±ªÂûã</strong>„ÄÇ</p><h4 id="Python-4"><a href="#Python-4" class="headerlink" title="Python"></a>Python</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">counter <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># Êó†ÈúÄÊåáÂÆöÂèòÈáèÁöÑÊï∞ÊçÆÁ±ªÂûã</span>counter <span class="token operator">+=</span> <span class="token number">1</span> <span class="token comment"># ‰∏çÊîØÊåÅ++Á≠âËá™Â¢ûËøêÁÆóÁ¨¶</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Python ÊòØ‰∏ÄÁßç <strong>Âä®ÊÄÅÁ±ªÂûãËØ≠Ë®Ä</strong>ÔºåÂõ†Ê≠§ÂÆÉÁöÑÊï∞ÊçÆÁ±ªÂûãÊòØÂä®ÊÄÅÊé®Êñ≠ÁöÑÔºå<strong>‰∏çÈúÄË¶Å‰∫ãÂÖàÂÆö‰πâÂèòÈáèÁöÑÊï∞ÊçÆÁ±ªÂûã</strong>„ÄÇ</p><p>üçâPSÔºöPython ‰∏≠ÁöÑÊï∞ÊçÆÁ±ªÂûãÈÄöÂ∏∏ÊòØÂØπË±°ÔºåÂÖ∑ÊúâÊõ¥Âä†‰∏∞ÂØåÂíåÁÅµÊ¥ªÁöÑÊìç‰ΩúÂíåÂ±ûÊÄßÔºå‰æãÂ¶ÇÂ≠óÁ¨¶‰∏≤Á±ªÂûãÁöÑÊñπÊ≥ïÂíåÂ±ûÊÄßÂèØ‰ª•Êñπ‰æøÂú∞ËøõË°åÂ≠óÁ¨¶‰∏≤ÁöÑÂ§ÑÁêÜÂíåÊìç‰Ωú„ÄÇËÄå C ËØ≠Ë®Ä‰∏≠ÁöÑÊï∞ÊçÆÁ±ªÂûãÂàôÈÄöÂ∏∏ÊòØÂü∫Êú¨Êï∞ÊçÆÁ±ªÂûãÔºåÈúÄË¶Å‰ΩøÁî®ÂáΩÊï∞Êù•ËøõË°åÊìç‰ΩúÂíåÂ§ÑÁêÜ„ÄÇ</p><hr><h3 id="ÈÄªËæëËøêÁÆóÁ¨¶"><a href="#ÈÄªËæëËøêÁÆóÁ¨¶" class="headerlink" title="ÈÄªËæëËøêÁÆóÁ¨¶"></a>ÈÄªËæëËøêÁÆóÁ¨¶</h3><p>Python Âíå C ËØ≠Ë®ÄÈÉΩÊîØÊåÅ„Äå‰∏é„Äç„ÄÅ„ÄåÊàñ„Äç„ÄÅ„ÄåÈùû„ÄçÁ≠âÈÄªËæëËøêÁÆóÁ¨¶Ôºå‰ΩÜÊòØÂÖ∑‰ΩìÁöÑËØ≠Ê≥ïÁï•Êúâ‰∏çÂêå„ÄÇ</p><h4 id="CËØ≠Ë®Ä-4"><a href="#CËØ≠Ë®Ä-4" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><ul><li><code>&amp;&amp;</code> ËøêÁÆóÁ¨¶ÔºöÂΩì‰∏§‰∏™Êìç‰ΩúÊï∞ÈÉΩ‰∏∫ÁúüÔºàÈùûÈõ∂ÔºâÊó∂ÔºåÁªìÊûú‰∏∫ÁúüÔºåÂê¶Âàô‰∏∫ÂÅá„ÄÇ</li><li><code>||</code> ËøêÁÆóÁ¨¶ÔºöÂΩì‰∏§‰∏™Êìç‰ΩúÊï∞‰∏≠Ëá≥Â∞ëÊúâ‰∏Ä‰∏™‰∏∫ÁúüÔºàÈùûÈõ∂ÔºâÊó∂ÔºåÁªìÊûú‰∏∫ÁúüÔºåÂê¶Âàô‰∏∫ÂÅá„ÄÇ</li><li><code>!</code> ËøêÁÆóÁ¨¶ÔºöÂØπÊìç‰ΩúÊï∞ÂèñÂèçÔºåÂç≥ÁúüÂèò‰∏∫ÂÅáÔºåÂÅáÂèò‰∏∫Áúü„ÄÇ</li></ul><h4 id="Python-5"><a href="#Python-5" class="headerlink" title="Python"></a>Python</h4><ul><li><p><code>and</code> ËøêÁÆóÁ¨¶ÔºöÂΩì‰∏§‰∏™Êìç‰ΩúÊï∞ÈÉΩ‰∏∫ True Êó∂ÔºåÁªìÊûú‰∏∫ TrueÔºåÂê¶Âàô‰∏∫ False„ÄÇ</p></li><li><p><code>or</code> ËøêÁÆóÁ¨¶ÔºöÂΩì‰∏§‰∏™Êìç‰ΩúÊï∞‰∏≠ÊúâËá≥Â∞ë‰∏Ä‰∏™‰∏∫ True Êó∂ÔºåÁªìÊûú‰∏∫ TrueÔºåÂê¶Âàô‰∏∫ False„ÄÇ</p></li><li><p><code>not</code> ËøêÁÆóÁ¨¶ÔºöÂØπÊìç‰ΩúÊï∞ÂèñÂèçÔºåÂç≥ True Âèò‰∏∫ FalseÔºåFalse Âèò‰∏∫ True„ÄÇ</p></li></ul><p>üçâ PSÔºöC ËØ≠Ë®Ä ‰∏≠ÁöÑÈÄªËæëËøêÁÆóÁ¨¶ <strong>‰∏çÂÖ∑ÊúâÁü≠Ë∑ØËøêÁÆó</strong> ÁöÑÁâπÊÄßÔºåÊÄªÊòØ‰ºöËÆ°ÁÆóÂ∑¶Âè≥‰∏§‰æßÁöÑÊìç‰ΩúÊï∞ÔºõËÄå Python ‰∏≠ÁöÑÈÄªËæëËøêÁÆóÁ¨¶ÂÖ∑Êúâ <strong>Áü≠Ë∑ØËøêÁÆó</strong> ÁöÑÁâπÊÄßÔºåÂΩìÂ∑¶‰æßÊìç‰ΩúÊï∞Â∑≤ÁªèÂèØ‰ª•Á°ÆÂÆöÁªìÊûúÊó∂ÔºåÂè≥‰æßÊìç‰ΩúÊï∞‰∏çÂÜçËøõË°åËÆ°ÁÆó„ÄÇ</p><hr><h3 id="ÁÆóÊúØËøêÁÆóÁ¨¶"><a href="#ÁÆóÊúØËøêÁÆóÁ¨¶" class="headerlink" title="ÁÆóÊúØËøêÁÆóÁ¨¶"></a>ÁÆóÊúØËøêÁÆóÁ¨¶</h3><table><thead><tr><th>ËøêÁÆóÁ¨¶</th><th>ÊèèËø∞</th><th>C Á§∫‰æã</th><th>Python Á§∫‰æã</th></tr></thead><tbody><tr><td>+</td><td>Âä†Ê≥ï</td><td><code>a + b</code></td><td><code>a + b</code></td></tr><tr><td>-</td><td>ÂáèÊ≥ï</td><td><code>a - b</code></td><td><code>a - b</code></td></tr><tr><td>*</td><td>‰πòÊ≥ï</td><td><code>a * b</code></td><td><code>a * b</code></td></tr><tr><td>/</td><td>ÊµÆÁÇπÈô§Ê≥ï</td><td><code>a / b</code></td><td><code>a / b</code></td></tr><tr><td>%</td><td>ÂèñÊ®°</td><td><code>a % b</code></td><td><code>a % b</code></td></tr><tr><td>/</td><td>Êï¥Èô§</td><td><code>a / b</code></td><td><code>a // b</code></td></tr><tr><td>$a^b$</td><td>ÂπÇËøêÁÆó</td><td><code>pow()</code></td><td><code>a ** b</code></td></tr></tbody></table><p>üçâ PS1ÔºöÂú® C ËØ≠Ë®Ä‰∏≠ÔºåÊ≤°ÊúâÂπÇËøêÁÆóÁ¨¶ÔºåÈúÄË¶Å‰ΩøÁî®Â∫ìÂáΩÊï∞ <code>pow()</code> Êù•ËøõË°åÂπÇËøêÁÆóÔºå‰∏î <code>pow()</code> ÂáΩÊï∞ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™ÊµÆÁÇπÊï∞ÂÄºÔºåÈúÄË¶ÅËøõË°åÁ±ªÂûãËΩ¨Êç¢ÊâçËÉΩÂæóÂà∞Êï¥Êï∞Á±ªÂûãÁöÑÁªìÊûú„ÄÇ</p><p>‰æãÂ¶ÇÔºö</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// c ÁöÑÂÄº‰∏∫ 8Ôºå</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>üçâ PS2ÔºöÈúÄË¶ÅÊ≥®ÊÑèÁöÑÊòØÔºåÂú® C ËØ≠Ë®Ä‰∏≠ËøõË°åÊï¥Êï∞Èô§Ê≥ïÊó∂ÔºåÂ¶ÇÊûú‰∏§‰∏™Êìç‰ΩúÊï∞ÈÉΩÊòØÊï¥Êï∞ÔºåÂàôÈô§Ê≥ïËøêÁÆóÁ¨¶ <code>/</code> ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™Êï¥Êï∞ÂÄºÔºå‰ºöÂêë‰∏ãÂèñÊï¥ÔºõËÄåÂú® Python ‰∏≠ÔºåÈô§Ê≥ïËøêÁÆóÁ¨¶ <code>/</code> ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™ÊµÆÁÇπÊï∞ÂÄº„ÄÇ</p><hr><h3 id="‰ΩçËøêÁÆó"><a href="#‰ΩçËøêÁÆó" class="headerlink" title="‰ΩçËøêÁÆó"></a>‰ΩçËøêÁÆó</h3><p>Python Âíå C ËØ≠Ë®Ä‰∏≠ÁöÑ‰ΩçËøêÁÆóÁ¨¶ÂùáÂåÖÊã¨Êåâ‰Ωç‰∏éÔºà&amp;Ôºâ„ÄÅÊåâ‰ΩçÊàñÔºà|Ôºâ„ÄÅÊåâ‰ΩçÂºÇÊàñÔºà^Ôºâ„ÄÅÊåâ‰ΩçÂèñÂèçÔºà~Ôºâ„ÄÅÂ∑¶Áßª‰ΩçÔºà&lt;&lt;ÔºâÂíåÂè≥Áßª‰ΩçÔºà&gt;&gt;ÔºâÁ≠âËøêÁÆó„ÄÇ</p><table><thead><tr><th>ËøêÁÆóÁ¨¶</th><th>ÊèèËø∞</th><th>C Á§∫‰æã</th><th>Python Á§∫‰æã</th></tr></thead><tbody><tr><td>&amp;</td><td>Êåâ‰Ωç‰∏é</td><td><code>a &amp; b</code></td><td><code>a &amp; b</code></td></tr><tr><td>|</td><td>Êåâ‰ΩçÊàñ</td><td>`a</td><td>b`</td></tr><tr><td>^</td><td>Êåâ‰ΩçÂºÇÊàñ</td><td><code>a ^ b</code></td><td><code>a ^ b</code></td></tr><tr><td>~</td><td>Êåâ‰ΩçÂèñÂèç</td><td><code>~a</code></td><td><code>~a</code></td></tr><tr><td>&lt;&lt;</td><td>Â∑¶Áßª‰Ωç</td><td><code>a &lt;&lt; b</code></td><td><code>a &lt;&lt; b</code></td></tr><tr><td>&gt;&gt;</td><td>Âè≥Áßª‰Ωç</td><td><code>a &gt;&gt; b</code></td><td><code>a &gt;&gt; b</code></td></tr></tbody></table><p>üçâ PS1ÔºöC ËØ≠Ë®Ä‰∏≠ÁöÑ‰ΩçËøêÁÆóÁ¨¶Âè™ËÉΩÁî®‰∫éÊï¥Êï∞Á±ªÂûãÔºåÂåÖÊã¨ÊúâÁ¨¶Âè∑Êï¥Êï∞ÂíåÊó†Á¨¶Âè∑Êï¥Êï∞ÔºåËÄå Python ‰∏≠ÁöÑ‰ΩçËøêÁÆóÁ¨¶ÂèØ‰ª•Áî®‰∫éÊï¥Êï∞Á±ªÂûãÂíåÂ∏ÉÂ∞îÁ±ªÂûãÔºåÂ∏ÉÂ∞îÁ±ªÂûã‰ºöË¢´ËΩ¨Êç¢‰∏∫Êï¥Êï∞Á±ªÂûãÔºàTrue ËΩ¨Êç¢‰∏∫ 1ÔºåFalse ËΩ¨Êç¢‰∏∫ 0Ôºâ„ÄÇ</p><p>üçâ PS2ÔºöPython Âíå C ËØ≠Ë®ÄÁöÑÂè≥ÁßªËøêÁÆóÁ¨¶Ôºà&gt;&gt;ÔºâÂú®Â§ÑÁêÜÊúâÁ¨¶Âè∑Êï¥Êï∞Êó∂Ë°®Áé∞‰∏çÂêå„ÄÇPython ÂØπË¥üÊï∞ÁöÑÂè≥ÁßªÊòØÂêëÈõ∂ËàçÂÖ•Ôºà‰πüÁß∞‰∏∫ÁÆóÊúØÂè≥ÁßªÔºâÔºåËÄå C ËØ≠Ë®ÄÁöÑË°å‰∏∫ÊòØ‰æùËµñ‰∫éÁºñËØëÂô®ÂÆûÁé∞ÁöÑÔºàÂèØËÉΩÊòØÁÆóÊúØÂè≥ÁßªÊàñÈÄªËæëÂè≥ÁßªÔºâ„ÄÇ</p><hr><h3 id="Êù°‰ª∂ËØ≠Âè•"><a href="#Êù°‰ª∂ËØ≠Âè•" class="headerlink" title="Êù°‰ª∂ËØ≠Âè•"></a>Êù°‰ª∂ËØ≠Âè•</h3><h4 id="CËØ≠Ë®Ä-5"><a href="#CËØ≠Ë®Ä-5" class="headerlink" title="CËØ≠Ë®Ä"></a>CËØ≠Ë®Ä</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"x &gt; y\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"x = y\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"x &lt; y\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Python-6"><a href="#Python-6" class="headerlink" title="Python"></a>Python</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> <span class="token number">3</span>y <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">if</span> x <span class="token operator">&gt;</span> y<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x &gt; y"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> x <span class="token operator">==</span> y<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x = y"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x &lt; y"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>‰∏çÂêåÁÇπÔºö</p><ul><li>CËØ≠Ë®ÄÁöÑÊù°‰ª∂Ë°®ËææÂºèÈúÄË¶ÅÁî±Êã¨Âè∑<code>()</code> Êã¨Ëµ∑Êù•ÔºåËÄå Python ÁöÑÊù°‰ª∂Ë°®ËææÂºèÊó†ÈúÄÊ∑ªÂä† <code>()</code> Ôºà‰ΩÜÊòØÂä†‰∫Ü‰πüÊ≤°ÈîôÔºâ</li><li>CËØ≠Ë®Ä‰ΩøÁî® <strong>Ëä±Êã¨Âè∑</strong> <code>{}</code> Êù•Ë°®Á§∫‰ª£Á†ÅÂùóÔºåËÄå Python ‰ΩøÁî® <strong>Áº©Ëøõ</strong> Êù•Ë°®Á§∫‰ª£Á†ÅÂùóÔºå‰∏îÈúÄË¶ÅÂú®Êù°‰ª∂Ë°®ËææÂºèÂêéÊ∑ªÂä† <code>:</code></li><li>CËØ≠Ë®Ä‰ΩøÁî® <code>else if</code>ÔºåËÄå Python ‰ΩøÁî® <code>elif</code></li></ul><hr><h2 id="ÂÜôÂú®ÊúÄÂêé-‚úçÔ∏è"><a href="#ÂÜôÂú®ÊúÄÂêé-‚úçÔ∏è" class="headerlink" title="ÂÜôÂú®ÊúÄÂêé ‚úçÔ∏è"></a>ÂÜôÂú®ÊúÄÂêé ‚úçÔ∏è</h2><p>Áî±‰∫éÁØáÂπÖÊúâÈôêÔºå‰∏î‰∏∫‰∫ÜËØªËÄÖÊõ¥Â•ΩÁöÑÈòÖËØª‰ΩìÈ™åÔºåÊëä‰∏ªÊääÂÜÖÂÆπÊãÜÊàê‰∫Ü‰∏äÁØáÂíå‰∏ãÁØáÔºåÊõ¥Â§öÂØπÊØîÂÜÖÂÆπËßÅ <a href="https://rickyxcoder.top/2023/04/15/python-vs-c-xia-pian/">Python VS CÔºà‰∏ãÁØáÔºâ</a>‚òòÔ∏è</p><hr><h2 id="ÂèÇËÄÉËµÑÊñô-üìö"><a href="#ÂèÇËÄÉËµÑÊñô-üìö" class="headerlink" title="ÂèÇËÄÉËµÑÊñô üìö"></a>ÂèÇËÄÉËµÑÊñô üìö</h2><p>PythonÂÆòÊñπÊïôÁ®ãÔºö<a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p><p>CS50Ôºö<a href="https://cs50.harvard.edu/x/2023/">https://cs50.harvard.edu/x/2023/</a></p><p>ChatGPTÔºö<a href="https://openai.com/blog/chatgpt">https://openai.com/blog/chatgpt</a></p>]]></content>
      
      
      <categories>
          
          <category> PythonÂü∫Á°Ä </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CS50 </tag>
            
            <tag> C </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcwingÁ¨¨88Âú∫Âë®ËµõÂ§çÁõò</title>
      <link href="/2023/04/13/acwing-di-88-chang-zhou-sai-fu-pan/"/>
      <url>/2023/04/13/acwing-di-88-chang-zhou-sai-fu-pan/</url>
      
        <content type="html"><![CDATA[<h1 id="„ÄêAcwing-Âë®ËµõÂ§çÁõò„ÄëÁ¨¨88Âú∫Âë®ËµõÂ§çÁõòÔºà2023-1-28Ôºâ"><a href="#„ÄêAcwing-Âë®ËµõÂ§çÁõò„ÄëÁ¨¨88Âú∫Âë®ËµõÂ§çÁõòÔºà2023-1-28Ôºâ" class="headerlink" title="„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨88Âú∫Âë®ËµõÂ§çÁõòÔºà2023.1.28Ôºâ"></a>„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨88Âú∫Âë®ËµõÂ§çÁõòÔºà2023.1.28Ôºâ</h1><h2 id="Âë®ËµõÂ§çÁõò-‚úçÔ∏è"><a href="#Âë®ËµõÂ§çÁõò-‚úçÔ∏è" class="headerlink" title="Âë®ËµõÂ§çÁõò ‚úçÔ∏è"></a>Âë®ËµõÂ§çÁõò ‚úçÔ∏è</h2><blockquote><p><strong>Êú¨Âë®‰∏™‰∫∫ÊéíÂêç</strong>Ôºö894/2025</p><p><strong>ACÊÉÖÂÜµ</strong>Ôºö1/3</p><p>Âë®ËµõÂΩìÂ§©Êôö‰∏äÔºåÂçö‰∏ªÂú®ÂΩ±Èô¢ËßÇÁúã„ÄäÊµÅÊµ™Âú∞ÁêÉ2„ÄãÔºåÊú™ÂÆûÊó∂ÂèÇÂä†ÔºåÊòØÂú®‰πãÂêéÁöÑÊó∂Èó¥ÈáåÂÆöÊó∂Ëá™ÊµãÁöÑ„ÄÇüé¨</p><p>ÊÑüËßâËá™ÊµãÁöÑÊ∞õÂõ¥ÂíåÂÆûÊó∂ÊØîËµõËøòÊòØÂæà‰∏ç‰∏ÄÊ†∑ÁöÑÔºåÊ≤°ÊúâÊØîËµõÊó∂ÈÇ£ÁßçÁ¥ßÂº†ÊÑü„ÄÇ‰∫∫ÊØîËæÉÊùæÂºõÔºåËß£È¢òÊó∂Áõ∏ÂØπ‰ªéÂÆπÊ∑°ÂÆöÔºåÂ∏åÊúõÁúüÊ≠£ÊØîËµõÊó∂Ôºå‰πüËÉΩ‰øùÊåÅËøôÊ†∑ÁöÑÂøÉÊÄÅÔºåËÄå‰∏çÊòØÊó†Ë∞ìÁöÑÁÑ¶ÊÄ•ÂíåÁ¥ßÂº†„ÄÇüòä</p><p>Ëøô‰πüÊòØÂçö‰∏ªÂèÇÂä†ÁöÑÁ¨¨‰∏âÊ¨°Âë®ËµõÔºåÁªèËøáÂâç‰∏§Ê¨°ÁöÑÂéÜÁªÉÔºåÊÑüËßâËá™Â∑±ÁöÑÊ∞¥Âπ≥Â∑≤ÁªèÊúâ‰∏ÄÁÇπÊèêÂçá‰∫Ü„ÄÇËôΩÁÑ∂‰ªéÁ∫∏Èù¢Êï∞ÊçÆÊù•ÁúãÔºåËøôÊ¨°Âè™ AC ‰∫Ü 1 È¢òÔºå‰ΩÜÊòØËá™Â∑±ÂÅöÈ¢òÊó∂ÁöÑÊÄùË∑ØÂç¥Áõ∏ÊØîÂâç‰∏§Ê¨°ÂºÄÈòî‰∫Ü‰∏çÂ∞ëÔºå‰ª£Á†ÅÂÆåÊàêÂ∫¶‰πüÊØîËæÉÈ´ò„ÄÇ</p><p>T2 Âçö‰∏ªÊòØÁî®ÈÇªÊé•Ë°®Â≠òÂÇ®ÂõæÔºåÁÑ∂ÂêéÂØπ‰∫éÊØè‰∏™ÁÇπ DFS ÊêúÁ¥¢ÔºåÊúÄÂêéÈÄöËøáÈÇªÊé•Áü©ÈòµÂà§Êñ≠ÊâÄÊúâÁÇπÊòØÂê¶‰∫íÈÄöÔºàÁé∞Âú∫Êèê‰∫§Êó∂‰∏ÄÁõ¥ <code>Segmentation Fault</code>ÔºåÊ≤°ËÉΩÈ°∫Âà©ÊâæÂá∫ BUG„ÄÇ<strong>Â§çÁõòÊó∂</strong>ÔºåÈ°∫Âà©ÊâæÂá∫Áõ∏ÂÖ≥BUGÔºàËøòÊå∫Â§öÁöÑ„ÄÇ„ÄÇ„ÄÇÔºâÔºåÊúÄÁªàÊ†πÊçÆËØ•ÊÄùË∑ØÂÜôÂá∫Áõ∏Â∫î AC ‰ª£Á†ÅÔºõÂΩìÁÑ∂ÔºåÁªèËøáyÊÄªËÆ≤Ëß£ÔºåÂèëÁé∞Êú¨È¢ò‰πüÊòØ‰∏ÄÈÅì <strong>ÊÄùÁª¥È¢ò</strong>ÔºåÁõ¥Êé•Âà§Êñ≠ÊúÄÂ§ñÂ±ÇÊòØÂê¶‰∏∫ È°∫Êó∂Èíà/ÈÄÜÊó∂Èíà Âç≥ÂèØ„ÄÇ</p><p>T3 Âçö‰∏ªÁ¨¨‰∏ÄÂèçÂ∫îÊòØÁî®DPÔºåÊ†πÊçÆÊÄùË∑ØÂÜôÂá∫‰∫ÜÂ§ßÈÉ®ÂàÜ‰ª£Á†ÅÔºå‰ΩÜÊòØÊèê‰∫§ÁªìÊûúÊòØ 11/15Ôºå‰ªçÊúâ 4 ‰∏™ÊµãËØïÁÇπÊ≤°ÊúâÈÄöËøá„ÄÇ<strong>Â§çÁõòÊó∂</strong>ÔºåÁªèËøáyÊÄªËÆ≤Ëß£ÔºåÂéªÂ≠¶‰π†‰∫Ü <strong>Áä∂ÊÄÅÊú∫DP</strong> ÁöÑÁõ∏ÂÖ≥ÂÜÖÂÆπÔºåÈ°∫Âà©ÂÜôÂá∫AC‰ª£Á†Å„ÄÇ</p><p>ÊÄª‰πãÊù•ËØ¥ÔºåÂë®ËµõÁªôËá™Â∑±ÁöÑÊèêÂçáËøòÊòØÂæàÂ§ßÁöÑÔºåÁªßÁª≠Âä†Ê≤π üòÄ</p></blockquote><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-170415.png" alt="Âë®ËµõrankÂõæ"></p><h2 id="Âë®Ëµõ‰ø°ÊÅØ-üìö"><a href="#Âë®Ëµõ‰ø°ÊÅØ-üìö" class="headerlink" title="Âë®Ëµõ‰ø°ÊÅØ üìö"></a>Âë®Ëµõ‰ø°ÊÅØ üìö</h2><p><strong>Êó∂Èó¥</strong>Ôºö2023Âπ¥ 1 Êúà 28 Êó• 19Ôºö00-20Ôºö15</p><p><strong>Á´ûËµõÈìæÊé•</strong>Ôºö<a href="https://www.acwing.com/activity/content/2840/">https://www.acwing.com/activity/content/2840/</a></p><p><strong>yÊÄªÁõ¥Êí≠Èó¥</strong>Ôºö<a href="http://live.bilibili.com/21871779">http://live.bilibili.com/21871779</a></p><p><strong>yÊÄªÂΩïÊí≠ËÆ≤Ëß£ËßÜÈ¢ë</strong>Ôºö<a href="https://www.bilibili.com/video/BV1LM4y1X7yH/?share_source=copy_web&amp;vd_source=33934722b558a5cefa750c1a9be72249">„ÄêAcWingÊùØ - Á¨¨ 88 Âú∫Âë®ËµõËÆ≤Ëß£„Äë</a></p><h2 id="È¢òÁõÆÂàóË°®-üßëüèª‚Äçüíª"><a href="#È¢òÁõÆÂàóË°®-üßëüèª‚Äçüíª" class="headerlink" title="È¢òÁõÆÂàóË°® üßëüèª‚Äçüíª"></a>È¢òÁõÆÂàóË°® üßëüèª‚Äçüíª</h2><table><thead><tr><th align="center">È¢òÁõÆÂêçÁß∞</th><th align="center">ÂéüÈ¢òÈìæÊé•</th><th align="center">ËßÜÈ¢ëÈìæÊé•</th><th align="center">ÈöæÂ∫¶</th></tr></thead><tbody><tr><td align="center">4800. ‰∏ã‰∏Ä‰∏™</td><td align="center"><a href="https://www.acwing.com/problem/content/4803/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center"><a href="https://www.acwing.com/video/4608/">ËßÜÈ¢ëÈìæÊé•</a></td><td align="center">ÁÆÄÂçï üü¢</td></tr><tr><td align="center">4801. Âº∫ËøûÈÄöÂõæ</td><td align="center"><a href="https://www.acwing.com/problem/content/4804/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center"><a href="https://www.acwing.com/video/4609/">ËßÜÈ¢ëÈìæÊé•</a></td><td align="center">‰∏≠Á≠â üü°</td></tr><tr><td align="center">4802. ÈáëÊòéÁöÑÂÅáÊúü</td><td align="center"><a href="https://www.acwing.com/problem/content/4805/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center"><a href="https://www.acwing.com/video/4607/">ËßÜÈ¢ëÈìæÊé•</a></td><td align="center">‰∏≠Á≠â üü°</td></tr></tbody></table><hr><h2 id="È¢òËß£-üöÄ"><a href="#È¢òËß£-üöÄ" class="headerlink" title="È¢òËß£ üöÄ"></a>È¢òËß£ üöÄ</h2><h3 id="„ÄêÈ¢òÁõÆA„Äë‰∏ã‰∏Ä‰∏™"><a href="#„ÄêÈ¢òÁõÆA„Äë‰∏ã‰∏Ä‰∏™" class="headerlink" title="„ÄêÈ¢òÁõÆA„Äë‰∏ã‰∏Ä‰∏™"></a>„ÄêÈ¢òÁõÆA„Äë‰∏ã‰∏Ä‰∏™</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞ $x$ÔºåËØ∑‰Ω†ÊâæÂà∞‰∏•Ê†ºÂ§ß‰∫é $x$ ‰∏îÂêÑ‰ΩçÊï∞Â≠óÂùá‰∏çÁõ∏ÂêåÁöÑÊúÄÂ∞èÊï¥Êï∞ $y$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>‰∏Ä‰∏™Êï¥Êï∞ $x$„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>‰∏Ä‰∏™Êï¥Êï∞ $y$„ÄÇ</p><p>‰øùËØÅ‰∏ÄÂÆöÊúâËß£„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $1000 \le x \le 9000$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">1987</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2013</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2013</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2014</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4803/">https://www.acwing.com/problem/content/4803/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Á≠æÂà∞È¢òÔºåÁÆÄÂçïÊûö‰∏æ + Âà§Êñ≠Âç≥ÂèØÔºåÂà§Êñ≠ÊòØÂê¶ÈáçÂ§çÁöÑÊñπÂºèÊúâÂæàÂ§öÁßçÔºåÂ¶ÇÔºö</p><ul><li>Âà©Áî® <code>to_string</code> Â∞ÜÊï∞Â≠óËΩ¨Êç¢ÊàêÂ≠óÁ¨¶‰∏≤ -&gt; Âà©Áî® <code>set</code> Ëá™Âä®ÂéªÈáç -&gt; ÊØîËæÉ‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÁöÑÈïøÂ∫¶</li><li>Âà©Áî® Êï∞Â≠óÂàÜÂâ≤ + Ê°∂ ÁöÑÊñπÂºèÔºåÂà§Êñ≠ÈáçÂ§ç</li></ul><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// Â∞ÜÂΩìÂâçÊï∞Â≠óiËΩ¨Êç¢ÊàêÂ≠óÁ¨¶‰∏≤</span>        string str <span class="token operator">=</span> <span class="token function">to_string</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// setËá™Â∏¶ÂéªÈáçÂäüËÉΩÔºåÂà§Êñ≠‰∏§‰∏™Â≠óÁ¨¶‰∏≤ÈïøÂ∫¶ÊòØÂê¶‰∏ÄËá¥ÔºåÂç≥ÂèØÂà§Êñ≠Êï∞Â≠óÊòØÂê¶ÈáçÂ§ç</span>        set<span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">&gt;</span> <span class="token function">str2</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> str<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> str2<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> i <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë"><a href="#„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë"></a>„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> b<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// Âà§Êñ≠ÂΩìÂâçÊï∞Â≠ótÁöÑÂêÑ‰∏™‰ΩçÊï∞ÊòØÂê¶‰∏çÂêåÔºåÈááÁî®Ê°∂ÁöÑÊÄùÊÉ≥</span><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>t <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>b<span class="token punctuation">[</span>t <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> t <span class="token operator">=</span> t <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span>    <span class="token keyword">int</span> t <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// Âà§Êñ≠ÂΩìÂâçtÊòØÂê¶Êª°Ë∂≥Êù°‰ª∂</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> t <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            t<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token function">memset</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="„ÄêÈ¢òÁõÆB„Äë4801-Âº∫ËøûÈÄöÂõæ"><a href="#„ÄêÈ¢òÁõÆB„Äë4801-Âº∫ËøûÈÄöÂõæ" class="headerlink" title="„ÄêÈ¢òÁõÆB„Äë4801. Âº∫ËøûÈÄöÂõæ"></a>„ÄêÈ¢òÁõÆB„Äë4801. Âº∫ËøûÈÄöÂõæ</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÁªôÂÆö‰∏Ä‰∏™Âπ≥Èù¢„ÄÇ</p><p>Âπ≥Èù¢‰∏≠Êúâ $n$ Êù°‰∏é $x$ ËΩ¥Âπ≥Ë°åÁöÑ <strong>ÊúâÂêëËæπ</strong>Ôºå‰ªé‰∏äÂà∞‰∏ã‰æùÊ¨°ÁºñÂè∑‰∏∫ $1‚àºn$ÔºåÊØèÊù°ËæπÈÉΩÊó†ÈôêÈïøÔºå‰∏î‰∏§‰∏§‰∏çÈáçÂêà„ÄÇ</p><p>Âπ≥Èù¢‰∏≠Êúâ $m$  Êù°‰∏é $y$ ËΩ¥Âπ≥Ë°åÁöÑ <strong>ÊúâÂêëËæπ</strong>Ôºå‰ªéÂ∑¶Âà∞Âè≥‰æùÊ¨°ÁºñÂè∑‰∏∫ $1‚àºm$ÔºåÊØèÊù°ËæπÈÉΩÊó†ÈôêÈïøÔºå‰∏î‰∏§‰∏§‰∏çÈáçÂêà„ÄÇ</p><p>Ëøô‰∫õËæπ‰∏ÄÂÖ±Êúâ $n√óm$ ‰∏™‰∫§ÁÇπ„ÄÇ</p><p>ÁªôÂÆöÊØèÊù°ËæπÁöÑÂÖ∑‰ΩìÊñπÂêëÔºåËØ∑‰Ω†Âà§Êñ≠Ëøô $n√óm$ ‰∏™‰∫§ÁÇπÊòØÂê¶Êª°Ë∂≥Ôºö‰ªé‰ªªÊÑè‰∫§ÁÇπÂá∫ÂèëÂèØ‰ª•Âà∞Ëææ‰ªªÊÑèÂÖ∂ÂÆÉ‰∫§ÁÇπ„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-1"><a href="#„ÄêËæìÂÖ•„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏§‰∏™Êï¥Êï∞ $n,m$„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫ $n$ÔºåÁî± <code>&lt;</code> Âíå <code>&gt;</code> ÊûÑÊàêÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂÖ∂‰∏≠Á¨¨ $i$ ‰∏™Â≠óÁ¨¶Áî®Êù•Ë°®Á§∫Á¨¨ $i$ Êù°‰∏é $x$ ËΩ¥Âπ≥Ë°åÁöÑ <strong>ÊúâÂêëËæπ</strong> ÁöÑÊñπÂêëÔºåÂ¶ÇÊûú‰∏∫ <code>&lt;</code> Ë°®Á§∫ÊñπÂêë‰ªéÂè≥ÂêëÂ∑¶ÔºåÂ¶ÇÊûú‰∏∫ <code>&gt;</code> Ë°®Á§∫ÊñπÂêë‰ªéÂ∑¶ÂêëÂè≥„ÄÇ</p><p>Á¨¨‰∏âË°åÂåÖÂê´‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫ $m$ÔºåÁî± <code>^</code> Âíå <code>v</code> ÊûÑÊàêÁöÑÂ≠óÁ¨¶‰∏≤ÔºåÂÖ∂‰∏≠Á¨¨ $i$ ‰∏™Â≠óÁ¨¶Áî®Êù•Ë°®Á§∫Á¨¨ $i$ Êù°‰∏é $y$ ËΩ¥Âπ≥Ë°åÁöÑ <strong>ÊúâÂêëËæπ</strong> ÁöÑÊñπÂêëÔºåÂ¶ÇÊûú‰∏∫ <code>^</code> Ë°®Á§∫ÊñπÂêë‰ªé‰∏ãÂêë‰∏äÔºåÂ¶ÇÊûú‰∏∫ <code>v</code> Ë°®Á§∫ÊñπÂêë‰ªé‰∏äÂêë‰∏ã„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-1"><a href="#„ÄêËæìÂá∫„Äë-1" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>Â¶ÇÊûúÊâÄÊúâ‰∫§ÁÇπÊª°Ë∂≥È¢òÁõÆË¶ÅÊ±ÇÔºåÂàôËæìÂá∫ <code>YES</code>ÔºåÂê¶ÂàôËæìÂá∫ <code>NO</code>„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-1"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-1" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>Ââç $5$ ‰∏™ÊµãËØïÁÇπÊª°Ë∂≥ $2 \le n,m \le 6$„ÄÇ</p><p>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $2 \le n,m \le 20$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span> <span class="token number">3</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>v<span class="token operator">^</span>v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">NO<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span> <span class="token number">6</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span>v<span class="token operator">^</span>v<span class="token operator">^</span>v<span class="token operator">^</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">YES<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë-1"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë-1" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4804/">https://www.acwing.com/problem/content/4804/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òÊòØ‰∏ÄÈÅìÈöêËóèËæÉÊ∑±ÁöÑÊÄùÁª¥È¢ò„ÄÇ</p><p>Âú®ËØ•È¢òÁõÆËÉåÊôØ‰∏ãÔºåÊÉ≥Ë¶ÅËØÅÊòéÊâÄÊúâÁÇπ‰∫íÈÄöÔºåÂè™ÈúÄË¶ÅÂà§Êñ≠ <strong>Âõõ‰∏™ËßíËêΩ‰∏äÁöÑÁÇπ</strong> ÊòØÂê¶‰∫íÈÄö / <strong>ÂõõÊù°Â§ñËæπÊòØÂê¶‰∏∫ÈÄÜÊó∂Èíà„ÄÅÈ°∫Êó∂Èíà</strong> Âç≥ÂèØ„ÄÇÂÖ∑‰ΩìËÆ≤Ëß£ËßÅyÊÄªËßÜÈ¢ëÔºö<a href="https://www.acwing.com/video/4609/">ËßÜÈ¢ëÈìæÊé•</a></p><p>ÁÆÄÂçïÁêÜËß£ÔºöËØ•Êù°‰ª∂‰∏ãÔºå‰ªªÊÑèÁÇπAÂèØ‰ª•ÈÄöËøáÂÖ∂ÊâÄÂú®ÁöÑÁõ¥Á∫øËµ∞Âà∞ÊúÄÂ§ñÂúàÔºåÁÑ∂ÂêéËøòËÉΩÂÜçÂõûÂà∞ÂéüÊù•ÁöÑ‰ΩçÁΩÆÔºåËÄåÂÖ∂‰ªñ‰ªªÊÑèÁÇπB‰πüÂèØ‰ª•ÈÄöËøáÂÖàÂà∞ÊúÄÂ§ñÂúàÔºåÂÜçÂà∞ÁÇπAÁöÑÊñπÂºè‰∏éAËøûÈÄöÔºåÂõ†Ê≠§ÊâÄÊúâÁÇπÈÉΩÊòØ‰∫íÈÄöÁöÑ„ÄÇ</p><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-170419.png" alt="yÊÄªÊÄùË∑ØÊà™Âõæ"></p><p>ÂΩìÁÑ∂ÔºåÊú¨È¢ò‰πüÂèØ‰ª•Áî® DFS/BFS + ÂõæËÆ∫ÁöÑÁü•ËØÜÊù•Ëß£ÂÜ≥Ôºå‰ΩÜÊòØÁõ∏Â∫î‰ª£Á†ÅËæÉ‰∏∫ÁπÅÁêêÔºåBUG‰øÆÊîπËµ∑Êù•ÊØîËæÉÈ∫ªÁÉ¶„ÄÇÔºàÂçö‰∏ªÊú¨‰∫∫Âú®Â§çÁõòÊó∂Êîπ‰∫ÜÂ•Ω‰πÖÁöÑÂë®ËµõÁé∞Âú∫‰ª£Á†ÅÔºåÊâçÈ°∫Âà©AC üòÇÔºâ</p><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„ÄëÔºàÊÄùÁª¥È¢òÔºâ‚úÖ"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„ÄëÔºàÊÄùÁª¥È¢òÔºâ‚úÖ" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„ÄëÔºàÊÄùÁª¥È¢òÔºâ‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„ÄëÔºàÊÄùÁª¥È¢òÔºâ‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>string str<span class="token punctuation">;</span><span class="token keyword">char</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">;</span> <span class="token comment">// ‰ª£Ë°®ÂõõÊù°Ëæπ</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token comment">// È°∂ËæπÂíåÂ∫ïËæπ</span>    cin <span class="token operator">&gt;&gt;</span> str<span class="token punctuation">;</span>    a <span class="token operator">=</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// Â∑¶ËæπÂíåÂè≥Ëæπ</span>    cin <span class="token operator">&gt;&gt;</span> str<span class="token punctuation">;</span>    b <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> d <span class="token operator">=</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// Âà§Êñ≠È°∫Êó∂Èíà / ÈÄÜÊó∂Èíà</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token char">'&gt;'</span> <span class="token operator">&amp;&amp;</span> b <span class="token operator">==</span> <span class="token char">'v'</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">==</span> <span class="token char">'&lt;'</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">==</span> <span class="token char">'^'</span><span class="token punctuation">)</span> <span class="token operator">||</span> a <span class="token operator">==</span> <span class="token char">'&lt;'</span> <span class="token operator">&amp;&amp;</span> b <span class="token operator">==</span> <span class="token char">'^'</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">==</span> <span class="token char">'&gt;'</span> <span class="token operator">&amp;&amp;</span> d <span class="token operator">==</span> <span class="token char">'v'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"YES"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"NO"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂ§çÁõòÂêéÁöÑÂë®ËµõÁé∞Âú∫‰ª£Á†Å„ÄëÔºàÈÇªÊé•Ë°®-DFS-ÈÇªÊé•Áü©ÈòµÂà§Êñ≠Ôºâ‚úÖ"><a href="#„ÄêÂ§çÁõòÂêéÁöÑÂë®ËµõÁé∞Âú∫‰ª£Á†Å„ÄëÔºàÈÇªÊé•Ë°®-DFS-ÈÇªÊé•Áü©ÈòµÂà§Êñ≠Ôºâ‚úÖ" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑÂë®ËµõÁé∞Âú∫‰ª£Á†Å„ÄëÔºàÈÇªÊé•Ë°® + DFS + ÈÇªÊé•Áü©ÈòµÂà§Êñ≠Ôºâ‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑÂë®ËµõÁé∞Âú∫‰ª£Á†Å„ÄëÔºàÈÇªÊé•Ë°® + DFS + ÈÇªÊé•Áü©ÈòµÂà§Êñ≠Ôºâ‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">410</span><span class="token punctuation">,</span> M <span class="token operator">=</span> N <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">int</span> h<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">,</span> ne<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">,</span> idx<span class="token punctuation">;</span><span class="token keyword">bool</span> st<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> sum<span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">,</span> ne<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">,</span> h<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> idx<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// ÂØπ‰∫éÊØè‰∏ÄÊù°Ê∞¥Âπ≥Á∫øÔºåÊ®™ÂêëÂä† m-1 Êù°ÊúâÂêëËæπ</span><span class="token keyword">void</span> <span class="token function">inputH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// ÂÖ±ÊúânÊù°Ê∞¥Âπ≥Á∫øÔºåËØªÂÖ•n‰∏™Á¨¶Âè∑</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>        <span class="token comment">// Ê∞¥Âπ≥Á∫øÊñπÂêë"-&gt;"</span>        <span class="token comment">// add(1,2),add(2,3)...add(m-1,m) Á¨¨1Êù°Ê∞¥Âπ≥Á∫ø</span>        <span class="token comment">// add((i-1)*m+1,(i-1)*m+2),add((i-1)*m+2,(i-1)*m+3),...add((i-1)*m+m-1,(i-1)*m+m) Á¨¨iÊù°Ê∞¥Âπ≥Á∫ø</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'&gt;'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> m <span class="token operator">+</span> j<span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> m <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token comment">// Ê∞¥Âπ≥Á∫øÊñπÂêë"&lt;-"ÔºåÂêåÁêÜÔºåÊ≥®ÊÑè‰∏ãÊ†áËÆ°ÁÆóÊúâÂèòÂåñ</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'&lt;'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> m<span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">--</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> m <span class="token operator">+</span> j<span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> m <span class="token operator">+</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// ÂØπ‰∫éÊØè‰∏ÄÊù°ÂûÇÁõ¥Á∫øÔºåÁ∫µÂêëÂä† n-1 Êù°ÊúâÂêëËæπ</span><span class="token keyword">void</span> <span class="token function">inputV</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// ÂÖ±ÊúâmÊù°ÂûÇÁõ¥Á∫øÔºåËØªÂÖ•m‰∏™Á¨¶Âè∑</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>        <span class="token comment">// ÂûÇÁõ¥Á∫øÊñπÂêë"v"Ôºà‰ª•m=3,n=3‰∏∫‰æãÔºâ</span>        <span class="token comment">// add(1,4),add(4,7) Á¨¨1Êù°ÂûÇÁõ¥Á∫ø</span>        <span class="token comment">// add(2,5),add(5,8) Á¨¨2Êù°ÂûÇÁõ¥Á∫ø</span>        <span class="token comment">// add(i,m+i),add(m+i,2*m+i),... Á¨¨iÊù°ÂûÇÁõ¥Á∫ø</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'v'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> m <span class="token operator">+</span> i<span class="token punctuation">,</span> j <span class="token operator">*</span> m <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token comment">// Ê∞¥Âπ≥Á∫øÊñπÂêë"&lt;-"ÔºåÂêåÁêÜÔºåÊ≥®ÊÑè‰∏ãÊ†áËÆ°ÁÆóÊúâÂèòÂåñ</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'^'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> n<span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">--</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> m <span class="token operator">+</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> m <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ÔºåÈÅçÂéÜÂΩìÂâçÁªìÁÇπuÁöÑÈÇªÊé•Ë°®</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> chi<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> h<span class="token punctuation">[</span>chi<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">~</span>i<span class="token punctuation">;</span> i <span class="token operator">=</span> ne<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// Èò≤Ê≠¢Ê≠ªÂæ™ÁéØÔºåÂæÄÂõûÊêúÁ¥¢</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>st<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        st<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    sum <span class="token operator">=</span> n <span class="token operator">*</span> m<span class="token punctuation">;</span>  <span class="token comment">// È°∂ÁÇπÊÄªÊï∞</span>    <span class="token comment">// Âä†Ëæπ</span>    <span class="token function">memset</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">inputH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ê®™ÂêëÂä†Ëæπ</span>    <span class="token function">inputV</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Á∫µÂêëÂä†Ëæπ</span>    <span class="token comment">// dfsÊêúÁ¥¢ÔºåÂà§Êñ≠ÊØè‰∏Ä‰∏™ÁÇπÊòØÂê¶ËÉΩÂ§üÂà∞ËææÂÖ∂‰ªñÊâÄÊúâÁÇπÔºåÁªìÊûúÂ≠òÂÇ®Âú®ÈÇªÊé•Áü©Èòµst‰∏≠</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> sum<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// Êú¨Ë∫´ÈªòËÆ§ÂèØÂà∞ËææÔºåÂç≥ÂØπËßíÁ∫øËÆæÁΩÆ‰∏∫1</span>        st<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// Âà§Êñ≠ÈÇªÊé•Áü©ÈòµÂÄºÊòØÂê¶Âùá‰∏∫1ÔºåËã•ÈÉΩÊòØ1ÔºåË°®Á§∫ÊâÄÊúâÁÇπ‰∫íÈÄö</span>    <span class="token keyword">bool</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> sum<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> sum<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>st<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">goto</span> end<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    end<span class="token operator">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"YES"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">else</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"NO"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫Êú™-AC-‰ª£Á†Å„ÄëÔºà‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊúâ‰∏çÂ∞ëBUGÔºåÊòØ‰∏çÈîôÁöÑÂèçÈù¢Ê°à‰æãÔºâ‚ùå"><a href="#„ÄêÂë®ËµõÁé∞Âú∫Êú™-AC-‰ª£Á†Å„ÄëÔºà‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊúâ‰∏çÂ∞ëBUGÔºåÊòØ‰∏çÈîôÁöÑÂèçÈù¢Ê°à‰æãÔºâ‚ùå" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫Êú™ AC ‰ª£Á†Å„ÄëÔºà‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊúâ‰∏çÂ∞ëBUGÔºåÊòØ‰∏çÈîôÁöÑÂèçÈù¢Ê°à‰æãÔºâ‚ùå"></a>„ÄêÂë®ËµõÁé∞Âú∫Êú™ AC ‰ª£Á†Å„ÄëÔºà‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊúâ‰∏çÂ∞ëBUGÔºåÊòØ‰∏çÈîôÁöÑÂèçÈù¢Ê°à‰æãÔºâ‚ùå</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">,</span> M <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span><span class="token keyword">int</span> h<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">,</span> ne<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">,</span> idx<span class="token punctuation">;</span><span class="token keyword">bool</span> st<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> sum<span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">,</span> ne<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">,</span> h<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> idx<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> chi<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> h<span class="token punctuation">[</span>chi<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">~</span>i<span class="token punctuation">;</span> i <span class="token operator">=</span> ne<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        st<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    sum <span class="token operator">=</span> n <span class="token operator">*</span> m<span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'&gt;'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">+</span> j<span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">+</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'&lt;'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> n<span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">+</span> j<span class="token punctuation">,</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">+</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'^'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">*</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'v'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> n<span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> sum<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">bool</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> sum<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> sum<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>st<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">goto</span> end<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    end<span class="token operator">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"YES"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">else</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"NO"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"><a href="#„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë" class="headerlink" title="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"></a>„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë</h4><p>ÁªèËøáÂ§çÁõòÂêéÁöÑ‰ªîÁªÜ‰øÆÊîπÔºåÂèØ‰ª•ÂèëÁé∞Âë®ËµõÁé∞Âú∫Êú™ AC ÁöÑ‰ª£Á†ÅÊúâ‰∏çÂ∞ëBUGÔºåÂ¶Ç <strong>Ê≠ªÂæ™ÁéØ</strong>„ÄÅ<strong>‰∏ãÊ†áËÆ°ÁÆóÈîôËØØÂØºËá¥Ë∂äÁïå</strong>„ÄÅ<strong>forÂæ™ÁéØÊù°‰ª∂‰π¶ÂÜôÈîôËØØ</strong>ÔºàÂ¶Ç <code>j--</code> ÂÜôÊàê‰∫Ü <code>j++</code>ÔºâÁ≠âÔºåËøô‰∫õÈÉΩÊòØ‰πãÂêéÂú®‰π¶ÂÜô‰ª£Á†ÅÊó∂ÔºåÈúÄË¶ÅÊ≥®ÊÑèÁöÑ„ÄÇ‚òòÔ∏è</p><hr><h3 id="„ÄêÈ¢òÁõÆC„ÄëÈáëÊòéÁöÑÂÅáÊúü"><a href="#„ÄêÈ¢òÁõÆC„ÄëÈáëÊòéÁöÑÂÅáÊúü" class="headerlink" title="„ÄêÈ¢òÁõÆC„ÄëÈáëÊòéÁöÑÂÅáÊúü"></a>„ÄêÈ¢òÁõÆC„ÄëÈáëÊòéÁöÑÂÅáÊúü</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÈáëÊòéÊúâ $n$ Â§©ÂÅáÊúüÔºåÁºñÂè∑ $1‚àºn$„ÄÇ</p><p>Êï¥‰∏™ÂÅáÊúüÊúüÈó¥Ôºå‰ªñÊØèÂ§©Âè™ÂèØËÉΩÊúâ‰∏âÁßçÈÄâÊã©Ôºö</p><ol><li>ÂéªÂÅ•Ë∫´ÊàøÂÅ•Ë∫´‰∏ÄÊï¥Â§©„ÄÇÔºàÂâçÊèêÊòØÂΩìÂ§©ÂÅ•Ë∫´ÊàøÂºÄÊîæÔºâ</li><li>ÂéªÂõæ‰π¶È¶ÜÁúã‰π¶‰∏ÄÊï¥Â§©„ÄÇÔºàÂâçÊèêÊòØÂΩìÂ§©Âõæ‰π¶È¶ÜÂºÄÊîæÔºâ</li><li>Âú®ÂÆ∂‰ºëÊÅØ‰∏ÄÊï¥Â§©„ÄÇ</li></ol><p>Áî®‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫ $n$ ÁöÑÊï¥Êï∞Êï∞ÁªÑ $a_1,a_2,\dots,a_n$ Êù•Ë°®Á§∫Ëøô $n$ Â§©ÂÅ•Ë∫´Êàø‰∏éÂõæ‰π¶È¶ÜÁöÑÂºÄÊîæÊÉÖÂÜµÔºåÂÖ∂‰∏≠Ôºö</p><ul><li>$a_i$ Á≠â‰∫é $0$ Ë°®Á§∫Á¨¨ $i$ Â§©ÂÅ•Ë∫´ÊàøÂÖ≥Èó≠‰∏îÂõæ‰π¶È¶ÜÂÖ≥Èó≠„ÄÇ</li><li>$a_i$ Á≠â‰∫é $1$ Ë°®Á§∫Á¨¨ $i$ Â§©ÂÅ•Ë∫´ÊàøÂÖ≥Èó≠‰ΩÜÂõæ‰π¶È¶ÜÂºÄÊîæ„ÄÇ</li><li>$a_i$ Á≠â‰∫é $2$ Ë°®Á§∫Á¨¨ $i$ Â§©ÂÅ•Ë∫´ÊàøÂºÄÊîæ‰ΩÜÂõæ‰π¶È¶ÜÂÖ≥Èó≠„ÄÇ</li><li>$a_i$ Á≠â‰∫é $3$ Ë°®Á§∫Á¨¨ $i$ Â§©ÂÅ•Ë∫´ÊàøÂºÄÊîæ‰∏îÂõæ‰π¶È¶ÜÂºÄÊîæ„ÄÇ</li></ul><p>ÈáëÊòéÂ∏åÊúõËá™Â∑±Áî®Êù•‰ºëÊÅØÁöÑÂ§©Êï∞Â∞ΩÂèØËÉΩÂ∞ëÔºå‰ΩÜÊòØÔºå‰ªñ‰∏ÄÂÆö‰∏ç‰ºö <strong>ËøûÁª≠‰∏§Â§©ÔºàÊàñÊõ¥Â§öÂ§©Ôºâ</strong>ÂéªÂÅ•Ë∫´ÊàøÂÅ•Ë∫´Ôºå‰πü‰∏ÄÂÆö‰∏ç‰ºö <strong>ËøûÁª≠‰∏§Â§©ÔºàÊàñÊõ¥Â§öÂ§©Ôºâ</strong>ÂéªÂõæ‰π¶È¶ÜÁúã‰π¶„ÄÇ</p><p>ËØ∑‰Ω†ËÆ°ÁÆóÔºåÈáëÊòéÁî®Êù•‰ºëÊÅØÁöÑÊúÄÂ∞ëÂèØËÉΩÂ§©Êï∞„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-2"><a href="#„ÄêËæìÂÖ•„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏Ä‰∏™Êï¥Êï∞ $n$„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´ $n$ ‰∏™Êï¥Êï∞ $a_1,a_2,\dots,a_n$„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-2"><a href="#„ÄêËæìÂá∫„Äë-2" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÈáëÊòéÁî®Êù•‰ºëÊÅØÁöÑÊúÄÂ∞ëÂèØËÉΩÂ§©Êï∞„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-2"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-2" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>Ââç $5$ ‰∏™ÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 10$„ÄÇ<br>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 100$Ôºå$0 \le ai \le 3$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span><span class="token number">1</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">7</span><span class="token number">1</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã3„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span class="token number">2</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã3„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë-2"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë-2" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4805/">https://www.acwing.com/problem/content/4805/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Áä∂ÊÄÅÊú∫ DP„ÄÇ</p><p>‰∫åÁª¥ DP Êï∞ÁªÑ <code>dp[i][k]</code> ÁöÑÁ¨¨‰∏ÄÁª¥Â≠òÂÇ®Â§©Êï∞ÔºåÁ¨¨‰∫åÁª¥Â≠òÂÇ® ‰ºëÊÅØ/ÂéªÂõæ‰π¶È¶Ü/ÂéªÂÅ•Ë∫´Êàø ‰∏âÁßçÁä∂ÊÄÅ</p><ul><li><code>dp[i][0]</code> Ë°®Á§∫Á¨¨ i Â§©‰ºëÊÅØÊó∂ÔºåÂâç i Â§©ÁöÑÊÄªÂ∑•‰ΩúÂ§©Êï∞</li><li><code>dp[i][1]</code> Ë°®Á§∫Á¨¨ i Â§©ÂéªÂõæ‰π¶È¶ÜÊó∂ÔºåÂâç i Â§©ÁöÑÊÄªÂ∑•‰ΩúÂ§©Êï∞</li><li><code>dp[i][2]</code> Ë°®Á§∫Á¨¨ i Â§©ÂéªÂÅ•Ë∫´Êó∂ÔºåÂâç i Â§©ÁöÑÊÄªÂ∑•‰ΩúÂ§©Êï∞</li></ul><p>ÂÖ∑‰ΩìÁªÜËäÇËßÅ‰ª£Á†ÅÊ≥®Èáä„ÄÇ</p><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-1"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-1" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">110</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> dp<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// ËøîÂõû‰∏â‰∏™Êï∞ÊúÄÂ§ßÂÄºÔºàPS: max‰∏≠ÊúÄÂ§öÂåÖÂê´‰∏§‰∏™ÂèÇÊï∞ÔºåÊâÄ‰ª•ÊØîËæÉ‰∏â‰∏™Êó∂Ë¶ÅÂÜô‰∏§Ê¨°maxÔºâ</span><span class="token keyword">int</span> <span class="token function">maxV</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> z<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token function">max</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// dp[i][k] -&gt; iË°®Á§∫Â§©Êï∞ÔºåkË°®Á§∫Áä∂ÊÄÅ</span>    <span class="token comment">// dp[i][0]Ë°®Á§∫Á¨¨iÂ§©‰ºëÊÅØÊó∂ÔºåÂâçiÂ§©ÁöÑÊÄªÂ∑•‰ΩúÂ§©Êï∞</span>    <span class="token comment">// dp[i][1]Ë°®Á§∫Á¨¨iÂ§©ÂéªÂõæ‰π¶È¶ÜÊó∂ÔºåÂâçiÂ§©ÁöÑÊÄªÂ∑•‰ΩúÂ§©Êï∞</span>    <span class="token comment">// dp[i][2]Ë°®Á§∫Á¨¨iÂ§©ÂéªÂÅ•Ë∫´Êó∂ÔºåÂâçiÂ§©ÁöÑÊÄªÂ∑•‰ΩúÂ§©Êï∞</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// Á¨¨iÂ§©ÈÄâÊã©‰ºëÊÅØÔºàÊ≤°ÊúâÈôêÂà∂Êù°‰ª∂ÔºâÔºåÂèñi-1Â§©Â∑•‰ΩúÂ§©Êï∞ÊúÄÂ§ßÂÄº</span>        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">maxV</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Á¨¨iÂ§©ÈÄâÊã©ÂéªÂõæ‰π¶È¶ÜÔºàÂøÖÈ°ªÂú®a[i]‰∏∫1ÊàñËÄÖ3ÁöÑÊÉÖÂÜµ‰∏ãÔºâÔºåÂèñ(i-1Â§©‰ºëÊÅØ+1Ôºåi-1Â§©ÂéªÂõæ‰π¶È¶ÜÔºåi-1Â§©ÂéªÂÅ•Ë∫´+1ÔºâÊúÄÂ§ßÂÄº</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">maxV</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Á¨¨iÂ§©ÈÄâÊã©ÂéªÂÅ•Ë∫´ÔºàÂøÖÈ°ªÂú®a[i]‰∏∫2ÊàñËÄÖ3ÁöÑÊÉÖÂÜµ‰∏ãÔºâÔºåÂèñ(i-1Â§©‰ºëÊÅØ+1Ôºåi-1Â§©ÂéªÂõæ‰π¶È¶Ü+1Ôºåi-1Â§©ÂéªÂÅ•Ë∫´ÔºâÊúÄÂ§ßÂÄº</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">||</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">maxV</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// PS: max‰∏≠ÊúÄÂ§öÂåÖÂê´‰∏§‰∏™ÂèÇÊï∞ÔºåÊâÄ‰ª•ÊØîËæÉ‰∏â‰∏™Êó∂Ë¶ÅÂÜô‰∏§Ê¨°max</span>    cout <span class="token operator">&lt;&lt;</span> n <span class="token operator">-</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫Êú™-AC-‰ª£Á†Å„Äë‚ùå"><a href="#„ÄêÂë®ËµõÁé∞Âú∫Êú™-AC-‰ª£Á†Å„Äë‚ùå" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫Êú™ AC ‰ª£Á†Å„Äë‚ùå"></a>„ÄêÂë®ËµõÁé∞Âú∫Êú™ AC ‰ª£Á†Å„Äë‚ùå</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">105</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">-</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">||</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token operator">||</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> n <span class="token operator">-</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë-1"><a href="#„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë-1" class="headerlink" title="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"></a>„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë</h4><p>ÂØπÊØî‰∏§‰∏™‰ª£Á†ÅÔºåÂèØ‰ª•ÂèëÁé∞Âë®ËµõÁé∞Âú∫ÁöÑ‰ª£Á†ÅËôΩÁÑ∂ÊúâÁä∂ÊÄÅÂàÜÁ±ª„ÄÅË°®Á§∫ÁöÑÈõèÂΩ¢Ôºå‰ΩÜÊòØÁî±‰∫éÁº∫‰πè Áä∂ÊÄÅÊú∫DP ÁöÑÁêÜËÆ∫Áü•ËØÜÔºåÊ≤°ËÉΩÁ≥ªÁªü„ÄÅÂÆåÊï¥ÁöÑÂÜôÂá∫‰ª£Á†ÅÔºåÂ≠òÂú®BUGÔºåÊúâ 4 ‰∏™ÁÇπÊú™ÈÄöËøá„ÄÇ</p><p>ËØ¥ÊòéËøòÊòØË¶ÅÂ§öÁúãËØæÔºåÊääÂü∫Á°ÄÁöÑÁü•ËØÜÁÇπÂ≠¶Â•ΩÔºåÂÜçÂú®Âë®Ëµõ‰∏≠ÊääËøô‰∫õÁü•ËØÜÁÇπËûç‰ºöË¥ØÈÄö„ÄÇ</p><hr>]]></content>
      
      
      <categories>
          
          <category> AcwingÂë®ËµõÂ§çÁõò </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> Acwing </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊµÅÊÑü‰º†Êüì</title>
      <link href="/2023/04/12/xin-xi-ao-sai-ti-jie-liu-gan-chuan-ran/"/>
      <url>/2023/04/12/xin-xi-ao-sai-ti-jie-liu-gan-chuan-ran/</url>
      
        <content type="html"><![CDATA[<h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊµÅÊÑü‰º†Êüì"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊµÅÊÑü‰º†Êüì" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊµÅÊÑü‰º†Êüì"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊµÅÊÑü‰º†Êüì</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>Êúâ‰∏ÄÊâπÊòìÊÑü‰∫∫Áæ§‰ΩèÂú®ÁΩëÊ†ºÁä∂ÁöÑÂÆøËàçÂå∫ÂÜÖÔºåÂÆøËàçÂå∫‰∏∫ $n*n$ ÁöÑÁü©ÈòµÔºåÊØè‰∏™Ê†ºÁÇπ‰∏∫‰∏Ä‰∏™ÊàøÈó¥ÔºåÊàøÈó¥ÈáåÂèØËÉΩ‰Ωè‰∫∫Ôºå‰πüÂèØËÉΩÁ©∫ÁùÄ„ÄÇ</p><p>Âú®Á¨¨‰∏ÄÂ§©ÔºåÊúâ‰∫õÊàøÈó¥ÈáåÁöÑ‰∫∫Âæó‰∫ÜÊµÅÊÑüÔºå‰ª•ÂêéÊØèÂ§©ÔºåÂæóÊµÅÊÑüÁöÑ‰∫∫‰ºö‰ΩøÂÖ∂ÈÇªÂ±Ö‰º†Êüì‰∏äÊµÅÊÑüÔºàÂ∑≤ÁªèÂæóÁóÖÁöÑ‰∏çÂèòÔºâÔºåÁ©∫ÊàøÈó¥‰∏ç‰ºö‰º†Êüì„ÄÇ</p><p>ËØ∑ËæìÂá∫Á¨¨ $m$ Â§©ÂæóÊµÅÊÑüÁöÑ‰∫∫Êï∞„ÄÇ</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>Á¨¨‰∏ÄË°å‰∏Ä‰∏™Êï∞Â≠ó $n$Ôºå$n$ ‰∏çË∂ÖËøá $100$ÔºåË°®Á§∫Êúâ $n*n$ ÁöÑÂÆøËàçÊàøÈó¥„ÄÇ</p><p>Êé•‰∏ãÊù•ÁöÑ $n$ Ë°åÔºåÊØèË°å $n$ ‰∏™Â≠óÁ¨¶Ôºå‚Äô.‚Äô Ë°®Á§∫Á¨¨‰∏ÄÂ§©ËØ•ÊàøÈó¥‰ΩèÁùÄÂÅ•Â∫∑ÁöÑ‰∫∫Ôºå‚Äô#‚Äô Ë°®Á§∫ËØ•ÊàøÈó¥Á©∫ÁùÄÔºå‚Äô@‚Äô Ë°®Á§∫Á¨¨‰∏ÄÂ§©ËØ•ÊàøÈó¥‰ΩèÁùÄÂæóÊµÅÊÑüÁöÑ‰∫∫„ÄÇ</p><p>Êé•‰∏ãÊù•ÁöÑ‰∏ÄË°åÊòØ‰∏Ä‰∏™Êï¥Êï∞ $m$Ôºå$m$ ‰∏çË∂ÖËøá $100$„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>ËæìÂá∫Á¨¨ $m$ Â§©ÔºåÂæóÊµÅÊÑüÁöÑ‰∫∫Êï∞„ÄÇ</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>#<span class="token punctuation">.</span>#<span class="token punctuation">.</span>@<span class="token punctuation">.</span><span class="token punctuation">.</span>#@<span class="token punctuation">.</span><span class="token punctuation">.</span>#<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">16</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1191">http://ybt.ssoier.cn:8088/problem_show.php?pid=1191</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p>Âú®Êëä‰∏ªÁúãÊù•ÔºåÊú¨È¢òÂØπ‰∫é <strong>ÁÆóÊ≥ïÂàùÂ≠¶ËÄÖ</strong> ‰∏ªË¶ÅÊúâ‰ª•‰∏ãÂá†‰∏™ <strong>ÈöæÁÇπ</strong>Ôºö</p><ul><li>Â¶Ç‰ΩïËØªÂÖ•Â≠óÁ¨¶Áü©Èòµ Ôºü</li><li>Â¶Ç‰ΩïÊ®°ÊãüÊÑüÊüìËøáÁ®ã Ôºü</li></ul><p><strong>ÂØπ‰∫éÁ¨¨‰∏Ä‰∏™ÈöæÁÇπ</strong>ÔºåÊëä‰∏ªÈááÁî®ÁöÑÊñπÂºèÊòØ „ÄåÂÆö‰πâ‰∏Ä‰∏™ <strong>‰∫åÁª¥ÁöÑÂ≠óÁ¨¶Êï∞ÁªÑ</strong>„ÄÅ‰ΩøÁî® <strong>cin</strong> ËØªÂÖ•Êï∞ÊçÆ„ÄçÔºàÈúÄË¶ÅÂºÄÂêØ <strong>cin ËØªÂÖ•‰ºòÂåñ</strong>ÔºåÂáèÂ∞ëËØªÂÖ•Êï∞ÊçÆÁöÑÊó∂Èó¥Ôºâ„ÄÇ</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">105</span><span class="token punctuation">;</span><span class="token keyword">char</span> s<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// ÂÆö‰πâ‰∏Ä‰∏™‰∫åÁª¥ÁöÑÂ≠óÁ¨¶Êï∞ÁªÑ</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//cin ËØªÂÖ•‰ºòÂåñ</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//ËØªÂÖ•Áü©Èòµ</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>üçâ PSÔºö‰ΩøÁî® <code>scanf</code> ËØªÂÖ•Êó∂ÔºåÈúÄË¶ÅËÄÉËôë <strong>Êç¢Ë°åÁ¨¶ÁöÑËØªÂÖ•</strong>ÔºåËÄå <code>cin</code> Âàô‰∏çÁî®ÔºåËøôÊòØ <code>scanf</code> ÁöÑÁº∫ÁÇπÔºõ‰ΩÜ <code>scanf</code> ÁöÑËØªÂÖ•ÈÄüÂ∫¶ÊØîÊ≤°ÊúâÂºÄ cin ËØªÂÖ•‰ºòÂåñÁöÑ <code>cin</code> Âø´ÂæàÂ§öÔºåËøôÊòØ <code>scanf</code> ÁöÑ‰ºòÁÇπ„ÄÇ</p><p><code>cin</code> Âú®ÂºÄ‰∫Ü <code>cin</code> ËØªÂÖ•‰ºòÂåñÂêéÔºåÈÄüÂ∫¶Âü∫Êú¨‰∏äËÉΩËææÂà∞ <code>scanf</code> ÁöÑÊ∞¥Âπ≥ÔºåÊ≠§È¢òÂÆåÂÖ®Â§üÁî®‰∫Ü„ÄÇ</p><br><p><strong>ÂØπ‰∫éÁ¨¨‰∫å‰∏™ÈöæÁÇπ</strong>ÔºåÊëä‰∏ªÈááÁî®‰∫Ü <strong>ÈÅçÂéÜÊ®°Êãü</strong> ÁöÑÊñπÊ≥ïÔºåÊØèÂ§©ÈÉΩÈÅçÂéÜ‰∏ÄÊ¨°‰∫åÁª¥Áü©ÈòµÔºåÊ®°ÊãüÊÑüÊüìËøáÁ®ã„ÄÇ</p><p>Ê®°ÊãüËøáÁ®ã‰πüÈùûÂ∏∏ÁÆÄÂçïÔºåÂè™ÈúÄÂú®ÈÅçÂéÜÊó∂ÔºåÈÅáÂà∞ ‚Äò@‚Äô ÁöÑÊàøÈó¥ÔºåÂ∞±ÊääÂõõÂë®ÈùûÁ©∫ÁöÑÊàøÈó¥ÁΩÆ‰∏∫ ‚Äò@‚Äô</p><p>‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‰ΩÜÊòØËøôÁßçÊñπÂºèÈùûÂ∏∏ÂÆπÊòìÂá∫Áé∞ <strong>‰∏Ä‰∏™ËØØÂå∫</strong>ÔºåÂ∞±ÊòØ „Äå<strong>ÊØèÊ¨°Áü©ÈòµËøòÊ≤°ÊúâÈÅçÂéÜÂÆå</strong>ÔºåÂ∞±ÊÄ•ÁùÄÊää <strong>ÂΩìÂâçÊàøÈó¥ÊÑüÊüìÁöÑÊñ∞ÊàøÈó¥ÁΩÆ‰∏∫ ‚Äò@‚Äô</strong> „Äç</p><p>ËøôÊ†∑‰ºöÂá∫Áé∞‰∏ãÈù¢ËøôÁßçÊÉÖÂÜµÔºö</p><ul><li>Á¨¨‰∏ÄÂ§©ÔºåÂàùÂßãÊÉÖÂÜµ</li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">@<span class="token punctuation">.</span><span class="token punctuation">.</span>#<span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Á¨¨‰∫åÂ§©ÔºåÈÅçÂéÜÂà∞Á¨¨ 1 ‰∏™ÊàøÈó¥Êó∂</li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">@@<span class="token punctuation">.</span>#<span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Á¨¨‰∫åÂ§©ÔºåÈÅçÂéÜÂà∞Á¨¨ 2 ‰∏™ÊàøÈó¥Êó∂ÔºåÁî±‰∫éÂΩìÂâçÊàøÈó¥Ë¢´ÁΩÆ‰∏∫‰∫Ü ‚Äò@‚ÄôÔºåÊâÄ‰ª•ÂÖ∂Âë®Âõ¥ÁöÑÊàøÈó¥‰πüË¢´ÁΩÆ‰∏∫ ‚Äò@‚Äô</li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">@@@#@<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>Á¨¨‰∫åÂ§©ÔºåÈÅçÂéÜÂà∞Á¨¨ 3 ‰∏™ÊàøÈó¥Êó∂ÔºåÁî±‰∫éÂΩìÂâçÊàøÈó¥Ë¢´ÁΩÆ‰∏∫‰∫Ü ‚Äò@‚ÄôÔºåÊâÄ‰ª•ÂÖ∂Âë®Âõ¥ÁöÑÊàøÈó¥‰πüË¢´ÁΩÆ‰∏∫ ‚Äò@‚Äô</li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">@@@#@@<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>‚Ä¶ ÁúÅÁï•Ââ©‰∏ãÁöÑÈÅçÂéÜËøáÁ®ã</p></li><li><p>Á¨¨‰∫åÂ§©ÁöÑÊúÄÁªàÁªìÊûú</p></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">@@@#@@<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ËøôÊ†∑ÁöÑÂæóÂà∞ÁöÑÁªìÊûúÊòæÁÑ∂ÊòØ‰∏çÂØπÁöÑ ‚ùå </p><p>Âõ†‰∏∫ÂÆûÈôÖ‰∏äÁ¨¨ 2 Â§©Ôºå‰ªÖÊúâ 2 Âè∑ÊàøÈó¥Ë¢´ÊÑüÊüìÔºå3 Âè∑ÊàøÈó¥ÈúÄË¶ÅÁ≠âÂà∞Á¨¨ 3 Â§©Êâç‰ºöË¢´ÊÑüÊüì„ÄÇ‚úÖ</p><ul><li>Á¨¨‰∫åÂ§©ÂÆûÈôÖÁªìÊûú</li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">@@<span class="token punctuation">.</span>#<span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br><p>ÊâÄ‰ª•ÔºåÊàë‰ª¨ÈúÄË¶ÅÂÄüÂä©‰∏Ä‰∏™<strong>Ê†áËÆ∞Êï∞ÁªÑ b</strong>ÔºåÂ≠òÂÇ®ÂΩìÂ§©Ë¢´ÊÑüÊüìÁöÑÊàøÈó¥ÔºåËÄå‰∏çÊòØÂú®ÈÅçÂéÜÊó∂Áõ¥Êé•‰øÆÊîπÂéüÁü©ÈòµÁöÑÂÄº„ÄÇ</p><p>Á≠âÂΩìÂ§©ÁöÑ <strong>ÈÅçÂéÜÁªìÊùüÂêé</strong>ÔºåÂÜçÊ†πÊçÆÊ†áËÆ∞Êï∞ÁªÑ b Êù•‰øÆÊîπÂéüÁü©ÈòµÁöÑÂÄºÔºåËøôÊ†∑Â∞±‰∏ç‰ºöÂá∫Áé∞‰∏äÈù¢ËøôÁßçÊÉÖÂÜµ‰∫Ü„ÄÇ</p><p>‰ªé‰ª£Á†ÅÁöÑËßíÂ∫¶ÔºåÊòØËøôÊ†∑ÁöÑÂå∫Âà´Ôºö</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//Ê®°ÊãüÊÑüÊüìËøáÁ®ãÔºåÂπ∂Ê†áËÆ∞</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'@'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// ÈîôËØØÁöÑÁõ¥Êé•‰øÆÊîπÊ≥ï</span>            <span class="token comment">//if (s[i - 1][j] != '#') s[i - 1][j] = '@';</span>            <span class="token comment">//if (s[i + 1][j] != '#') s[i + 1][j] = '@';</span>            <span class="token comment">//if (s[i][j - 1] != '#') s[i][j - 1] = '@';</span>            <span class="token comment">//if (s[i][j + 1] != '#') s[i][j + 1] = '@';</span>                      <span class="token comment">// Ê≠£Á°ÆÁöÑÊ†áËÆ∞Ê≥ï</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//Â∞ÜÂ∏¶ÊúâÊ†áËÆ∞ÁöÑÊàøÈó¥ÊÑüÊüì</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'@'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>PS üçâÔºöÊú¨È¢ò‰πüÂèØ‰ª•‰ΩøÁî® <strong>ÂπøÂ∫¶‰ºòÂÖàÊêúÁ¥¢</strong> BFS ÁöÑÊñπÊ≥ïÊ±ÇËß£ÔºåÂÖ∑‰Ωì‰ª£Á†ÅËßÅ‰∏ãÊñá„ÄÇ</p><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><p>Ê®°Êãü</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">105</span><span class="token punctuation">;</span><span class="token keyword">char</span> s<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// Â≠òÂÇ®ÊàøÈó¥Áä∂ÊÄÅ</span><span class="token keyword">int</span> b<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//Áî®‰∫éÊÑüÊüìÁöÑÊ†áËÆ∞Êï∞ÁªÑ</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> cnt<span class="token punctuation">;</span><span class="token comment">// ÊØèÂ§©Êõ¥Êñ∞Áü©Èòµ</span><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ÁªüËÆ°Âπ∂ËæìÂá∫ÊÑüÊüì‰∫∫Êï∞</span><span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//ËØªÂÖ•Áü©Èòµ</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cin <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// ÁªüËÆ°Á¨¨mÂ§©ÔºåÈúÄË¶ÅÊõ¥Êñ∞m-1Ê¨°</span>    cin <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>m<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">//Êõ¥Êñ∞Áü©Èòµ</span>        <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">// ÁªüËÆ°ÊÑüÊüìÊÄª‰∫∫Êï∞</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//ÂàùÂßãÂåñÊÑüÊüìÊ†áËÆ∞Êï∞ÁªÑb</span>    <span class="token function">memset</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Ê®°ÊãüÊÑüÊüìËøáÁ®ãÔºåÂπ∂Ê†áËÆ∞</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">// ÂêëÂõõ‰∏™ÊñπÂêëËøõË°åÊÑüÊüìÔºåÊ†áËÆ∞‰ΩçÁΩÆ</span>            <span class="token comment">// Ê≥®ÊÑè‰∏çËÉΩÈ©¨‰∏äÊääÁõ∏Â∫îÊàøÈó¥Êîπ‰∏∫ @ÔºåÂê¶Âàô‰ºöÂá∫Áé∞‰∏ÄÊù°Á∫ø‰∏äÁöÑÊàøÈó¥‰∏ÄÂ§©Â∞±ÊÑüÊüìÂÆåÁ≠âÊÉÖÂÜµ</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'@'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token char">'#'</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">//Â∞ÜÂ∏¶ÊúâÊ†áËÆ∞ÁöÑÊàøÈó¥ÊÑüÊüì</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'@'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//ÁªüËÆ°ÊÑüÊüì‰∫∫Êï∞</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'@'</span><span class="token punctuation">)</span>                cnt<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> cnt <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>BFS</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> pair<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> PII<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e2</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">char</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> ans<span class="token punctuation">;</span><span class="token keyword">int</span> dx<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// ÊñπÂêëÊï∞ÁªÑ</span><span class="token keyword">int</span> dy<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>queue<span class="token operator">&lt;</span>PII<span class="token operator">&gt;</span> q<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span>  <span class="token comment">// BFSÈòüÂàó</span><span class="token comment">// bfsËøîÂõûÊñ∞ÊÑüÊüìÁöÑ‰∫∫Êï∞</span><span class="token keyword">int</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// qÂ≠òÂÇ®ÂΩìÂ§©ÂàùÂßãÁöÑÊÑüÊüì‰∫∫ÁöÑÂùêÊ†á</span>    <span class="token comment">// tmpÂ≠òÂÇ®ÂΩìÂ§©Êñ∞ÊÑüÊüìÁöÑ‰∫∫ÁöÑÂùêÊ†á</span>    <span class="token comment">// pop()ÂΩìÂ§©q‰∏≠ÁöÑÂùêÊ†áÔºåÂπ∂Â∞ÜÂõõÂë®Á¨¶ÂêàÊù°‰ª∂ÁöÑÂùêÊ†ápush()Âà∞tmp‰∏≠</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// qÁöÑÈòüÈ¶ñÂÖÉÁ¥†</span>        PII h <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x <span class="token operator">=</span> h<span class="token punctuation">.</span>first<span class="token punctuation">,</span> y <span class="token operator">=</span> h<span class="token punctuation">.</span>second<span class="token punctuation">;</span>                <span class="token comment">// ÊÑüÊüìÂõõÂë®</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> x1 <span class="token operator">=</span> x <span class="token operator">+</span> dx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> y1 <span class="token operator">=</span> y <span class="token operator">+</span> dy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'.'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                a<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">'@'</span><span class="token punctuation">;</span>                tmp<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// ÁªüËÆ°ÂΩìÂ§©ÊÑüÊüì‰∫∫Êï∞ÔºàÂç≥tmp‰∏≠ÁöÑÂÖÉÁ¥†Êï∞ÈáèÔºâÔºåÂπ∂Â∞Ütmp‰∏≠ÁöÑÂÖÉÁ¥†ÂÖ®ÈÉ®push()Âà∞q‰∏≠Ôºå‰æø‰∫é‰∏ã‰∏ÄÂ§©ËÆ°ÁÆó</span>    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>tmp<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        PII head <span class="token operator">=</span> tmp<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        cnt<span class="token operator">++</span><span class="token punctuation">;</span>        q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>        tmp<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> cnt<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment">// Â∞ÜÂàùÂßãÊÑüÊüì‰∫∫Êï∞ÂÖ•Èòü</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">'@'</span><span class="token punctuation">)</span> q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>i<span class="token punctuation">,</span> j<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ans<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    cin <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>  <span class="token comment">// mÂ§©Ôºàm==1‰∏∫ÂàùÂßãÁä∂ÊÄÅÔºâ</span>    <span class="token comment">// bfsËøîÂõûÊñ∞ÊÑüÊüìÁöÑ‰∫∫Êï∞</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> ans <span class="token operator">+=</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> ans <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÈÄíÊé® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcwingÁ¨¨87Âú∫Âë®ËµõÂ§çÁõò</title>
      <link href="/2023/04/11/acwing-di-87-chang-zhou-sai-fu-pan/"/>
      <url>/2023/04/11/acwing-di-87-chang-zhou-sai-fu-pan/</url>
      
        <content type="html"><![CDATA[<h1 id="„ÄêAcwing-Âë®ËµõÂ§çÁõò„ÄëÁ¨¨87Âú∫Âë®ËµõÂ§çÁõòÔºà2023-1-21Ôºâ"><a href="#„ÄêAcwing-Âë®ËµõÂ§çÁõò„ÄëÁ¨¨87Âú∫Âë®ËµõÂ§çÁõòÔºà2023-1-21Ôºâ" class="headerlink" title="„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨87Âú∫Âë®ËµõÂ§çÁõòÔºà2023.1.21Ôºâ"></a>„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨87Âú∫Âë®ËµõÂ§çÁõòÔºà2023.1.21Ôºâ</h1><h2 id="Âë®ËµõÂ§çÁõò-‚úçÔ∏è"><a href="#Âë®ËµõÂ§çÁõò-‚úçÔ∏è" class="headerlink" title="Âë®ËµõÂ§çÁõò ‚úçÔ∏è"></a>Âë®ËµõÂ§çÁõò ‚úçÔ∏è</h2><blockquote><p>Êú¨Âë®‰∏™‰∫∫ÊéíÂêçÔºö281/1252Ôºà22.4%Ôºâ</p><p>ACÊÉÖÂÜµÔºö2/3</p><p>‰∏ÄÊ¨°‰º¥ÈöèÁùÄÈô§Â§ïÂ§úÈû≠ÁÇÆÂ£∞„ÄÅÁÉüËä±Â£∞ËøõË°åÁöÑÂë®Ëµõ üéâ</p><p>Â§ßÂπ¥‰∏âÂçÅÈÉΩÊúâ1kÂ§öÂêçÂ∞è‰ºô‰º¥‰∏ÄËµ∑ÊâìÊØîËµõÔºå‰∏çÂæó‰∏çËØ¥ Acwing ÁöÑÂ≠¶‰π†Ê∞õÂõ¥ÁúüÂ•Ω</p><p>ËøôÊòØÂçö‰∏ªÁ¨¨‰∫åÊ¨°ÂèÇÂä†ÁöÑÂë®ËµõÔºå‰ªéÊéíÂêçÊØîÊù•ÁúãÔºåÁõ∏ÊØîÁ¨¨‰∏ÄÊ¨°ÁöÑ 28.7% Áï•ÊúâËøõÊ≠•üòÄ</p><p>‰ΩÜÊòØ‰∏çÁü•ÈÅì‰∏∫‰ªÄ‰πàËøôÊ¨°Êï≤‰ª£Á†ÅÊó∂ÊØî‰∏äÊ¨°ÊÄ•Ë∫Å‰∏çÂ∞ëÔºå‰πüËÆ∏ÊòØÁ¨¨‰∏ÄÊ¨°Âë®ËµõÂ§çÁõòÊó∂ÔºåÁúãËßÅ TOP5 ÁöÑÂ§ß‰Ω¨ÈÉΩÊòØ‰∏çÂà∞ 5 ÂàÜÈíüÊï≤ÂÆå‰∫ÜÔºåÂÆûÂäõÁöÑÂ∑ÆË∑ùËÆ©Ëá™Â∑±Êúâ‰∫ÜÂøÉÁêÜÂéãÂäõÂêß</p><p>‰ΩÜÊòØÊÄé‰πàËØ¥Âë¢ÔºåÂÆûÂäõÂíåÈ¢òÈáèÊîæÂú®ÈÇ£ÔºåÂÖ∂ÂÆûËá™Â∑±ÂÜçÊÄé‰πàÁùÄÊÄ•‰πüÊòØÊó†Êµé‰∫é‰∫ãÁöÑÔºåÁÑ¶ÊÄ•ÁöÑÂøÉÊÄÅÂèçËÄå‰ºöÂΩ±ÂìçËá™Â∑±ÁöÑÂèëÊå•Ôºå‰∏çÂ¶ÇÁ®≥‰∏ãÂøÉÊù•ÔºåÊÖ¢ÊÖ¢ÊÄùËÄÉ„ÄÇ</p><p>Â∏åÊúõ‰∏ãÊ¨°ËÉΩÂ§üÊëÜÊ≠£ÂøÉÊÄÅÔºåÂêåÊó∂Âπ≥Â∏∏Êõ¥Âä†Âä™ÂäõÂ≠¶‰π†ÔºåÁªßÁª≠Âä†Ê≤π üí™</p></blockquote><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-170409.png" alt="Âë®ËµõrankÂõæ"></p><h2 id="Âë®Ëµõ‰ø°ÊÅØ-üìö"><a href="#Âë®Ëµõ‰ø°ÊÅØ-üìö" class="headerlink" title="Âë®Ëµõ‰ø°ÊÅØ üìö"></a>Âë®Ëµõ‰ø°ÊÅØ üìö</h2><p><strong>Êó∂Èó¥</strong>Ôºö2023Âπ¥ 1 Êúà 21 Êó• 19Ôºö00-20Ôºö15</p><p><strong>Á´ûËµõÈìæÊé•</strong>Ôºö<a href="https://www.acwing.com/activity/content/introduction/2814/">https://www.acwing.com/activity/content/introduction/2814/</a></p><p><strong>yÊÄªÁõ¥Êí≠Èó¥</strong>Ôºö<a href="http://live.bilibili.com/21871779">http://live.bilibili.com/21871779</a></p><p><strong>yÊÄªÂΩïÊí≠ËÆ≤Ëß£ËßÜÈ¢ë</strong>Ôºö<a href="https://www.bilibili.com/video/BV1LM4y1X7yH/?share_source=copy_web&amp;vd_source=33934722b558a5cefa750c1a9be72249">„ÄêAcWingÊùØ - Á¨¨87Âú∫Âë®ËµõËÆ≤Ëß£„Äë</a></p><h2 id="È¢òÁõÆÂàóË°®-üßëüèª‚Äçüíª"><a href="#È¢òÁõÆÂàóË°®-üßëüèª‚Äçüíª" class="headerlink" title="È¢òÁõÆÂàóË°® üßëüèª‚Äçüíª"></a>È¢òÁõÆÂàóË°® üßëüèª‚Äçüíª</h2><br><table><thead><tr><th align="center">È¢òÁõÆÂêçÁß∞</th><th align="center">ÂéüÈ¢òÈìæÊé•</th><th align="center">ËßÜÈ¢ëËÆ≤Ëß£</th><th align="center">ÈöæÂ∫¶</th></tr></thead><tbody><tr><td align="center">4797. ÁßªÂä®Ê£ãÂ≠ê</td><td align="center"><a href="https://www.acwing.com/problem/content/4800/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center"><a href="https://www.acwing.com/video/4610/">ËßÜÈ¢ëÈìæÊé•</a></td><td align="center">ÁÆÄÂçï üü¢</td></tr><tr><td align="center">4798. ÊâìÊÄ™ÂÖΩ</td><td align="center"><a href="https://www.acwing.com/problem/content/4801/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center"><a href="https://www.acwing.com/video/4612/">ËßÜÈ¢ëÈìæÊé•</a></td><td align="center">‰∏≠Á≠â üü°</td></tr><tr><td align="center">4799. ÊúÄËøúË∑ùÁ¶ª</td><td align="center"><a href="https://www.acwing.com/problem/content/4802/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center"><a href="https://www.acwing.com/video/4611/">ËßÜÈ¢ëÈìæÊé•</a></td><td align="center">Âõ∞Èöæ üî¥</td></tr></tbody></table><hr><h2 id="È¢òËß£-üöÄ"><a href="#È¢òËß£-üöÄ" class="headerlink" title="È¢òËß£ üöÄ"></a>È¢òËß£ üöÄ</h2><h3 id="„ÄêÈ¢òÁõÆA„ÄëÁßªÂä®Ê£ãÂ≠ê"><a href="#„ÄêÈ¢òÁõÆA„ÄëÁßªÂä®Ê£ãÂ≠ê" class="headerlink" title="„ÄêÈ¢òÁõÆA„ÄëÁßªÂä®Ê£ãÂ≠ê"></a>„ÄêÈ¢òÁõÆA„ÄëÁßªÂä®Ê£ãÂ≠ê</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÁªôÂÆö‰∏Ä‰∏™ $5$ Ë°å $5$ ÂàóÁöÑÊñπÊ†ºÁü©ÈòµÔºåÂÖ∂‰∏≠‰∏Ä‰∏™ÊñπÊ†º‰∏≠Êúâ‰∏Ä‰∏™Ê£ãÂ≠ê„ÄÇ</p><p>Áé∞Âú®ÔºåÊàë‰ª¨Â∏åÊúõÂ∞ÜÊ£ãÂ≠êÁßªÂä®Ëá≥Áü©ÈòµÁöÑÊúÄ‰∏≠ÂøÉÊñπÊ†º‰∏≠ÔºåÂç≥Â∞ÜÂÖ∂ÁßªÂä®Ëá≥Áü©ÈòµÁöÑÁ¨¨ $3$ Ë°åÁ¨¨ $3$ ÂàóÊñπÊ†º‰∏≠„ÄÇ</p><p>ÊØèÊ¨°ÁßªÂä®ÂèØ‰ª•Â∞ÜÊ£ãÂ≠êÊ≤ø‰∏ä„ÄÅ‰∏ã„ÄÅÂ∑¶„ÄÅÂè≥‰ªª‰∏ÄÊñπÂêëÁßªÂä®‰∏ÄÊ†ºË∑ùÁ¶ªÔºåÂâçÊèêÊòØ‰∏çËÉΩÁßªÂá∫Áü©Èòµ„ÄÇ</p><p>ËØ∑‰Ω†ËÆ°ÁÆóÔºå‰∏∫‰∫ÜÂ∞ÜÊ£ãÂ≠êÁßªÂä®Ëá≥Áü©ÈòµÁöÑÊúÄ‰∏≠ÂøÉÊñπÊ†º‰∏≠ÔºåÊâÄÈúÄË¶ÅÁöÑÊúÄÂ∞ëÁßªÂä®Ê¨°Êï∞„ÄÇ</p><p>Â¶ÇÊûúÊ£ãÂ≠ê‰∏ÄÂºÄÂßãÂ∞±Âú®ÊúÄ‰∏≠ÂøÉÊñπÊ†º‰∏≠ÔºåÂàôÊó†ÈúÄÁßªÂä®„ÄÇ¬∑</p><h4 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>ËæìÂÖ•ÂÖ± $5$ Ë°åÔºåÊØèË°åÂåÖÂê´ $5$ ‰∏™Êï¥Êï∞ÔºåÂÖ∂‰∏≠Á¨¨ $i$ Ë°åÁ¨¨ $j$ ÂàóÁöÑÊï¥Êï∞Ë°®Á§∫Á¨¨ $i$ Ë°åÁ¨¨ $j$ ÂàóÊñπÊ†ºÁöÑÁä∂ÊÄÅÔºåÂ¶ÇÊûú‰∏∫ $0$ÔºåÂàôË°®Á§∫ËØ•ÊñπÊ†º‰∏≠Ê≤°ÊúâÊ£ãÂ≠êÔºåÂ¶ÇÊûú‰∏∫ $1$ÔºåÂàôË°®Á§∫ËØ•ÊñπÊ†º‰∏≠ÊúâÊ£ãÂ≠ê„ÄÇ</p><p>‰øùËØÅÂè™Êúâ‰∏Ä‰∏™ÊñπÊ†º‰∏≠ÊúâÊ£ãÂ≠ê„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÊâÄÈúÄË¶ÅÁöÑÊúÄÂ∞ëÁßªÂä®Ê¨°Êï∞„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ÔºåËæìÂÖ•ÊÅ∞Â•ΩÂåÖÂê´ $24$ ‰∏™ $0$ Âíå $1$ ‰∏™ $1$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã3„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã3„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4800/">https://www.acwing.com/problem/content/4800/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Á≠æÂà∞È¢òÔºåÂΩíÁ∫≥Ëµ∑Êù•Â∞±ÊòØÊ±ÇËß£‰∏§‰∏™ÁÇπ $(x_a,y_a),(x_b,y_b)$ ‰πãÈó¥ÁöÑ„Äå<strong>ÊõºÂìàÈ°øË∑ùÁ¶ª</strong>„ÄçÔºåÂÖ¨ÂºèÔºö<br>$$<br>c = \lvert x_a - x_b\rvert + \lvert y_a - y_b \rvert<br>$$<br><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-170411.png" alt="ÊõºÂìàÈ°øË∑ùÁ¶ª"></p><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> x<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span>            <span class="token comment">// ÂΩìÂâçÂùêÊ†áÁÇπÂÄº‰∏∫1ÔºåËæìÂá∫ÂÖ∂Âíå‰∏≠ÂøÉÁÇπÁöÑË∑ùÁ¶ª</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token punctuation">{</span>                cout <span class="token operator">&lt;&lt;</span> <span class="token function">abs</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span>j <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë"><a href="#„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë"></a>„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                x <span class="token operator">=</span> i<span class="token punctuation">;</span>                y <span class="token operator">=</span> j<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token function">abs</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">abs</span><span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë"><a href="#„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë" class="headerlink" title="„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë"></a>„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë</h4><ul><li>ÂàöÂºÄÂßãÊÉ≥Â§çÊùÇ‰∫ÜÔºåÊääÊ≠§È¢òÂíå <strong>ÊúâÈöúÁ¢çÁöÑ BFS„ÄÅDFS Ëø∑ÂÆ´È¢ò</strong> Ê∑∑‰∏∫‰∏ÄË∞àÔºåÊÉ≥ÁùÄÁî®ÊêúÁ¥¢ÁöÑÊñπÂºèÂéªÊ±ÇËß£„ÄÇÂÜôÂà∞‰∏ÄÂçäÂèëÁé∞Ê≤°ÂøÖË¶ÅÔºåÁõ¥Êé•Áî®Êï∞Â≠¶ÊñπÊ≥ïÊ±ÇËß£Âç≥ÂèØ„ÄÇ</li><li>ÁªèËøáyÊÄªËÆ≤Ëß£ÔºåÊêúÁ¥¢‰∫Ü„Äå<strong>ÊõºÂìàÈ°øË∑ùÁ¶ª</strong>„ÄçÁöÑÁõ∏ÂÖ≥ÂÜÖÂÆπÔºåÂèëÁé∞Áõ¥Êé•‰ΩøÁî®ËØ•ÂÖ¨ÂºèÂç≥ÂèØÔºåËØ¥ÊòéÂπ≥Â∏∏ËøòÊòØÈúÄË¶ÅÂ§öÁßØÁ¥Ø„ÄÇ</li></ul><hr><h3 id="„ÄêÈ¢òÁõÆB„ÄëÊâìÊÄ™ÂÖΩ"><a href="#„ÄêÈ¢òÁõÆB„ÄëÊâìÊÄ™ÂÖΩ" class="headerlink" title="„ÄêÈ¢òÁõÆB„ÄëÊâìÊÄ™ÂÖΩ"></a>„ÄêÈ¢òÁõÆB„ÄëÊâìÊÄ™ÂÖΩ</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>Êúâ $n$ ‰∏™ÊÄ™ÂÖΩÔºàÁºñÂè∑ $1‚àºn$ÔºâÔºåÂÖ∂‰∏≠Á¨¨ $i$ ‰∏™ÊÄ™ÂÖΩÁöÑÈò≤Âæ°ÂÄº‰∏∫ $a_i$„ÄÇ</p><p>‰Ω†ÊòØ‰∏Ä‰∏™È≠îÊ≥ïÂ∏àÔºåÂàùÂßãÊó∂Êã•Êúâ $m$ ÁÇπÊ≥ïÂäõÂÄº„ÄÇ</p><p>ÂΩì‰Ω†ÁöÑÊ≥ïÂäõÂÄºÂ§ß‰∫é $0$ Êó∂Ôºå‰Ω†ÂèØ‰ª•ÂØπÊÄ™ÂÖΩÂèëÂä®ÊîªÂáªÔºåÊØè‰∏ÄÊ¨°ÊîªÂáªÂÖ∑‰Ωì‰∏∫Ôºö</p><ul><li>‰ªªÊÑèÈÄâÊã© $1‚àº2$ ‰∏™ÊÄ™ÂÖΩÔºåÂπ∂Ê∂àËÄó $x$ ÁÇπÊ≥ïÂäõÂÄºÔºà$x$ ÂèØ‰ª•ÊòØ‰∏Ä‰∏™‰∏çË∂ÖËøá‰Ω†ÂΩìÂâçÊ≥ïÂäõÂÄºÁöÑ‰ªªÊÑèÊ≠£Êï¥Êï∞ÔºâÔºåÂØπÊØè‰∏™ÊâÄÈÄâÊÄ™ÂÖΩÂèëÂä®‰∏ÄÊ¨°‰º§ÂÆ≥‰∏∫ $x$ ÁöÑÊîªÂáª„ÄÇ</li><li>ÂØπ‰∫éÂèóÂà∞ÊîªÂáªÁöÑÊÄ™ÂÖΩÔºåÂ¶ÇÊûúÂÖ∂Èò≤Âæ°ÂÄº <strong>Â∞è‰∫éÊàñÁ≠â‰∫é</strong> $x$ÔºåÂàô‰ºöË¢´‰Ω†Ê∂àÁÅ≠„ÄÇÂê¶ÂàôÔºåÂÆÉÂ∞ÜÂÖçÁñ´Ê≠§Ê¨°ÊîªÂáªÔºå‰∏çÂèó‰ªª‰ΩïÂΩ±Âìç„ÄÇ</li></ul><p>ËØ∑‰Ω†Á°ÆÂÆöÊúÄÂ§ßÁöÑÊï¥Êï∞ $k$ÔºåÊª°Ë∂≥ÔºöÈÄöËøáÂêàÁêÜÂÆâÊéíÊîªÂáªÔºåÂèØ‰ª•Â∞ÜÁ¨¨ $1‚àºk$ ‰∏™ÊÄ™ÂÖΩÂÖ®ÈÉ®Ê∂àÁÅ≠„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-1"><a href="#„ÄêËæìÂÖ•„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´Êï¥Êï∞ $n,m$„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´ $n$ ‰∏™Êï¥Êï∞ $a_1,a_2,\dots,a_n$„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-1"><a href="#„ÄêËæìÂá∫„Äë-1" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÊúÄÂ§ßÁöÑÊï¥Êï∞ $k$„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-1"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-1" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>Ââç $3$ ‰∏™ÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n,m \le 10$„ÄÇ</p><p>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 1000$Ôºå$1 \le m \le 10^9$Ôºå$1 \le ai \le m$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span> <span class="token number">7</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">4</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">10</span> <span class="token number">10</span><span class="token number">9</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã3„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span> <span class="token number">10</span><span class="token number">3</span> <span class="token number">1</span> <span class="token number">4</span> <span class="token number">2</span> <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã3„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã3„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë-1"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë-1" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4801/">https://www.acwing.com/problem/content/4801/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>‰∫åÂàÜ + ÊéíÂ∫è + Ë¥™ÂøÉ</p><ul><li>‰∫åÂàÜ Êª°Ë∂≥Êù°‰ª∂ÁöÑ k</li><li>‰∏¥Êó∂Êï∞ÁªÑÊã∑Ë¥ù <code>a[1]-a[k]</code> Ôºå‰ªéÂ§ßÂà∞Â∞èËøõË°åÊéíÂ∫è</li><li>Ë¥™ÂøÉÊ≥ïÂàÜÊûêÊ∂àÁÅ≠ÊÄ™ÂÖΩÁöÑÊúÄ‰ºòÊñπÂºèÔºöÊääÊéíÂ•ΩÂ∫èÁöÑÊÄ™ÂÖΩ 2‰∏™2‰∏™ ‰∏∫‰∏ÄÁªÑÔºåÊØèÊ¨°Ê∂àÁÅ≠‰∏ÄÁªÑÊÄ™ÂÖΩ</li></ul><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-1"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-1" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e3</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// Êã∑Ë¥ùÊï∞ÁªÑaÂà∞t</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> mid<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// tÊï∞ÁªÑ‰ªéÂ§ßÂà∞Â∞èÊéíÂ∫è</span>    <span class="token function">sort</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> t <span class="token operator">+</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token generic-function"><span class="token function">greater</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// ‰∏§‰∏™Êï∞‰∏ÄÁªÑÔºåÁ¥ØÂä†ÊØèÁªÑÁ¨¨‰∏Ä‰∏™Êï∞</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> mid<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sum <span class="token operator">+=</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// Âà§Êñ≠ÂΩìÂâçsumÊòØÂê¶Â∑≤Ë∂ÖÂá∫Ê≥ïÂäõÂÄºm</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// ‰∫åÂàÜÂØªÊâæk</span>    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> r <span class="token operator">=</span> n<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> mid <span class="token operator">=</span> l <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span> l <span class="token operator">=</span> mid<span class="token punctuation">;</span>        <span class="token keyword">else</span> r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> l <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-1"><a href="#„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-1" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë"></a>„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1005</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> <span class="token function">cmp</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a <span class="token operator">&gt;</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> km <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// Êã∑Ë¥ùaÊï∞ÁªÑÂâçk‰∏™ÂÖÉÁ¥†Ëá≥b‰∏≠</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> k<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">// ÂØπbÊï∞ÁªÑÊéíÂ∫è</span>        <span class="token function">sort</span><span class="token punctuation">(</span>b <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2‰∏™2‰∏™Á¥ØÂä†ÔºåÂà§Êñ≠ÂΩìÂâç1ÔΩûk‰∏™ÂÖÉÁ¥†ÈúÄË¶ÅÁöÑÊ≥ïÂäõÂÄºÊòØÂê¶ &lt; Êã•ÊúâÊ≥ïÂäõÂÄº</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        ll sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sum <span class="token operator">+=</span> b<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            j <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&lt;=</span> m<span class="token punctuation">)</span> km <span class="token operator">=</span> k<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> km <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"><a href="#„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë" class="headerlink" title="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"></a>„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë</h4><ul><li>Âë®ËµõÁé∞Âú∫Ê±ÇËß£ <code>k</code> Êó∂ÔºåÊëä‰∏ªÊòØ‰ªé $1$ ÂºÄÂßãÊûö‰∏æÔºåÂà§Êñ≠ÂΩìÂâç <code>k</code> ‰∏™Êï∞ËÉΩÂê¶Êª°Ë∂≥Êù°‰ª∂„ÄÇËôΩÁÑ∂Êú¨È¢ò‰πüËÉΩÈÄöËøáÔºå‰ΩÜÊòØÂ¶ÇÊûú $n$ ÁöÑÊï∞ÊçÆËåÉÂõ¥ÂæàÂ§ßÔºåËØ•ÊñπÊ≥ïÂ∞±‰∏çË°å‰∫Ü„ÄÇ</li><li>ÁªèËøá yÊÄªËÆ≤Ëß£Êó∂ÔºåÂèëÁé∞ <code>k</code> ÂÖ∑Êúâ‰∫åÊÆµÊÄßÔºåÂèØ‰ª•ÈÄöËøá <strong>‰∫åÂàÜ</strong> ÁöÑÊñπÊ≥ïÂø´ÈÄüÊ±ÇËß£ÔºåÂ§ßÂ§ßÈôç‰ΩéÊó∂Èó¥Â§çÊùÇÂ∫¶ÔºåÂÄºÂæóÂÄüÈâ¥„ÄÇ</li><li><code>sort()</code> ÂáΩÊï∞‰ªéÂ§ßÂà∞Â∞èÊéíÂ∫èÔºåÈô§‰∫ÜËá™ÂÆö‰πâ <code>cmp</code> ÂáΩÊï∞Ôºå‰πüÂèØ‰ª•ÈÄâÊã©Ê∑ªÂä† <code>greater&lt;int&gt;()</code> ÂèÇÊï∞Ôºö<code>sort(t,t+n,greater&lt;int&gt;())</code> ÁöÑÊñπÂºè‰ºöÊõ¥Âä†Êñπ‰æø„ÄÇ</li></ul><hr><h3 id="„ÄêÈ¢òÁõÆC„ÄëÊúÄËøúË∑ùÁ¶ª"><a href="#„ÄêÈ¢òÁõÆC„ÄëÊúÄËøúË∑ùÁ¶ª" class="headerlink" title="„ÄêÈ¢òÁõÆC„ÄëÊúÄËøúË∑ùÁ¶ª"></a>„ÄêÈ¢òÁõÆC„ÄëÊúÄËøúË∑ùÁ¶ª</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>Êàë‰ª¨ËßÑÂÆöÔºåÂ¶ÇÊûú‰∏Ä‰∏™Êó†ÂêëËøûÈÄöÂõæÊª°Ë∂≥ÂéªÊéâÂÖ∂‰∏≠ÁöÑ‰ªªÊÑè‰∏ÄÊù°ËæπÈÉΩ‰ºö‰ΩøÂæóËØ•ÂõæÂèòÂæó‰∏çËøûÈÄöÔºåÂàôÁß∞ËØ•Âõæ‰∏∫ <strong>ÊúâÊïàÊó†ÂêëËøûÈÄöÂõæ</strong>„ÄÇ</p><p>ÁªôÂÆö‰∏Ä‰∏™ $n$ ‰∏™ÁÇπ $m$ Êù°ËæπÁöÑ <strong>ÊúâÊïàÊó†ÂêëËøûÈÄöÂõæ</strong>ÔºåÁÇπÁöÑÁºñÂè∑‰∏∫ $1‚àºn$ÔºåÊâÄÊúâËæπÁöÑÈïøÂ∫¶Âùá‰∏∫ $1$„ÄÇ</p><p>‰∏§ÁÇπ‰πãÈó¥ÁöÑË∑ùÁ¶ªÂÆö‰πâ‰∏∫‰∏§ÁÇπ‰πãÈó¥ÁöÑ <strong>ÊúÄÁü≠Ë∑ùÁ¶ª</strong>„ÄÇ</p><p>ËØ∑‰Ω†ËÆ°ÁÆóÔºåÁªôÂÆöÂõæ‰∏≠Ë∑ùÁ¶ªÊúÄËøúÁöÑ‰∏§‰∏™ÁÇπ‰πãÈó¥ÁöÑË∑ùÁ¶ª„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-2"><a href="#„ÄêËæìÂÖ•„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏§‰∏™Êï¥Êï∞ $n,m$„ÄÇ</p><p>Êé•‰∏ãÊù• $m$ Ë°åÔºåÊØèË°åÂåÖÂê´‰∏§‰∏™Êï¥Êï∞ $a,b$ÔºåË°®Á§∫ÁÇπ $a$ ÂíåÁÇπ $b$ ‰πãÈó¥Â≠òÂú®‰∏ÄÊù°Êó†ÂêëËæπ„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-2"><a href="#„ÄêËæìÂá∫„Äë-2" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÁªôÂÆöÂõæ‰∏≠Ë∑ùÁ¶ªÊúÄËøúÁöÑ‰∏§‰∏™ÁÇπ‰πãÈó¥ÁöÑË∑ùÁ¶ª„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-2"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-2" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>Ââç‰∏â‰∏™ÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n,m \le 10$„ÄÇ</p><p>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n,m \le 10^5$Ôºå$1 \le a,b \le n$Ôºå$a \ne b$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span> <span class="token number">3</span><span class="token number">1</span> <span class="token number">2</span><span class="token number">1</span> <span class="token number">3</span><span class="token number">1</span> <span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span> <span class="token number">4</span><span class="token number">1</span> <span class="token number">2</span><span class="token number">2</span> <span class="token number">3</span><span class="token number">3</span> <span class="token number">4</span><span class="token number">3</span> <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë-2"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë-2" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4802/">https://www.acwing.com/problem/content/4802/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òÈúÄË¶ÅÊúâ‰∏ÄÂÆöÁöÑÁêÜËÆ∫Âü∫Á°ÄÔºàÁêÜËÆ∫ÂÜÖÂÆπËßÅ „Äå<strong>ÁÆóÊ≥ïÂü∫Á°ÄËØæ‚Äî‚ÄîÊêúÁ¥¢‰∏éÂõæËÆ∫Ôºà‰∏ÄÔºâ</strong>„ÄçÔºâ</p><ul><li>Âõæ/Ê†ëÁöÑÂ≠òÂÇ®ÔºàÈÇªÊé•Ë°®Ôºâ</li><li><code>dfs</code> Ê±ÇËß£Ê†ëÁöÑÈ´òÂ∫¶/Áõ¥ÂæÑ</li><li>ÊúÄÂ§ßÂÄº„ÄÅÊ¨°ÊúÄÂ§ßÂÄºÁöÑËø≠‰ª£</li></ul><p>Êúâ‰∫ÜËøô‰∫õÂü∫Á°ÄÂêéÔºå‰ºöÂèëÁé∞ËØ•È¢òÊèèËø∞ÁöÑ„Äå<strong>ÊúâÊïàÊó†ÂêëËøûÈÄöÂõæ</strong>„ÄçÔºåÂÖ∂ÂÆûÂ∞±ÊòØ <strong>„ÄåÊ†ë„Äç</strong> ÁöÑÂÆö‰πâÔºõËØ•ÈóÆÈ¢òÂ∞±ÊòØÊ±ÇËß£Ê†ëÁöÑÊúÄÈïøÁõ¥ÂæÑ„ÄÇ‚òòÔ∏è</p><p>Â∏∏Áî® <strong>Ëß£È¢òÊÄùË∑Ø</strong> ÊòØÔºö</p><p>Step1Ôºö<strong>ÈÅçÂéÜ</strong> Ê†ëÁöÑ n ‰∏™ÁªìÁÇπ</p><p>Step2ÔºöÊ±ÇÂá∫‰ª• <strong>ÁªìÁÇπ i ‰∏∫Ê†π</strong> ÁöÑ <strong>Â≠êÊ†ëÈ´òÂ∫¶ÊúÄÂ§ßÂÄº</strong> Âíå <strong>Ê¨°Â§ßÂÄº</strong>Ôºå‰∏§ËÄÖ‰πãÂíåÂ∞±ÊòØ‰ª•ÂΩìÂâçÁªìÁÇπ i ‰∏∫Ê†πÁöÑÁõ¥ÂæÑ</p><p>Step3ÔºöËæìÂá∫ n ‰∏™ÁªìÁÇπÁöÑÁõ¥ÂæÑÊúÄÂ§ßÂÄº</p><p>Ê†πÊçÆËØ•Ëß£È¢òÊÄùË∑ØÔºåÁºñÂÜôÁõ∏Â∫î‰ª£Á†ÅÔºåÂÖ∑‰ΩìËßÅ yÊÄªËÆ≤Ëß£ËßÜÈ¢ëÔºö<a href="https://www.acwing.com/video/4611/">ËßÜÈ¢ëÈìæÊé•</a></p><p><strong>„Äê‰∫åÂà∑ÁªèÂéÜ„Äë</strong></p><p>2023 Âπ¥ 4 Êúà 11 Êó•ÔºåÊëä‰∏ªÊÉ≥Ë¶ÅÊääËøôÁØáÊñáÁ´†‰∏ä‰º†Ëá≥Ëá™Â∑±ÁöÑÂçöÂÆ¢ÁΩëÁ´ôÔºå‰∫éÊòØÂÜçÊ¨°ÈòÖËØª‰∫ÜËøôÁØáÂ§çÁõòÔºåÊâìÁÆóÊ£ÄÊü•ÊñáÁ´†ÂèØËÉΩÂ≠òÂú®ÁöÑÈîôËØØ„ÄÇ</p><p>Âú®Ê£ÄÊü•ÁöÑËøáÁ®ã‰∏≠ÔºåÊëä‰∏ªÁ™ÅÁÑ∂ÂèëÁé∞ C È¢òÂèà‰∏ç‰ºöÂÅö‰∫ÜÔºåËØ¥ÊòéÂΩìÊó∂ËøòÊòØÊ≤°ÊúâÁêÜËß£ÈÄèÂΩªÔºåÈúÄË¶ÅÂõûÁÇâÈáçÈÄ†„ÄÇüòÇ</p><p>ÂõûÈ°æ‰∏Ä‰∏ãËá™Â∑±Êôö‰∏äÁöÑÂÅöÈ¢òÊµÅÁ®ãÔºö</p><ul><li><p>ÂèëÁé∞ËØ•È¢òÊèèËø∞ÁöÑÊï∞ÊçÆÁªìÊûÑ‰∏∫„ÄåÊ†ë„Äç</p></li><li><p>‰π¶ÂÜô„ÄåÈÇªÊé•Ë°®„Äç‰ª£Á†ÅÔºåÂ≠òÂÇ®Ê†ëÁöÑÁªìÁÇπÂíåËæπ</p></li><li><p>ÂèëÁé∞Ëß£È¢òÁ≠ñÁï•</p><ul><li>ÈÄâÊã©‰∏Ä‰∏™ÁªìÁÇπ <code>u</code> ‰Ωú‰∏∫Ê†πÁªìÁÇπ</li><li>ËÆ°ÁÆó <code>u</code> ÁöÑÊâÄÊúâÂ≠êÊ†ëÊ∑±Â∫¶</li><li>ÂèñÊúÄÂ§ßÊ∑±Â∫¶ÂíåÊ¨°Â§ßÊ∑±Â∫¶‰∏∫ÊúÄÁªàÁ≠îÊ°à</li></ul></li><li><p>Ê†πÊçÆÊÄùË∑Ø‰π¶ÂÜô‰ª£Á†ÅÊ°ÜÊû∂</p></li><li><p>‰ΩÜÊòØÂú®ÂÜô <code>dfs</code> Êó∂ÔºåÂèëÁé∞ÁêÜ‰∏çÊ∏ÖËæìÂÖ•ÂÄº„ÄÅËøîÂõûÂÄº„ÄÅÁªàÊ≠¢Êù°‰ª∂‰ª•ÂèäÊòØÂê¶ÂæÄÂõûÊêúÁöÑÂà§Êñ≠Êù°‰ª∂</p></li></ul><p>‰∫éÊòØÂèàÂéªÂõûÈ°æ‰∫ÜyÊÄªÁöÑËÆ≤Ëß£ËßÜÈ¢ëÔºå‰ª•ÂèäËá™Â∑±ÂÜôÁöÑ‰ª£Á†ÅÊ≥®ÈáäÔºåÂèëÁé∞‰∏äÈù¢ÁöÑÊÄùË∑ØÂÖ∂ÂÆûÂ≠òÂú®‰∏ÄÂÆöÈóÆÈ¢ò„ÄÇ</p><p>‰∏äÈù¢ÁöÑÊÄùË∑ØÂÖ∂ÂÆûÈªòËÆ§‰∫Ü„Äå‰∏ÄÂºÄÂßãÈÄâÊã©Âì™‰∏™ÁÇπ‰Ωú‰∏∫Ê†πÁªìÁÇπÔºåÂæóÂà∞ÁöÑÂ≠êÊ†ëÊúÄÂ§ßÊ∑±Â∫¶ÂíåÊ¨°Â§ßÊ∑±Â∫¶‰πãÂíåÈÉΩÊòØ‰∏ÄÊ†∑ÁöÑ„ÄçÔºåËøôÊòØ‰∏çÂØπÁöÑ ‚ùå </p><p>ÊØîÂ¶ÇÊ†πÁªìÁÇπ <code>u</code> Êúâ 3 Ê£µÂ≠êÊ†ë <code>ch1</code>Ôºå<code>ch2</code>Ôºå<code>ch3</code></p><ul><li>Â≠êÊ†ë <code>ch1</code> ÁöÑÊ∑±Â∫¶‰∏∫ 2</li><li>Â≠êÊ†ë <code>ch3</code> ÁöÑÊ∑±Â∫¶‰∏∫ 1</li><li>Â≠êÊ†ë <code>ch2</code> ÁöÑÊ†πÁªìÁÇπ‰∏∫ <code>v</code>Ôºå<code>v</code> ‰∏äÂèàÊúâ‰∏§Ê£µÂ≠êÊ†ë<ul><li>‰∏ÄÊ£µÊ∑±Â∫¶‰∏∫ 7 </li><li>Âè¶‰∏ÄÊ£µÊ∑±Â∫¶‰∏∫ 8</li></ul></li></ul><p>ÊåâÁÖß‰∏äÈù¢ÁöÑÊÄùË∑ØÔºåÊúÄÂêéÁ≠îÊ°àÊòØ Â≠êÊ†ë <code>ch2</code> ÁöÑÊúÄÂ§ßÊ∑±Â∫¶ 8 + <code>ch1</code> ÁöÑÊ∑±Â∫¶ 2 Á≠â‰∫é 10„ÄÇ</p><p>‰ΩÜÊòØÊòæÁÑ∂ÔºåÊ≠£Á°ÆÁ≠îÊ°àÂ∫îËØ•ÊòØ <code>v</code> ÁöÑ‰∏§Ê£µÂ≠êÊ†ëÁöÑÊ∑±Â∫¶‰πãÂíåÔºåÂ∫îËØ•‰∏∫ 15 ÊâçÂØπ„ÄÇ</p><p>Áî±Ê≠§ÂèØËßÅÔºå‰ªé <code>u</code> ÂæÄ‰∏ãÈÅçÂéÜÁöÑËøáÁ®ã‰∏≠Ôºå<code>ans</code> Â∫îËØ•‰∏çÊñ≠ËøõË°åÊØîËæÉÔºåÂç≥ <code>ans = max(d1+d2,ans)</code>ÔºåÊâçËÉΩ‰øùËØÅÊúÄÂêéÁöÑÁ≠îÊ°àÊòØÊ≠£Á°ÆÁöÑ„ÄÇ‚úÖ</p><p>ÂêåÊó∂ËøòÈúÄÊÄùËÄÉÔºåÂ¶Ç‰Ωï‰π¶ÂÜô‰ª£Á†ÅÔºåÊâçËÉΩ‰ΩøÊêúÁ¥¢‰ªé <code>u</code> ‰∏ÄÁõ¥ÂæÄ‰∏ãÔºåËÄå <strong>‰∏ç‰ºöÂá∫Áé∞ÂæÄÂõûÊêú</strong> ÁöÑÊÉÖÂÜµ„ÄÇ</p><p>Êú¨È¢ò <strong>ÂÄºÂæóÂèçÂ§çÂíÄÂöº</strong> ÁöÑ‰∏Ä‰∫õÁÇπÔºö</p><ul><li>dfs ÁöÑÂê´‰πâÁ©∂Á´üÊòØ‰ªÄ‰πàÔºü</li><li>dfs ÁöÑËæìÂÖ•ÂÄº‰∏∫‰ªÄ‰πàÊòØ <code>int dfs(int u, int fa)</code>Ôºå<code>fa</code> Êúâ‰ªÄ‰πà‰ΩúÁî®Ôºü</li><li>Ê∑ªÂä† <code>st[]</code> Êï∞ÁªÑÂèØ‰ª•ËææÂà∞ <code>fa</code> ÁöÑ‰ΩúÁî®ÂêóÔºü</li><li>dfs ÁöÑËøîÂõûÂÄºÊòØ‰ªÄ‰πà?</li><li>dfs ÊòØÂ¶Ç‰ΩïÂÆûÁé∞Ê∑±Â∫¶Á¥ØÂä†ÁöÑÔºü</li><li>‰∏∫‰ªÄ‰πàÊòØ <code>ans = max(ans,d1 + d2)</code> ËÄå‰∏çÊòØÁõ¥Êé• <code>ans = d1 + d2</code> Ôºü</li></ul><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-2"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-2" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">100010</span><span class="token punctuation">,</span> M <span class="token operator">=</span> N <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">int</span> h<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">,</span> ne<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">,</span> idx<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token punctuation">;</span> <span class="token comment">// ÂÆö‰πâÂÖ®Â±ÄÁ≠îÊ°à</span><span class="token comment">// ÈÇªÊé•Ë°®Âä†Ëæπ</span><span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    e<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> b<span class="token punctuation">,</span> ne<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">,</span> h<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> idx<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">// ËøîÂõûÁªìÁÇπfa‰ª•u‰∏∫Ê†πÁªìÁÇπÁöÑÂ≠êÊ†ëÁöÑÊúÄÂ§ßÊ∑±Â∫¶</span><span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> fa<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> d1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> d2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// d1 Ë°®Á§∫ÂΩìÂâçÁªìÁÇπÂ≠êÊ†ëÈ´òÂ∫¶ÊúÄÂ§ßÂÄºÔºåd2Ë°®Á§∫ÂΩìÂâçÁªìÁÇπÂ≠êÊ†ëÈ´òÂ∫¶Ê¨°Â§ßÂÄº</span>    <span class="token comment">// ÈÅçÂéÜÂΩìÂâçÁªìÁÇπuÁöÑÊâÄÊúâÂ≠êÊ†ë</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> h<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">~</span>i<span class="token punctuation">;</span> i <span class="token operator">=</span> ne<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Ê≥®ÊÑèÊ≠§Êó∂ÁöÑi‰∏∫idxÁöÑÂÄºÔºåËÄåÈùûÁªìÁÇπÁöÑÂÄºÔºåÂÆπÊòìÂíådfsÁöÑÂèÇÊï∞ÊêûÊ∑∑</span>        <span class="token comment">// Áî±‰∫éÊòØÊó†ÂêëËæπÔºåÈúÄË¶Å‰∏çËµ∞ÂõûË∑Ø</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> fa<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token comment">// ËÆ°ÁÆóÂΩìÂâçÂ≠êÊ†ëÈ´òÂ∫¶</span>        <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> u<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// ‰∏çËÉΩÂÜôÊàêdfs(i,u) + 1 ÊàñËÄÖ dfs(h[i],u) + 1ÔºåÂæàÂÆπÊòìÂá∫Èîô</span>        <span class="token comment">// Êõ¥Êñ∞Â≠êÊ†ëÁöÑÊúÄÂ§ßÈ´òÂ∫¶ÂíåÊ¨°Â§ßÈ´òÂ∫¶</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">&gt;=</span> d1<span class="token punctuation">)</span> d2 <span class="token operator">=</span> d1<span class="token punctuation">,</span> d1 <span class="token operator">=</span> d<span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>d <span class="token operator">&gt;</span> d2<span class="token punctuation">)</span> d2 <span class="token operator">=</span> d<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    ans <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> d1 <span class="token operator">+</span> d2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> d1<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ÈÇªÊé•Ë°®ÁöÑË°®Â§¥ÂÖ®ÈÉ®ÁΩÆ‰∏∫-1</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">;</span>        cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b<span class="token punctuation">;</span>        <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ÈÇªÊé•Ë°®Âä†Ëæπ</span>    <span class="token punctuation">}</span>    <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ‰ªéÁªìÁÇπÂÄº‰∏∫1ÁöÑÁªìÁÇπÂºÄÂßãÊêúÁ¥¢ÔºàËøôÈáåÁöÑ1Âπ∂‰∏çÊòØidx=1ÁöÑÊÑèÊÄùÔºâ</span>    cout <span class="token operator">&lt;&lt;</span> ans <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-2"><a href="#„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-2" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë"></a>„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë</h4><p>ËØ•È¢òÁé∞Âú∫Êú™AC üòÇ</p><h4 id="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë-1"><a href="#„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë-1" class="headerlink" title="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"></a>„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë</h4><ul><li>Âë®ËµõÁé∞Âú∫ËôΩÁÑ∂ÊÉ≥Âá∫‰∫ÜÊ±ÇËß£ÊúÄÈïøÁõ¥ÂæÑÁöÑÊÄùË∑ØÔºå‰ΩÜÊòØÁî±‰∫é ÂõæËÆ∫/ÊêúÁ¥¢ ÈÉ®ÂàÜÁöÑÁêÜËÆ∫ÂÜÖÂÆπÂ≠¶‰π†‰∏çÂ§üÊâéÂÆûÂÖÖÂàÜÔºåÂØºËá¥Ê≤°ËÉΩÂ§üÈ°∫Âà©ÂÜôÂá∫ <code>dfs</code> ÁöÑ‰ª£Á†ÅÔºåÈúÄË¶ÅÂú®Â§çÁõòÂêéÔºåËÆ§ÁúüÂ≠¶‰π†ÊÄªÁªì„ÄÇ</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> AcwingÂë®ËµõÂ§çÁõò </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> Acwing </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúË∏©ÊñπÊ†º</title>
      <link href="/2023/04/10/xin-xi-ao-sai-ti-jie-cai-fang-ge/"/>
      <url>/2023/04/10/xin-xi-ao-sai-ti-jie-cai-fang-ge/</url>
      
        <content type="html"><![CDATA[<h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúË∏©ÊñπÊ†º"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúË∏©ÊñπÊ†º" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúË∏©ÊñπÊ†º"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúË∏©ÊñπÊ†º</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>Êúâ‰∏Ä‰∏™ÊñπÊ†ºÁü©ÈòµÔºåÁü©ÈòµËæπÁïåÂú®Êó†Á©∑ËøúÂ§Ñ„ÄÇÊàë‰ª¨ÂÅöÂ¶Ç‰∏ãÂÅáËÆæÔºö</p><p>a„ÄÅÊØèËµ∞‰∏ÄÊ≠•Êó∂ÔºåÂè™ËÉΩ‰ªéÂΩìÂâçÊñπÊ†ºÁßªÂä®‰∏ÄÊ†ºÔºåËµ∞Âà∞Êüê‰∏™Áõ∏ÈÇªÁöÑÊñπÊ†º‰∏äÔºõ</p><p>b„ÄÅËµ∞ËøáÁöÑÊ†ºÂ≠êÁ´ãÂç≥Â°åÈô∑Êó†Ê≥ïÂÜçËµ∞Á¨¨‰∫åÊ¨°Ôºõ</p><p>c„ÄÅÂè™ËÉΩÂêëÂåó„ÄÅ‰∏ú„ÄÅË•ø‰∏â‰∏™ÊñπÂêëËµ∞Ôºõ</p><p>ËØ∑ÈóÆÔºöÂ¶ÇÊûúÂÖÅËÆ∏Âú®ÊñπÊ†ºÁü©Èòµ‰∏äËµ∞ $n$ Ê≠•ÔºåÂÖ±ÊúâÂ§öÂ∞ëÁßç‰∏çÂêåÁöÑÊñπÊ°à„ÄÇÔºà$2$ ÁßçËµ∞Ê≥ïÂè™Ë¶ÅÊúâ‰∏ÄÊ≠•‰∏ç‰∏ÄÊ†∑ÔºåÂç≥Ë¢´ËÆ§‰∏∫ÊòØ‰∏çÂêåÁöÑÊñπÊ°àÔºâ</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>ÂÖÅËÆ∏Âú®ÊñπÊ†º‰∏äË°åËµ∞ÁöÑÊ≠•Êï∞ $n(n \le 20)$„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>ËÆ°ÁÆóÂá∫ÁöÑÊñπÊ°àÊï∞Èáè„ÄÇ</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1196">http://ybt.ssoier.cn:8088/problem_show.php?pid=1196</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p>Êú¨È¢òÊòØÈÄíÊé®ÈóÆÈ¢òÁöÑÁªèÂÖ∏ÈóÆÈ¢ò‰πã‰∏ÄÔºåÂ±û‰∫é „Äå<strong>ÂÖ®Â±ÄÁßªÂä®Ë∑ØÁ∫øÊñπÊ°àÊï∞</strong>„ÄçÈóÆÈ¢ò„ÄÇ</p><p>Âú®‰πãÂâçÁöÑÈ¢òËß£‰∏≠ÔºåÊàë‰ª¨Â∑≤ÁªèËÆ≤Ëß£‰∫Ü„Äå<strong>ÂçïÁÇπÁßªÂä®Ë∑ØÁ∫ø</strong>„ÄçÈóÆÈ¢òÔºåÂÖ∂ÁõÆÊ†áÊòØÊ±ÇÂà∞Ëææ <strong>Êüê‰∏Ä‰∏™ÁÇπ</strong> ÁöÑÊñπÊ°àÊï∞Ôºå‰ΩÜÂπ∂Ê≤°ÊúâÊ∂âÂèäËµ∞Âà∞ËØ•ÁÇπÁöÑÊ≠•Êï∞ÔºõËÄåÊú¨È¢òÁöÑ„Äå<strong>ÂÖ®Â±ÄÁßªÂä®Ë∑ØÁ∫ø</strong>„ÄçÂàôÊòØÁªôÂÆöÊ≠•Êï∞ÔºåÊ±ÇËß£ÊâÄÊúâËØ•Ê≠•Êï∞ÂÜÖËÉΩÂ§üËµ∞ÁöÑ‰∏çÂêåË∑ØÁ∫øÊï∞Èáè„ÄÇ</p><blockquote><p>ÈôÑÔºöÂçïÁÇπÁßªÂä®Ë∑ØÁ∫øÈóÆÈ¢òÁõ∏ÂÖ≥È¢òËß£</p><p>‰∏ªÁ´ôÁÇπÔºö</p><p><a href="https://rickyxcoder.top/2023/04/09/xin-xi-ao-sai-ti-jie-yi-dong-lu-xian/">„Äê‰ø°ÊÅØÂ••ËµõÈ¢òËß£„ÄëÁßªÂä®Ë∑ØÁ∫øÔºàËØ¶ÁªÜÂàÜÊûêÈ¢òËß£ &amp; C++ ‰ª£Á†ÅÔºâ</a><br><a href="https://rickyxcoder.top/2023/04/10/xin-xi-ao-sai-ti-jie-guo-he-zu/">„Äê‰ø°ÊÅØÂ••ËµõÈ¢òËß£„ÄëËøáÊ≤≥ÂçíÔºàËØ¶ÁªÜÂàÜÊûêÈ¢òËß£ &amp; C++ ‰ª£Á†ÅÔºâ</a></p><p>Â§áÁî®Á´ôÁÇπÔºö</p><p><a href="https://rickyxcoder.gitee.io/2023/04/09/xin-xi-ao-sai-ti-jie-yi-dong-lu-xian/">„Äê‰ø°ÊÅØÂ••ËµõÈ¢òËß£„ÄëÁßªÂä®Ë∑ØÁ∫øÔºàËØ¶ÁªÜÂàÜÊûêÈ¢òËß£ &amp; C++ ‰ª£Á†ÅÔºâ</a><br><a href="https://rickyxcoder.gitee.io/2023/04/10/xin-xi-ao-sai-ti-jie-guo-he-zu/">„Äê‰ø°ÊÅØÂ••ËµõÈ¢òËß£„ÄëËøáÊ≤≥ÂçíÔºàËØ¶ÁªÜÂàÜÊûêÈ¢òËß£ &amp; C++ ‰ª£Á†ÅÔºâ</a></p></blockquote><p>Âú®Êú¨È¢ò‰∏≠ÔºåÊàë‰ª¨ÂÅáËÆæ <code>f[n]</code> ‰∏∫ <strong>Ëµ∞ n Ê≠•ÁöÑ‰∏çÂêåË∑ØÁ∫øÊÄªÊï∞</strong>ÔºåÈÇ£‰πàËøô‰∏™ <code>f[n]</code> ÂèØ‰ª•ÊãÜÂàÜÊàê 3 ‰∏™Áã¨Á´ãÁöÑÈÉ®ÂàÜÔºö</p><ul><li><strong>ÊúÄÂêé‰∏ÄÊ≠•</strong> Âêë <strong>Â∑¶</strong> Ëµ∞ÁöÑË∑ØÁ∫øÊï∞ <code>l[n]</code></li><li><strong>ÊúÄÂêé‰∏ÄÊ≠•</strong> Âêë <strong>Âè≥</strong> Ëµ∞ÁöÑË∑ØÁ∫øÊï∞ <code>r[n]</code></li><li><strong>ÊúÄÂêé‰∏ÄÊ≠•</strong> Âêë <strong>‰∏ä</strong> Ëµ∞ÁöÑË∑ØÁ∫øÊï∞ <code>u[n]</code></li></ul><p>Âç≥ <code>f[n] = l[n] + r[n] + u[n]</code> ÔºåÊâÄ‰ª•Êàë‰ª¨ÂèØ‰ª•ÈÄöËøáËÆ°ÁÆó <code>l[n], r[n], u[n]</code> Êù•ÂæóÂà∞ <code>f[n]</code></p><p>ËÄåÂØπ‰∫é <code>l[n]Ôºår[n], u[n]</code> ÔºåÊàë‰ª¨ÂèØ‰ª•Áî± <code>f[n - 1]</code> Êù•Êé®Êñ≠„ÄÇ</p><br><p>ÊåâÁÖßÊàë‰ª¨ÁöÑÂÅáËÆæÔºå <code>f[n-1]</code> Ë°®Á§∫ Ëµ∞ n-1 Ê≠•ÁöÑ‰∏çÂêåË∑ØÁ∫øÊÄªÊï∞ÔºåÁî±‰∫éËøôÈáåÈù¢ÁöÑÊØèÊù°Ë∑ØÁ∫øÈÉΩÊòØ‰∏çÂêåÁöÑÔºåÊâÄ‰ª•Âú®Ëøô‰∫õË∑ØÁ∫øÁöÑÂü∫Á°Ä‰∏äÔºåÂÜçÂæÄÂ∑¶Ëµ∞ 1 Ê≠•ÔºåÂæóÂà∞ÁöÑË∑ØÁ∫ø‰πüÈÉΩÊòØ‰∏çÂêåÁöÑÔºåÂ∞±Êúâ <code>l[n] = f[n-1]</code> ‚ùå </p><p>‰ΩÜÊòØÊàë‰ª¨Áü•ÈÅì <strong>Âπ∂‰∏çÊòØÊâÄÊúâË∑ØÁ∫øÔºåÈÉΩËÉΩÂÜçÂæÄÂ∑¶Ëµ∞ÁöÑ</strong>„ÄÇÂú®ÊâÄÊúâËµ∞ n -1 Ê≠•ÁöÑË∑ØÁ∫ø‰∏≠ÔºåÂ¶ÇÊûúÁ¨¨ <strong>n - 1Ê≠•ÊòØÂæÄÂè≥Ëµ∞ÁöÑ</strong>ÔºåÂ∞± <strong>Ê≤°ÊúâÂäûÊ≥ïÂú®Á¨¨ n Ê≠•ÁöÑÊó∂ÂÄôÂæÄÂ∑¶Ëµ∞ÁöÑ</strong>ÔºåÂõ†‰∏∫Â∑¶ËæπÁöÑÊñπÊ†ºÂ°åÈô∑‰∫Ü„ÄÇ</p><p>ÊâÄ‰ª• <strong>Âè™ÊúâÁ¨¨ n - 1Ê≠•ÂæÄÂ∑¶Ëµ∞ÔºåÊàñËÄÖÂæÄ‰∏äËµ∞ÁöÑË∑ØÁ∫ø</strong>ÔºåÊâçËÉΩÂú®Á¨¨ n Ê≠•Êó∂ÔºåÂæÄÂ∑¶Ëµ∞„ÄÇ</p><p>ËÄå ÊâÄÊúâ <strong>n -1Ê≠• ÂæÄÂ∑¶Ëµ∞</strong>ÁöÑË∑ØÁ∫øÊï∞ÈáèÔºåÊåâÁÖßÊàë‰ª¨ÁöÑÂÅáËÆæÔºåÂ∞±Á≠â‰∫é <code>l[n-1]</code>ÔºõÊâÄÊúâ n -1Ê≠• <strong>ÂæÄ‰∏äËµ∞</strong>ÁöÑË∑ØÁ∫øÊï∞ÈáèÔºåÊåâÁÖßÊàë‰ª¨ÁöÑÂÅáËÆæÔºåÂ∞±Á≠â‰∫é <code>u[n-1]</code> „ÄÇÊâÄ‰ª• <code>l[n] = l[n - 1] + u[n-1]</code> ‚úÖ</p><p>ÂêåÁêÜÔºå<code>r[n] = r[n-1] + u[n-1]</code> ‚úÖ </p><p><code>u[n]</code> ÊØîËæÉÁâπÊÆäÔºåÂõ†‰∏∫ n-1 Ê≠•ÂæÄÂ∑¶„ÄÅÂæÄÂè≥ÁöÑË∑ØÁ∫øÂú®Ëµ∞Á¨¨ n Ê≠•Êó∂ÔºåÂùáÂèØ‰ª•Âêë‰∏äËµ∞ÔºåÊâÄ‰ª• <code>u[n] = l[n-1] + r[n-1] + u[n-1]=f[n-1]</code> ‚úÖ </p><p>ËæπÁïåÊù°‰ª∂ÂæàÂ•ΩÁ°ÆÂÆöÔºå<code>l[1] = r[1] = u[1] = 1</code>ÔºåÂõ†Ê≠§Â∞±ÂèØ‰ª•Áî±ÈÄíÊé®ÂÖ≥Á≥ªÔºåÊé®Âá∫ <code>l[2],l[3], ... ,l[n]</code>ÔºåÂêåÁêÜÊé®Âá∫ <code>r[2],r[3], ... ,r[n]</code> Âíå <code>u[2],u[3], ... ,u[n]</code> üéâ</p><p>ÊúÄÂêéÂÜçËÆ°ÁÆóÔºå$f[n] = l[n] + r[n] + u[n]$ Âç≥ÂèØÂæóÂà∞Á≠îÊ°à„ÄÇ</p><blockquote><p>Êú¨È¢òËøòÂèØ‰ª•ÁÆÄÂåñÔºå‰∏çËøáËØ•ÁÆÄÂåñÂºè‰∏Ä‰∏ãÂ≠ê‰∏çÂÆπÊòìÊÉ≥Âà∞ÔºåÈúÄË¶ÅÁî®‰∏Ä‰∫õÊï∞Â≠¶Áü•ËØÜÔºåÊé®ÂØºÂ¶Ç‰∏ãÔºö</p><p>$f[n]$</p><p>$= l[n] + r[n] + u[n]$</p><p>$= 2 * l[n -1] + 2 * r[n-1] + 3 * u[n-1]$</p><p>$= 2 * f[n-1] + u[n-1]$</p><p>$= 2 * f[n-1] + u[n-2] + l[n -2] + r[n - 2]$</p><p>$= 2 * f[n-1] + f[n-2]$</p><p>Âç≥ÈÄíÊé®Âºè‰∏∫ $f[n] = 2 * f[n - 1] + f[n-2](n \ge 3)$</p></blockquote><p>üçâ ÊÄªÁªìÔºöËØ•È¢ò‰ªé <strong>‰∏çÂêåË∑ØÁ∫ø</strong> Âíå <strong>Ë∑ØÁ∫øÁöÑÁ¨¨ n Ê≠•Âíå n-1 Ê≠•ÊñπÂêë</strong> ËßíÂ∫¶ÂéªÂ±ïÂºÄÈÄíÊé®Ôºå‰ºöÊØîËæÉÊ∏ÖÊô∞Êòé‰∫ÜÔºà‰∏çÂª∫ËÆÆÂÉè„ÄåÂçïÁÇπÁßªÂä®Ë∑ØÁ∫ø„ÄçÈóÆÈ¢òÈÇ£Ê†∑‰ªéÊüê‰∏™ÁÇπÂºÄÂßãËÄÉËôëÔºâ</p><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><p>Ê†áÂáÜÁâà</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span>ll f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> l<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> r<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> u<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token comment">//ËæπÁïåÊù°‰ª∂</span>    l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> l<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> r<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> u<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">//ÈÄíÊé®</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        l<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> l<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> u<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> u<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        u<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> l<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> r<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> u<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> l<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>‰ºòÂåñÁâà</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span>ll f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token comment">//Êï∞Â≠¶ÁÆÄÂåñÂêéÁöÑÈÄíÊé®</span>    f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    f<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//Ê≥®ÊÑèi‰ªé3ÂºÄÂßã</span>        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÈÄíÊé® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúËøáÊ≤≥Âçí</title>
      <link href="/2023/04/10/xin-xi-ao-sai-ti-jie-guo-he-zu/"/>
      <url>/2023/04/10/xin-xi-ao-sai-ti-jie-guo-he-zu/</url>
      
        <content type="html"><![CDATA[<h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúËøáÊ≤≥Âçí"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúËøáÊ≤≥Âçí" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúËøáÊ≤≥Âçí"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúËøáÊ≤≥Âçí</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>Ê£ãÁõò‰∏ä $A$ ÁÇπÊúâ‰∏Ä‰∏™ËøáÊ≤≥ÂçíÔºåÈúÄË¶ÅËµ∞Âà∞ÁõÆÊ†á $B$ ÁÇπ„ÄÇÂçíË°åËµ∞ÁöÑËßÑÂàôÔºöÂèØ‰ª•Âêë‰∏ã„ÄÅÊàñËÄÖÂêëÂè≥„ÄÇÂêåÊó∂Âú®Ê£ãÁõò‰∏ä $C$ ÁÇπÊúâ‰∏Ä‰∏™ÂØπÊñπÁöÑÈ©¨ÔºåËØ•È©¨ÊâÄÂú®ÁöÑÁÇπÂíåÊâÄÊúâË∑≥Ë∑É‰∏ÄÊ≠•ÂèØËææÁöÑÁÇπÁß∞‰∏∫ÂØπÊñπÈ©¨ÁöÑÊéßÂà∂ÁÇπ„ÄÇÂõ†Ê≠§Áß∞‰πã‰∏∫‚ÄúÈ©¨Êã¶ËøáÊ≤≥Âçí‚Äù„ÄÇ</p><p>Ê£ãÁõòÁî®ÂùêÊ†áË°®Á§∫Ôºå$A$ ÁÇπ $(0, 0)$„ÄÅ$B$ ÁÇπ $(n, m)$ÔºåÂêåÊ†∑È©¨ÁöÑ‰ΩçÁΩÆÂùêÊ†áÊòØÈúÄË¶ÅÁªôÂá∫ÁöÑ„ÄÇ</p><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/5b477a6bd7600427bbb9f3258ff0b14d.png"></p><p>Áé∞Âú®Ë¶ÅÊ±Ç‰Ω†ËÆ°ÁÆóÂá∫Âçí‰ªé $A$ ÁÇπËÉΩÂ§üÂà∞Ëææ $B$ ÁÇπÁöÑË∑ØÂæÑÁöÑÊù°Êï∞ÔºåÂÅáËÆæÈ©¨ÁöÑ‰ΩçÁΩÆÊòØÂõ∫ÂÆö‰∏çÂä®ÁöÑÔºåÂπ∂‰∏çÊòØÂçíËµ∞‰∏ÄÊ≠•È©¨Ëµ∞‰∏ÄÊ≠•„ÄÇ</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>‰∏ÄË°åÂõõ‰∏™Ê≠£Êï¥Êï∞ÔºåÂàÜÂà´Ë°®Á§∫ $B$ ÁÇπÂùêÊ†áÂíåÈ©¨ÁöÑÂùêÊ†á„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÊâÄÊúâÁöÑË∑ØÂæÑÊù°Êï∞„ÄÇ</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">6</span> <span class="token number">6</span> <span class="token number">3</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">6</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h3><p>$1 \le n, m \le 20$Ôºå$0 \le$ È©¨ÁöÑÂùêÊ†á $\le 20$„ÄÇ</p><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="https://www.luogu.com.cn/problem/P1002">https://www.luogu.com.cn/problem/P1002</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p>Êú¨È¢òÊòØ„Äå<strong>ÂçïÁÇπÁßªÂä®Ë∑ØÁ∫øÊñπÊ°àÊï∞</strong>„ÄçÈóÆÈ¢òÁöÑÁªèÂÖ∏È¢òÁõÆ‰πã‰∏ÄÔºåÂú®‰∏äÈ¢ò„Äå<strong>ÁßªÂä®Ë∑ØÁ∫ø</strong>„ÄçÁöÑÂü∫Á°Ä‰∏äÔºåÂ¢ûÂä†‰∫ÜÈöúÁ¢çÁÇπÁöÑÊù°‰ª∂„ÄÇÔºà„ÄåÁßªÂä®Ë∑ØÁ∫ø„Äç È¢òÁõÆÈìæÊé•Ôºö<a href="https://rickyxcoder.top/2023/04/09/xin-xi-ao-sai-ti-jie-yi-dong-lu-xian/">‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁßªÂä®Ë∑ØÁ∫ø</a> / Â§áÁî®Á´ôÁÇπÔºö<a href="https://rickyxcoder.gitee.io/2023/04/09/xin-xi-ao-sai-ti-jie-yi-dong-lu-xian/">‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁßªÂä®Ë∑ØÁ∫ø</a>Ôºâ</p><p>Êàë‰ª¨Âè™ÈúÄË¶ÅÈ¢ùÂ§ñËÆæÁΩÆ‰∏Ä‰∏™Áä∂ÊÄÅÊï∞ÁªÑ <code>vis</code>ÔºåÂ≠òÂÇ®Êüê‰∏™ÁÇπÊòØÂê¶‰∏∫ÈöúÁ¢çÁÇπÂç≥ÂèØÔºåÂâ©‰∏ãÁöÑÊÄùË∑ØÂíå‰∏äÈ¢ò‰∏ÄËá¥„ÄÇ</p><p>üçâ ‰ª£Á†ÅÁ≤æÁÆÄÂ∞èÊèêÁ§∫ Ôºö</p><ul><li>Êú¨È¢òÂèØ‰ª•Áî®‰∏§‰∏™Êï∞ÁªÑÔºåÂ≠òÂÇ®È©¨ÂèØËÉΩË∑≥ÁöÑÁÇπÁöÑÊ®™ÂùêÊ†á/Á∫µÂùêÊ†áÂèòÂåñÂÄºÔºåËøôÊ†∑Âè™ÈúÄË¶ÅÂæ™ÁéØ‰∏ÄÊ¨°ÔºåÂ∞±ËÉΩÊääÊâÄÊúâÈ©¨ËÉΩË∑≥Âà∞ÁöÑÈöúÁ¢çÁÇπÁöÑ <code>vis</code> ÂÄºÁΩÆ‰∏∫ 1</li><li>È¢òÁõÆ‰∏≠Ëµ∑ÁÇπÊòØ‰ªé $(0,0)$ ÂºÄÂßãÔºåËÄå‰º†ÁªüÁöÑ„Äå<strong>ÁßªÂä®Ë∑ØÁ∫ø</strong>„ÄçÈóÆÈ¢òÊòØ‰ªé $(1,1)$ ÂºÄÂßãÔºåÊâÄ‰ª•ÂèØ‰ª•Âú®ÂùêÊ†áËØªÂÖ•ÁöÑÊó∂ÂÄôÂÖ®ÈÉ® <code>+1</code>„ÄÇ‰ΩÜÊòØÁî±‰∫éÊú¨È¢òÂú®ËÆ°ÁÆóÈ©¨ÁöÑÂùêÊ†áÊó∂ÔºåÂèØËÉΩÈÅáÂà∞ <code>-2</code> Ë∂äÁïåÁöÑÈóÆÈ¢òÔºåÊâÄ‰ª•Âπ≤ËÑÜÊï¥‰Ωì <code>+2</code>ÔºåËµ∑ÁÇπ‰ªé $(2,2)$ ÂºÄÂßãÔºå‰ºöÁ≤æÁÆÄ‰∏çÂ∞ë‰ª£Á†Å„ÄÇ</li></ul><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token comment">//È©¨ÂèØËÉΩ‰ºöË∑≥ÁöÑÁÇπ</span><span class="token keyword">int</span> horse_x<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> horse_y<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//visÊï∞ÁªÑÂ≠òÂÇ®ËøáÊ≤≥Áä∂ÊÄÅ</span><span class="token keyword">int</span> vis<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//aÊï∞ÁªÑÂ≠òÂÇ®Ë∑ØÁ∫øÊñπÊ°àÊï∞</span><span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Áî±‰∫éÈ¢òÁõÆËµ∑ÁÇπ‰ªéÔºà0Ôºå0ÔºâÂºÄÂßãÔºå‰∏îÈ©¨ÁöÑÂùêÊ†áË∑≥Ë∑ÉÂùêÊ†áÊúâ -2ÔºåÊâÄ‰ª•‰∏çÂ¶®ÊâÄÊúâÂùêÊ†áÁÇπÂùá +2ÔºåÈò≤Ê≠¢Ë∂äÁïå</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m <span class="token operator">&gt;&gt;</span> x <span class="token operator">&gt;&gt;</span> y<span class="token punctuation">;</span>    n <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>    m <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>    x <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>    y <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token comment">//Â∞ÜÈ©¨ÂèØËÉΩËµ∞Âà∞ÁöÑÁÇπÁöÑÁä∂ÊÄÅÁΩÆ‰∏∫1</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        vis<span class="token punctuation">[</span>x <span class="token operator">+</span> horse_x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y <span class="token operator">+</span> horse_y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//ËÆ°ÁÆóaÊï∞ÁªÑ</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//Ê≠§Êó∂Ëµ∑ÁÇπ‰∏∫Ôºà2Ôºå2Ôºâ</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment">//ÈÅáÂà∞‰∫ÜÈöúÁ¢çÁÇπ</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">//ËæìÂá∫ÁªìÊûú</span>    cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÈÄíÊé® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁßªÂä®Ë∑ØÁ∫ø</title>
      <link href="/2023/04/09/xin-xi-ao-sai-ti-jie-yi-dong-lu-xian/"/>
      <url>/2023/04/09/xin-xi-ao-sai-ti-jie-yi-dong-lu-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁßªÂä®Ë∑ØÁ∫ø"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁßªÂä®Ë∑ØÁ∫ø" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁßªÂä®Ë∑ØÁ∫ø"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁßªÂä®Ë∑ØÁ∫ø</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>Ê°åÂ≠ê‰∏äÊúâ‰∏Ä‰∏™ $m$ Ë°å $n$ ÂàóÁöÑÊñπÊ†ºÁü©ÈòµÔºåÂ∞ÜÊØè‰∏™ÊñπÊ†ºÁî®ÂùêÊ†áË°®Á§∫ÔºåË°åÂùêÊ†á‰ªé‰∏ãÂà∞‰∏ä‰æùÊ¨°ÈÄíÂ¢ûÔºåÂàóÂùêÊ†á‰ªéÂ∑¶Ëá≥Âè≥‰æùÊ¨°ÈÄíÂ¢ûÔºåÂ∑¶‰∏ãËßíÊñπÊ†ºÁöÑÂùêÊ†á‰∏∫ $(1,1)$ÔºåÂàôÂè≥‰∏äËßíÊñπÊ†ºÁöÑÂùêÊ†á‰∏∫ $(m,n)$„ÄÇ</p><p>Â∞èÊòéÊòØ‰∏™Ë∞ÉÁöÆÁöÑÂ≠©Â≠êÔºå‰∏ÄÂ§©‰ªñÊçâÊù•‰∏ÄÂè™ËöÇËöÅÔºå‰∏çÂ∞èÂøÉÊääËöÇËöÅÁöÑÂè≥ËÑöÂºÑ‰º§‰∫ÜÔºå‰∫éÊòØËöÇËöÅÂè™ËÉΩÂêë‰∏äÊàñÂêëÂè≥ÁßªÂä®„ÄÇÂ∞èÊòéÊääËøôÂè™ËöÇËöÅÊîæÂú®Â∑¶‰∏ãËßíÁöÑÊñπÊ†º‰∏≠ÔºåËöÇËöÅ‰ªéÂ∑¶‰∏ãËßíÁöÑÊñπÊ†º‰∏≠ÁßªÂä®Âà∞Âè≥‰∏äËßíÁöÑÊñπÊ†º‰∏≠ÔºåÊØèÊ≠•ÁßªÂä®‰∏Ä‰∏™ÊñπÊ†º„ÄÇËöÇËöÅÂßãÁªàÂú®ÊñπÊ†ºÁü©ÈòµÂÜÖÁßªÂä®ÔºåËØ∑ËÆ°ÁÆóÂá∫‰∏çÂêåÁöÑÁßªÂä®Ë∑ØÁ∫øÁöÑÊï∞ÁõÆ„ÄÇ</p><p>ÂØπ‰∫é $1$ Ë°å $1$ ÂàóÁöÑÊñπÊ†ºÁü©ÈòµÔºåËöÇËöÅÂéüÂú∞ÁßªÂä®ÔºåÁßªÂä®Ë∑ØÁ∫øÊï∞‰∏∫ $1$ÔºõÂØπ‰∫é $1$ Ë°å $2$ ÂàóÔºàÊàñ $2$ Ë°å $1$ ÂàóÔºâÁöÑÊñπÊ†ºÁü©ÈòµÔºåËöÇËöÅÂè™ÈúÄ‰∏ÄÊ¨°ÂêëÂè≥ÔºàÊàñÂêë‰∏äÔºâÁßªÂä®ÔºåÁßªÂä®Ë∑ØÁ∫øÊï∞‰πü‰∏∫ $1$</p><p>ÂØπ‰∫é‰∏Ä‰∏™ $2$ Ë°å $3$ ÂàóÁöÑÊñπÊ†ºÁü©ÈòµÔºåÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö</p><p>$(2,1),(2,2),(2,3)$</p><p>$(1,1),(1,2),(1,3)$</p><p>ËöÇËöÅÂÖ±Êúâ3ÁßçÁßªÂä®Ë∑ØÁ∫øÔºö</p><p>Ë∑ØÁ∫ø1Ôºö$(1,1) ‚Üí (1,2) ‚Üí (1,3) ‚Üí (2,3)$</p><p>Ë∑ØÁ∫ø2Ôºö$(1,1) ‚Üí (1,2) ‚Üí (2,2) ‚Üí (2,3)$</p><p>Ë∑ØÁ∫ø3Ôºö$(1,1) ‚Üí (2,1) ‚Üí (2,2) ‚Üí (2,3)$</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>ËæìÂÖ•Âè™Êúâ‰∏ÄË°åÔºåÂåÖÊã¨‰∏§‰∏™Êï¥Êï∞ $m$ Âíå $n(0 \lt m+n \le 20)$Ôºå‰ª£Ë°®ÊñπÊ†ºÁü©ÈòµÁöÑË°åÊï∞ÂíåÂàóÊï∞Ôºå$m,n$ ‰πãÈó¥Áî®Á©∫Ê†ºÈöîÂºÄ„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>ËæìÂá∫Âè™Êúâ‰∏ÄË°åÔºå‰∏∫‰∏çÂêåÁöÑÁßªÂä®Ë∑ØÁ∫øÁöÑÊï∞ÁõÆ„ÄÇ</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1194">http://ybt.ssoier.cn:8088/problem_show.php?pid=1194</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p>Êú¨È¢òÊòØÊ±Ç <strong>Âà∞ËææÊüêÁÇπË∑ØÁ∫øÊñπÊ°àÊï∞</strong> ‰∏≠ËæÉ‰∏∫Âü∫Á°ÄÁöÑÈ¢òÂûãÔºåÊòØÂÖ∏ÂûãÁöÑÈÄíÊé®ÈóÆÈ¢ò„ÄÇ</p><p>ÂèØ‰ª•ÊûÑÈÄ†‰∏Ä‰∏™‰∫åÁª¥Áü©Èòµ <code>a[N][N]</code> Ë°®Á§∫ÊÄªÂú∞ÂõæÔºåÂÖ∂‰∏≠ <code>a[i][j]</code> Ë°®Á§∫‰ªéËµ∑ÁÇπÂà∞ÁÇπ $(i,j)$  ÁöÑË∑ØÁ∫øÊñπÊ°àÊï∞„ÄÇ</p><p>Áî±‰∫éËöÇËöÅÂè™ËÉΩÂæÄ‰∏äÊàñËÄÖÂæÄÂè≥Ëµ∞ÔºåÂõ†Ê≠§ÂØπ‰∫éÊØè‰∏Ä‰∏™ÁÇπ <code>a[i][j]</code> Êù•ËØ¥ÔºåÂè™ËÉΩ‰ªé‰∏ãÈù¢ÁöÑÁÇπ <code>a[i-1][j]</code> ÊàñËÄÖÂ∑¶ËæπÁöÑÁÇπ <code>a[i][j-1]</code> Ëµ∞Âà∞ÔºåÊâÄ‰ª•Âà∞ <code>a[i][j]</code> ÁöÑÊñπÊ°àÊï∞Â∞±ÊòØ‰ªé Ëµ∑ÁÇπÂà∞ <code>a[i-1][j]</code> Âíå Ëµ∑ÁÇπ<code>a[i][j-1]</code> ÁöÑÊñπÊ°àÊï∞‰πãÂíåÔºåÂç≥ÈÄíÊé®ÂÖ≥Á≥ª‰∏∫ <code>a[i][j] = a[i-1][j] + a[i][j-1]</code></p><p>Êú¨È¢òÊï∞ÁªÑ <code>a</code> Êé®Ëçê‰ΩøÁî®ÂÖ®Â±ÄÂèòÈáèÔºàÂÖ®Â±ÄÂèòÈáèÈªòËÆ§ÂàùÂßãÂÄº‰∏∫ 0ÔºâÔºåËøôÊ†∑Âú® <code>i = 1</code> ÊàñËÄÖ <code>j = 1</code> Êó∂ÔºàËæπÁïåÊÉÖÂÜµ‰∏ãÔºâÔºåËØ•ÊñπÁ®ã‰ªçÁÑ∂ÊàêÁ´ã„ÄÇ</p><ul><li>Â¶ÇËµ∑ÁÇπ‰∏∫ $(1,1)$ÔºåÊÉ≥Ë¶ÅÂà∞ÁÇπ $(1,2)$ ÔºåÂè™ÊúâÂêëÂè≥Ëµ∞‰∏ÄÁßçÊñπÂºèÔºåÂç≥ <code>a[1][2] = a[1][1] = 1</code> Ôºå‰ΩÜÊòØÁî±‰∫éÁÇπ <code>a[0][2]</code> Âú®ÂÖ®Â±ÄÂèòÈáèÁöÑÊÉÖÂÜµ‰∏ãÔºåÈªòËÆ§ÂÄº‰∏∫ 0ÔºåÊâÄ‰ª•ÊääÊñπÁ®ãÂÜôÊàê <code>a[1][2] = a[1][1] + a[0][2] = 1</code> ‰πüÊòØÂÆåÂÖ®ÂèØ‰ª•ÁöÑ„ÄÇ</li><li>ËøôÊ†∑ÁöÑÂÜôÊ≥ï‰ºöÁÆÄÂåñ‰ª£Á†ÅÔºåÂõ†‰∏∫‰∏çÁî®ÂçïÁã¨Âà§Êñ≠ÊúÄ‰∏ãÈù¢‰∏ÄË°åÂíåÊúÄÂ∑¶Ëæπ‰∏ÄÂàó‰∫Ü„ÄÇ</li></ul><p>‚ùóÔ∏è ‰ΩÜÊòØÂú®ÂàùÂßãÂåñÊó∂Ë¶ÅÊ≥®ÊÑèÁªô <code>a[1][1]</code> ÂçïÁã¨ËµãÂÄº‰∏∫ 1ÔºåÂê¶ÂàôÂú®ÈÄíÊé®ËÆ°ÁÆóÊó∂ÔºåÊâÄÊúâÁªìÊûúÂùá‰∏∫0„ÄÇÔºàËØ∑ÊÄùËÄÉ‰∏∫‰ªÄ‰πà‰ºöËøôÊ†∑ÔºüÔºâ</p><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//ËÆ°ÁÆóaÊï∞ÁªÑ</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//Ê≥®ÊÑèÔºåa[1][1]ÁöÑÂàùÂßãÂÄºÈúÄË¶ÅÂçïÁã¨ËµãÂÄºÔºåÂê¶ÂàôaÊï∞ÁªÑÂú®ËØ•ÊñπÁ®ã‰∏ãÂÖ®‰∏∫0</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÈÄíÊé® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÂõõÂπ≥ÊñπÂíå</title>
      <link href="/2023/04/08/xin-xi-ao-sai-ti-jie-si-ping-fang-he/"/>
      <url>/2023/04/08/xin-xi-ao-sai-ti-jie-si-ping-fang-he/</url>
      
        <content type="html"><![CDATA[<h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÂõõÂπ≥ÊñπÂíå"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÂõõÂπ≥ÊñπÂíå" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÂõõÂπ≥ÊñπÂíå"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÂõõÂπ≥ÊñπÂíå</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>ÂõõÂπ≥ÊñπÂíåÂÆöÁêÜÔºåÂèàÁß∞‰∏∫ÊãâÊ†ºÊúóÊó•ÂÆöÁêÜÔºö</p><p>ÊØè‰∏™Ê≠£Êï¥Êï∞ÈÉΩÂèØ‰ª•Ë°®Á§∫‰∏∫Ëá≥Â§ö $4$ ‰∏™Ê≠£Êï¥Êï∞ÁöÑÂπ≥ÊñπÂíå„ÄÇ</p><p>Â¶ÇÊûúÊää $0$ ÂåÖÊã¨ËøõÂéªÔºåÂ∞±Ê≠£Â•ΩÂèØ‰ª•Ë°®Á§∫‰∏∫ $4$ ‰∏™Êï∞ÁöÑÂπ≥ÊñπÂíå„ÄÇ</p><p>ÊØîÂ¶ÇÔºö</p><p>$5=0^2+0^2+1^2+2^2$<br>$7=1^2+1^2+1^2+2^2$</p><p>ÂØπ‰∫é‰∏Ä‰∏™ÁªôÂÆöÁöÑÊ≠£Êï¥Êï∞ÔºåÂèØËÉΩÂ≠òÂú®Â§öÁßçÂπ≥ÊñπÂíåÁöÑË°®Á§∫Ê≥ï„ÄÇ</p><p>Ë¶ÅÊ±Ç‰Ω†ÂØπ $4$ ‰∏™Êï∞ÊéíÂ∫èÔºö</p><p>$0 \le a \le b \le c \le d$</p><p>Âπ∂ÂØπÊâÄÊúâÁöÑÂèØËÉΩË°®Á§∫Ê≥ïÊåâ $a,b,c,d$ ‰∏∫ËÅîÂêà‰∏ªÈîÆÂçáÂ∫èÊéíÂàóÔºåÊúÄÂêéËæìÂá∫Á¨¨‰∏Ä‰∏™Ë°®Á§∫Ê≥ï„ÄÇ</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>ËæìÂÖ•‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $N$„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>ËæìÂá∫ $4$ ‰∏™ÈùûË¥üÊï¥Êï∞ÔºåÊåâ‰ªéÂ∞èÂà∞Â§ßÊéíÂ∫èÔºå‰∏≠Èó¥Áî®Á©∫Ê†ºÂàÜÂºÄ„ÄÇ</p><h3 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h3><p>$0 \lt N \lt 5‚àó10^6$</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">0</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="https://www.luogu.com.cn/problem/P8635">https://www.luogu.com.cn/problem/P8635</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p>ÂõõÈáçÂæ™ÁéØÁöÑÊö¥ÂäõÊûö‰∏æÂÅöÊ≥ïÔºåÊòæÁÑ∂‰ºö TLEÔºåÊâÄ‰ª•ÂèØ‰ª•ÈááÁî® <strong>ÂìàÂ∏å</strong> ÁöÑÊñπÊ≥ïÔºåÊù•Èôç‰ΩéÊó∂Èó¥Â§çÊùÇÂ∫¶„ÄÇ</p><p><strong>Ê≠£Á°ÆÊÄùË∑Ø</strong>Ôºö</p><ul><li>Â∞Ü $c$ Âíå $d$ ÁöÑÂπ≥ÊñπÂíåÂ≠òÂÇ®Âà∞Ëá™Â∑±Ê®°ÊãüÁöÑÂìàÂ∏åË°®‰∏≠ÔºåËØ•Ê≠•Â§çÊùÇÂ∫¶‰∏∫ $O(\sqrt n) * O(\sqrt n) = O(n)$</li><li>Êûö‰∏æ $aÔºåb$ÔºåÂπ∂‰∏îÂú®ÂìàÂ∏åË°®‰∏≠Êü•Êâæ  $n - a * a - b * b$ÔºåËØ•Ê≠•Â§çÊùÇÂ∫¶‰∏∫ $(O\sqrt n) * O(\sqrt n) * O(1) = O(n)$</li></ul><p>ÊâÄ‰ª•ËØ•ÊÄùË∑ØÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(n) + O(n) = O(n)$ÔºåÊª°Ë∂≥ËØ•È¢òÁöÑÊï∞ÊçÆËåÉÂõ¥„ÄÇ</p><p>Êú¨È¢òÊé®Ëçê‰ΩøÁî®Ëá™Â∑± <strong>Áî®Êï∞ÁªÑÊ®°ÊãüÁöÑÂìàÂ∏åË°®</strong>ÔºàÁõ∏ËæÉ‰∫é STL ‰ºöÊõ¥Âä†Âø´Ôºâ</p><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">5e6</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> C<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> D<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// ÂìàÂ∏åË°®ÔºåC[k]Â≠òÂÇ®Âπ≥ÊñπÂíå‰∏∫kÊó∂ÔºåcÁöÑÂÄºÔºõD[k]Â≠òÂÇ®Âπ≥ÊñπÂíå‰∏∫kÊó∂ÔºådÁöÑÂÄº</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token comment">// Â∞Üc„ÄÅdÁöÑÂπ≥ÊñπÂíåÂ≠òÂÖ•ÂìàÂ∏åË°®ÔºàÂ§çÊùÇÂ∫¶‰∏∫O(N))Ôºâ</span>    <span class="token function">memset</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ÂàùÂßãÂåñ‰∏∫-1ÔºåÂõ†‰∏∫0ÊòØÊúâÂÆûÈôÖÂê´‰πâÁöÑ</span>    <span class="token function">memset</span><span class="token punctuation">(</span>D<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> c <span class="token operator">*</span> c <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> d <span class="token operator">=</span> c<span class="token punctuation">;</span> c <span class="token operator">*</span> c <span class="token operator">+</span> d <span class="token operator">*</span> d <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> d<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> sum <span class="token operator">=</span> c <span class="token operator">*</span> c <span class="token operator">+</span> d <span class="token operator">*</span> d<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>C<span class="token punctuation">[</span>sum<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// ËØ•ÊÄªÂíåÁ¨¨‰∏ÄÊ¨°Âá∫Áé∞,ËÆ∞ÂΩïÊ≠§Êó∂cÂíådÁöÑÂÄº</span>                C<span class="token punctuation">[</span>sum<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">,</span> D<span class="token punctuation">[</span>sum<span class="token punctuation">]</span> <span class="token operator">=</span> d<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment">// Êûö‰∏æaÔºåbÔºåÊü•Êâæ n - a*a - b*b ÁöÑÂìàÂ∏åÂÄº</span>    <span class="token comment">// ÂìàÂ∏åÂÄºÂ≠òÂú®ÔºåËØ¥ÊòéÊ≠§Êó∂a,b,c,dÂπ≥ÊñπÂíå‰∏∫n</span>    <span class="token comment">// Â§çÊùÇÂ∫¶ÊòØsqrt(n) * sqrt(n) * O(1)= O(n) ÂìàÂ∏åË°®Êü•Êâæ‰∏∫O(1)</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">*</span> a <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span> a <span class="token operator">*</span> a <span class="token operator">+</span> b <span class="token operator">*</span> b <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> b<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> dis <span class="token operator">=</span> n <span class="token operator">-</span> a <span class="token operator">*</span> a <span class="token operator">-</span> b <span class="token operator">*</span> b<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>C<span class="token punctuation">[</span>dis<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                cout <span class="token operator">&lt;&lt;</span> a <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> b <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> C<span class="token punctuation">[</span>dis<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> D<span class="token punctuation">[</span>dis<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">// ‰∏ãÈù¢Ê≤°ÊúâÊõ¥Â§öÈúÄÊ±ÇÁöÑËØùÔºåÁõ¥Êé•return 0ÁªìÊùüÂç≥ÂèØÔºå‰∏çÁî®ÂÜôgoto</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÂìàÂ∏åË°® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcwingÁ¨¨86Âú∫Âë®ËµõÂ§çÁõò</title>
      <link href="/2023/04/07/acwing-di-86-chang-zhou-sai-fu-pan/"/>
      <url>/2023/04/07/acwing-di-86-chang-zhou-sai-fu-pan/</url>
      
        <content type="html"><![CDATA[<h1 id="„ÄêAcwing-Âë®ËµõÂ§çÁõò„ÄëÁ¨¨86Âú∫Âë®ËµõÂ§çÁõòÔºà2023-1-14Ôºâ"><a href="#„ÄêAcwing-Âë®ËµõÂ§çÁõò„ÄëÁ¨¨86Âú∫Âë®ËµõÂ§çÁõòÔºà2023-1-14Ôºâ" class="headerlink" title="„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨86Âú∫Âë®ËµõÂ§çÁõòÔºà2023.1.14Ôºâ"></a>„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨86Âú∫Âë®ËµõÂ§çÁõòÔºà2023.1.14Ôºâ</h1><h2 id="Âë®ËµõÂ§çÁõò-‚úçÔ∏è"><a href="#Âë®ËµõÂ§çÁõò-‚úçÔ∏è" class="headerlink" title="Âë®ËµõÂ§çÁõò ‚úçÔ∏è"></a>Âë®ËµõÂ§çÁõò ‚úçÔ∏è</h2><blockquote><p>Êú¨Âë®‰∏™‰∫∫ÊéíÂêçÔºö678/2358Ôºà28.7%Ôºâ</p><p>ACÊÉÖÂÜµÔºö2/3</p><p>ËøôÊòØÂçö‰∏ªÂèÇÂä†ÁöÑÁ¨¨‰∏ÄÊ¨°Âë®ËµõÔºåÊ∑±Âàª‰Ωì‰ºöÂà∞‰∫Ü‰∏ñÁïåÁöÑÂèÇÂ∑Æ üòÇ</p><p>ÁúãÂà∞ÊéíÂêç TOP3 ÁöÑÂ§ß‰Ω¨ÈÉΩÊòØ‰∏çÂà∞ 5 ÂàÜÈíüÂÜÖÂ∞± AK ‰∫ÜÔºåÁúüÊòØÊÅêÊÄñÂ¶ÇÊñØÔºàORZÔºâ</p><p>ÂØπÊØî‰∏ãÊù•ÔºåËá™Â∑±ÂÅöÊª° 75 ÂàÜÈíüÂπ∂‰∏îÂè™ AC ‰∫Ü 2 È¢òÁúüÊòØÂº±ÁàÜ‰∫Ü„ÄÇ„ÄÇ„ÄÇ</p><p>Â∏åÊúõÊú™Êù•‰πüËÉΩÁªßÁª≠Âä™ÂäõÔºåÁ¥ßË∑üÂ§ß‰Ω¨‰ª¨ÁöÑÊ≠•‰ºêÔºåÁªßÁª≠Âä†Ê≤π üí™</p></blockquote><p><img src="http://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-170401.jpg" alt="Âë®ËµõrankÂõæ"></p><h2 id="Âë®Ëµõ‰ø°ÊÅØ-üìö"><a href="#Âë®Ëµõ‰ø°ÊÅØ-üìö" class="headerlink" title="Âë®Ëµõ‰ø°ÊÅØ üìö"></a>Âë®Ëµõ‰ø°ÊÅØ üìö</h2><p><strong>Êó∂Èó¥</strong>Ôºö2023Âπ¥1Êúà14Êó•19Ôºö00-20Ôºö15</p><p><strong>Á´ûËµõÈìæÊé•</strong>Ôºö<a href="https://www.acwing.com/activity/content/2794/">https://www.acwing.com/activity/content/2794/</a></p><p><strong>yÊÄªÁõ¥Êí≠Èó¥</strong>Ôºö<a href="http://live.bilibili.com/21871779">http://live.bilibili.com/21871779</a></p><p><strong>yÊÄªÂΩïÊí≠ËÆ≤Ëß£ËßÜÈ¢ë</strong>Ôºö<a href="https://www.bilibili.com/video/BV1284y1h7ip/?share_source=copy_web&amp;vd_source=33934722b558a5cefa750c1a9be72249">„ÄêAcWingÊùØ - Á¨¨86Âú∫Âë®ËµõËÆ≤Ëß£„Äë</a></p><h2 id="È¢òÁõÆÂàóË°®-üßëüèª‚Äçüíª"><a href="#È¢òÁõÆÂàóË°®-üßëüèª‚Äçüíª" class="headerlink" title="È¢òÁõÆÂàóË°® üßëüèª‚Äçüíª"></a>È¢òÁõÆÂàóË°® üßëüèª‚Äçüíª</h2><table><thead><tr><th align="center">È¢òÁõÆÂêçÁß∞</th><th align="center">ÂéüÈ¢òÈìæÊé•</th><th align="center">ÈöæÂ∫¶</th></tr></thead><tbody><tr><td align="center">4794. ÂÅ•Ë∫´</td><td align="center"><a href="https://www.acwing.com/problem/content/4797/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center">ÁÆÄÂçï üü¢</td></tr><tr><td align="center">4795. ÂÆâÂÖ®Âå∫Âüü</td><td align="center"><a href="https://www.acwing.com/problem/content/4798/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center">‰∏≠Á≠â üü°</td></tr><tr><td align="center">4796. Âà†Èô§Â∫èÂàó</td><td align="center"><a href="https://www.acwing.com/problem/content/4799/">ÂéüÈ¢òÈìæÊé•</a></td><td align="center">Âõ∞Èöæ üî¥</td></tr></tbody></table><hr><h2 id="È¢òËß£-üöÄ"><a href="#È¢òËß£-üöÄ" class="headerlink" title="È¢òËß£ üöÄ"></a>È¢òËß£ üöÄ</h2><h3 id="„ÄêÈ¢òÁõÆA„ÄëÂÅ•Ë∫´"><a href="#„ÄêÈ¢òÁõÆA„ÄëÂÅ•Ë∫´" class="headerlink" title="„ÄêÈ¢òÁõÆA„ÄëÂÅ•Ë∫´"></a>„ÄêÈ¢òÁõÆA„ÄëÂÅ•Ë∫´</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÊùéÂçé‰∏ÄÂÖ±Ë¶ÅËøõË°å $n$ ÁªÑÂÅ•Ë∫´ËÆ≠ÁªÉ„ÄÇ</p><p>ÂÖ∂‰∏≠ÔºåÁ¨¨ $i$ ÁªÑËÆ≠ÁªÉÁöÑ<strong>Êó∂Èïø</strong>‰∏∫ $a_i$„ÄÇ</p><p>ÊùéÂçéÂè™ÂÅö‰∏âÁßçËøêÂä®ÔºöËÉ∏ÈÉ®Ôºà<code>chest</code>ÔºâËøêÂä®„ÄÅ‰∫åÂ§¥ËÇåÔºà<code>biceps</code>ÔºâËøêÂä®„ÄÅËÉåÈÉ®Ôºà<code>back</code>ÔºâËøêÂä®„ÄÇ</p><p>ËÄå‰∏îÔºå‰∏âÁßçËøêÂä®ÊòØÂæ™ÁéØËÆ≠ÁªÉÁöÑÔºå‰πüÂ∞±ÊòØËØ¥‰ªñÁ¨¨‰∏ÄÁªÑËÆ≠ÁªÉÊòØËÉ∏ÈÉ®ËøêÂä®ÔºåÁ¨¨‰∫åÁªÑËÆ≠ÁªÉÊòØ‰∫åÂ§¥ËÇåËøêÂä®ÔºåÁ¨¨‰∏âÁªÑËÆ≠ÁªÉÊòØËÉåÈÉ®ËøêÂä®ÔºåÁ¨¨ÂõõÁªÑËÆ≠ÁªÉÊòØËÉ∏ÈÉ®ËøêÂä®ÔºåÁ¨¨‰∫îÁªÑËÆ≠ÁªÉÊòØ‰∫åÂ§¥ËÇåËøêÂä®‚Ä¶‚Ä¶‰ª•Ê≠§Á±ªÊé®Áõ¥Âà∞ÂÅöÂÆåÁ¨¨ $n$ ÁªÑËÆ≠ÁªÉ„ÄÇ</p><p>ËØ∑‰Ω†ËÆ°ÁÆóÔºå‰ªñÂÅöÂì™ÁßçËøêÂä®ÁöÑ <strong>Êó∂Èïø</strong> ÊúÄÈïø„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´Êï¥Êï∞ $n$„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´ $n$ ‰∏™Êï¥Êï∞ $a_1,a_2,‚Ä¶,a_n$„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ÂÖ±‰∏ÄË°åÔºåÂ¶ÇÊûúËÆ≠ÁªÉÊó∂ÈïøÊúÄÈïøÁöÑËøêÂä®‰∏∫Ôºö</p><ul><li>ËÉ∏ÈÉ®ËøêÂä®ÔºåÂàôËæìÂá∫ <code>chest</code>„ÄÇ</li><li>‰∫åÂ§¥ËÇåËøêÂä®ÔºåÂàôËæìÂá∫ <code>biceps</code>„ÄÇ</li><li>ËÉåÈÉ®ËøêÂä®ÔºåÂàôËæìÂá∫ <code>back</code>„ÄÇ</li></ul><p>Êï∞ÊçÆ‰øùËØÅËÆ≠ÁªÉÊó∂ÈïøÊúÄÈïøÁöÑËøêÂä®ÊòØÂîØ‰∏ÄÁöÑ„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>Ââç $3$ ‰∏™ÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 7$„ÄÇ<br>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 20$Ôºå$1 \le a_i \le 25$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span class="token number">2</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">biceps<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span><span class="token number">5</span> <span class="token number">1</span> <span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">back<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã3„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">7</span><span class="token number">3</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">7</span> <span class="token number">9</span> <span class="token number">6</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã3„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">chest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4797/">https://www.acwing.com/problem/content/4797/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Á≠æÂà∞È¢òÔºåÁÆÄÂçïÊ®°ÊãüÂç≥ÂèØ„ÄÇÔºà‰ΩÜÊòØÁé∞Âú∫ÁºñÂÜôÁöÑ‰ª£Á†ÅÊúâÂæàÂ§öÂèØ‰ª•ÊîπËøõÂíå‰ºòÂåñÁöÑÂú∞ÊñπÔºåËßÅ‰∏ãÈù¢„Äå<strong>‰ª£Á†ÅÂØπÊØîÊÄªÁªì</strong>„ÄçÈÉ®ÂàÜÔºâ</p><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> n<span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span>        <span class="token comment">// ‰∏ãÈù¢ÁöÑÂÜôÊ≥ïÈÅøÂÖç‰∫ÜÂ§ö‰∏™if</span>        s<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+=</span> x<span class="token punctuation">;</span>  <span class="token comment">// s[1]Â≠òÂÇ®chest„ÄÅs[2]Â≠òÂÇ®biceps„ÄÅs[0]Â≠òÂÇ®back</span>    <span class="token punctuation">}</span>    <span class="token comment">// ÊâæÂà∞ÊúÄÂ§ßÂÄº‰∏ãÊ†á</span>    <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> s<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>            k <span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token comment">// ËæìÂá∫ÁªìÊûú</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"chest"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"biceps"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">else</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"back"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë"><a href="#„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë"></a>„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span><span class="token keyword">int</span> chest<span class="token punctuation">,</span>biceps<span class="token punctuation">,</span>back<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            chest <span class="token operator">+=</span> tmp<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            biceps <span class="token operator">+=</span> tmp<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            back <span class="token operator">+=</span> tmp<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment">//    cout &lt;&lt; chest &lt;&lt; " " &lt;&lt; biceps &lt;&lt; " " &lt;&lt; back &lt;&lt; endl;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>chest <span class="token operator">&gt;</span> biceps<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>chest <span class="token operator">&gt;</span> back<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"chest"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"back"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>biceps <span class="token operator">&gt;</span> back<span class="token punctuation">)</span> <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"biceps"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token string">"back"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë"><a href="#„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë" class="headerlink" title="„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë"></a>„Äê‰ª£Á†ÅÊÄªÁªìÂàÜÊûê„Äë</h4><ul><li><code>s[i%3] += x</code> ÁöÑÊÄùË∑ØÂÄºÂæóÂÄüÈâ¥ÔºåÁúÅÂéª‰∫ÜÂ§ö‰∏™ <code>if</code> Âà§Êñ≠</li><li>ÂØªÊâæÊúÄÂ§ßÂÄº‰∏ãÊ†áÁöÑÊñπÂºèÂÄºÂæóÂÄüÈâ¥Ôºå‰ºòÂåñ‰∫ÜÁõ¥Êé•ÊØîËæÉÁöÑÂ§ö if Âà§Êñ≠</li></ul><hr><h3 id="„ÄêÈ¢òÁõÆB„ÄëÂÆâÂÖ®Âå∫Âüü"><a href="#„ÄêÈ¢òÁõÆB„ÄëÂÆâÂÖ®Âå∫Âüü" class="headerlink" title="„ÄêÈ¢òÁõÆB„ÄëÂÆâÂÖ®Âå∫Âüü"></a>„ÄêÈ¢òÁõÆB„ÄëÂÆâÂÖ®Âå∫Âüü</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÁªôÂÆö‰∏Ä‰∏™ $n√ón$ ÁöÑÊñπÊ†ºÊ£ãÁõòÂíå $m$ ‰∏™ÂõΩÈôÖË±°Ê£ã‰∏≠ÁöÑËΩ¶„ÄÇ</p><p>ÂØπ‰∫é‰∏Ä‰∏™ÊñπÊ†ºÔºåÂ¶ÇÊûúËØ•ÊñπÊ†ºÊª°Ë∂≥‰ª•‰∏ã‰∏§‰∏™Êù°‰ª∂‰∏≠ÁöÑËá≥Â∞ë‰∏Ä‰∏™ÔºåÂàôËØ•ÊñπÊ†º‰ºöË¢´ËΩ¶ÊîªÂáªÂà∞Ôºö</p><ul><li>ËØ•ÊñπÊ†ºÂÜÖÊúâËΩ¶„ÄÇ</li><li>Ëá≥Â∞ëÊúâ‰∏Ä‰∏™ËΩ¶‰∏éËØ•ÊñπÊ†º‰Ωç‰∫éÂêå‰∏ÄË°åÊàñÂêå‰∏ÄÂàó„ÄÇ</li></ul><p>Áé∞Âú®ÔºåÊàë‰ª¨Ë¶ÅÂ∞Ü $m$ ‰∏™ËΩ¶ÈÄê‰∏™ÊîæÂÖ•Âà∞Ê£ãÁõò‰∏≠ÔºåÂÖ∂‰∏≠Á¨¨ $i$ ‰∏™ËΩ¶ÊîæÂà∞Ê£ãÁõòÁöÑÁ¨¨ $x_i$ Ë°åÁ¨¨ $y_i$ ÂàóÁöÑÊñπÊ†º‰∏≠„ÄÇ</p><p>ËΩ¶ÁöÑÁºñÂè∑‰ªé $1$ Âà∞ $m$ÔºåË°å/ÂàóÁöÑÁºñÂè∑‰ªé $1$ Âà∞ $n$„ÄÇ</p><p>‰øùËØÅ‰ªªÊÑè‰∏§‰∏™ËΩ¶‰∏ç‰ºöÊîæÂà∞Âêå‰∏Ä‰∏™ÊñπÊ†º‰∏≠„ÄÇ</p><p>ÂØπ‰∫é $1 \le i \le m$ÔºåËØ∑‰Ω†ËÆ°ÁÆóÔºåÂ∞ÜÂâç $i$ ‰∏™ËΩ¶ÊîæÂÖ•Âà∞Ê£ãÁõò‰∏≠ÂêéÔºåÊúâÂ§öÂ∞ë‰∏™ÊñπÊ†º‰∏ç‰ºöË¢´ËΩ¶ÊîªÂáªÂà∞„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-1"><a href="#„ÄêËæìÂÖ•„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏§‰∏™Êï¥Êï∞ $n,m$„ÄÇ</p><p>Êé•‰∏ãÊù• $m$ Ë°åÔºåÂÖ∂‰∏≠Á¨¨ $i$ Ë°åÂåÖÂê´‰∏§‰∏™Êï¥Êï∞ $x_i,y_i$ÔºåË°®Á§∫Á¨¨ $i$ ‰∏™ËΩ¶ÊîæÂà∞Ê£ãÁõòÁöÑÁ¨¨ $x_i$ Ë°åÁ¨¨ $y_i$ ÂàóÁöÑÊñπÊ†º‰∏≠„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-1"><a href="#„ÄêËæìÂá∫„Äë-1" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ÂÖ± 1 Ë°åÔºåÂÖ∂‰∏≠Á¨¨ $i$ Ë°åËæìÂá∫Â∞ÜÂâç $i$ ‰∏™ËΩ¶ÊîæÂÖ•Âà∞Ê£ãÁõò‰∏≠ÂêéÔºå‰∏ç‰ºöË¢´ËΩ¶ÊîªÂáªÂà∞ÁöÑÊñπÊ†ºÊï∞Èáè„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-1"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-1" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>Ââç $3$ ‰∏™ÊµãËØïÁÇπÊª°Ë∂≥ $1 \le m \le 3$„ÄÇ<br>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 10^5$Ôºå$1 \le m \le min(10^5,n^2)$Ôºå$1 \le x_i,y_i \le n$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span> <span class="token number">3</span><span class="token number">1</span> <span class="token number">1</span><span class="token number">3</span> <span class="token number">1</span><span class="token number">2</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span> <span class="token number">2</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span> <span class="token number">2</span><span class="token number">1</span> <span class="token number">5</span><span class="token number">5</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">16</span> <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã3„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">100000</span> <span class="token number">1</span><span class="token number">300</span> <span class="token number">400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã3„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã3„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">9999800001</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë-1"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë-1" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4798/">https://www.acwing.com/problem/content/4798/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>ÊÄùÁª¥È¢òÔºåÈúÄË¶ÅÈÄöËøá <strong>Êï∞Â≠¶Êé®ÂØº</strong> ÁöÑÊñπÂºèÔºåÂæóÂà∞Êú™Ë¢´ÊîªÂáªÁöÑÊñπÊ†ºÊï∞Êï∞Èáè‰∏∫Ôºö$(n-c)*(n-r)$ÔºåÂÖ∂‰∏≠ $c,r$ ‰∏∫Ë¢´ÊîªÂáªÁöÑÂàóÊï∞„ÄÅË°åÊï∞</p><p>üçâ PSÔºöÊú¨È¢òÊï∞ÊçÆËåÉÂõ¥ËæÉÂ§ßÔºåÈúÄË¶Å‰ΩøÁî® <code>long long</code> Á±ªÂûãÔºå‰∏çÁÑ∂‰ºöÊä•Èîô„ÄÇÔºàÂú®ÂÖ¨ÂºèÂâçÂº∫Âà∂ËΩ¨Êç¢Âç≥ÂèØÔºö<code>(ll)(n-c)*(n-r)</code>Ôºâ</p><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-1"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-1" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> x <span class="token operator">&gt;&gt;</span> y<span class="token punctuation">;</span>            <span class="token comment">// ÁªüËÆ°ÂΩìÂâçË¢´ÊîªÂáªÁöÑË°åÊï∞„ÄÅÂàóÊï∞</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> row<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>b<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> col<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token comment">// Ê±ÇÂâ©‰Ωô‰∏™Êï∞ÁöÑÂÖ¨ÂºèÔºåËØ•ÂΩ¢ÂºèÂÆπÊòìÊé®ÂØºÂíåËÆ∞ÂøÜ</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>ll<span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> row<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> col<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-1"><a href="#„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-1" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë"></a>„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>ll ans<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    ll sum <span class="token operator">=</span> <span class="token punctuation">(</span>ll<span class="token punctuation">)</span> n <span class="token operator">*</span> n<span class="token punctuation">;</span>    <span class="token keyword">int</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> x <span class="token operator">&gt;&gt;</span> y<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> row<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>b<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span> b<span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> col<span class="token operator">++</span><span class="token punctuation">;</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>ll<span class="token punctuation">)</span> sum <span class="token operator">-</span> <span class="token punctuation">(</span>ll<span class="token punctuation">)</span> row <span class="token operator">*</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>ll<span class="token punctuation">)</span> col <span class="token operator">*</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> row<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"><a href="#„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë" class="headerlink" title="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"></a>„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë</h4><ul><li>Êé®ÂØºÁöÑÂÖ¨ÂºèÔºåÂèØ‰ª•ÂÜôÊàê $(n-c)*(n-r)$ ËøôÊ†∑Êõ¥Âä† <strong>ÁÆÄÊ¥Å‰∏îÂÆπÊòìËÆ∞ÂøÜ</strong> ÁöÑÂΩ¢Âºè„ÄÇ</li><li>Âú®‰ΩøÁî® <code>(ll)</code> ÁöÑ <strong>Âº∫Âà∂ËΩ¨Êç¢</strong> Êó∂ÔºåÈúÄË¶ÅÊ≥®ÊÑè <strong>Âì™‰∫õÈ°π‰ºöÁàÜ int</strong>„ÄÇÔºàÊú¨Ê¨°Âë®ËµõÊï≤‰ª£Á†ÅÊó∂ÔºåÁî±‰∫éÊ≤°ÊúâËÄÉËôëËØ•ÈóÆÈ¢òÔºå‰ª•‰∏∫Âú®ÊúÄÂâçÈù¢Âä†‰∏ä <code>(ll)</code> Â∞±ËÉΩÊï¥‰ΩìËΩ¨Êç¢ÔºåÂØºËá¥ <code>(ll) sum - row * n - col * (n - row)</code> ËøôÊ†∑ ÁàÜint ÁöÑÈîôËØØÊ≤°ËÉΩË¢´ÂèäÊó∂ÂèëÁé∞ÔºåÊûÅÂ§ßÁöÑÂΩ±Âìç‰∫Ü AC Êó∂Èó¥ÂíåÂøÉÊÄÅÔºâ</li></ul><hr><h3 id="„ÄêÈ¢òÁõÆC„ÄëÂà†Èô§Â∫èÂàó"><a href="#„ÄêÈ¢òÁõÆC„ÄëÂà†Èô§Â∫èÂàó" class="headerlink" title="„ÄêÈ¢òÁõÆC„ÄëÂà†Èô§Â∫èÂàó"></a>„ÄêÈ¢òÁõÆC„ÄëÂà†Èô§Â∫èÂàó</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÁªôÂÆö‰∏Ä‰∏™ÈïøÂ∫¶‰∏∫ $n$ ÁöÑÊ≠£Êï¥Êï∞Â∫èÂàó $a_1,a_2,‚Ä¶,a_n$„ÄÇ</p><p>‰Ω†ÂèØ‰ª•ËøõË°å‰ªªÊÑèÊ¨°Âà†Èô§Êìç‰Ωú„ÄÇ</p><p>ÊØèÊ¨°Âà†Èô§Êìç‰ΩúÂàÜ‰∏∫‰∏§Ê≠•Ôºö</p><ol><li>ÈÄâÊã©Â∫èÂàó‰∏≠ÁöÑ <strong>‰∏Ä‰∏™</strong> ÂÖÉÁ¥†Ôºà‰∏çÂ¶®ËÆæÂÖ∂ÂÖÉÁ¥†ÂÄº‰∏∫ $x$ÔºâÔºåÂπ∂Â∞ÜËøô <strong>‰∏Ä‰∏™</strong> ÂÖÉÁ¥†Âà†Èô§ÔºåËøôÂèØ‰ª•Áªô‰Ω†Âä† $x$ ÂàÜ„ÄÇ</li><li>Â∞Ü <strong>ÊâÄÊúâ</strong> ÁöÑ <strong>ÂÖÉÁ¥†ÂÄº</strong> ‰∏∫ $x‚àí1$ Âíå $x+1$ ÁöÑÂÖÉÁ¥†ÔºàÂ¶ÇÊûúÊúâÁöÑËØùÔºâ‰ªéÂ∫èÂàó‰∏≠Âà†Èô§ÔºåËøô‰∏ç‰ºöÁªô‰Ω†Â∏¶Êù•‰ªª‰ΩïÂàÜÊï∞„ÄÇ</li></ol><p>ËØ∑ËÆ°ÁÆóÔºåÈÄöËøáÂà†Èô§Êìç‰ΩúÔºå‰Ω†ÂèØ‰ª•Ëé∑ÂæóÁöÑÊúÄÂ§ßÂæóÂàÜ„ÄÇ  </p><h4 id="„ÄêËæìÂÖ•„Äë-2"><a href="#„ÄêËæìÂÖ•„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´Êï¥Êï∞ $n$„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´ $n$ ‰∏™Ê≠£Êï¥Êï∞ $a_1,a_2,‚Ä¶,a_n$„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-2"><a href="#„ÄêËæìÂá∫„Äë-2" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÂèØ‰ª•Ëé∑ÂæóÁöÑÊúÄÂ§ßÂæóÂàÜ„ÄÇ</p><h4 id="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-2"><a href="#„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë-2" class="headerlink" title="„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë"></a>„ÄêÊï∞ÊçÆËåÉÂõ¥„Äë</h4><p>Ââç $6$ ‰∏™ÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 10$„ÄÇ</p><p>ÊâÄÊúâÊµãËØïÁÇπÊª°Ë∂≥ $1 \le n \le 10^5$Ôºå$1 \le a_i \le 10^5$„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã1„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã1„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span class="token number">1</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã1„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã1„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã1„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã1„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã2„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã2„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã2„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã2„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã2„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã2„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã3„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã3„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">9</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">1</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã3„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã3„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã3„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã3„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë-2"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë-2" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h4><p><a href="https://www.acwing.com/problem/content/4799/">https://www.acwing.com/problem/content/4799/</a></p><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Âä®ÊÄÅËßÑÂàíÈ¢òÔºåÈúÄË¶ÅÂπ≥Êó∂ÁßØÁ¥ØÔºåËØ¶ÁªÜËÆ≤Ëß£ËßÅ yÊÄªËÆ≤Ëß£ÂΩïÂÉèÔºö<a href="https://www.bilibili.com/video/BV1284y1h7ip/?share_source=copy_web&amp;vd_source=33934722b558a5cefa750c1a9be72249&amp;t=1814">ÈìæÊé•</a></p><p><img src="http://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-170405.png" alt="yÊÄªÁöÑÂàÜÊûêÂõæ"></p><p><strong>„Äê‰∫åÂà∑ÁªèÂéÜ„Äë</strong></p><p>2023 Âπ¥ 4 Êúà 8 Êó•ÔºàËÄÉÂÆåËìùÊ°•ÊùØÁöÑÊôö‰∏äÔºâÔºåÊëä‰∏ªÊÉ≥Ë¶ÅÊääËøôÁØáÊñáÁ´†‰∏ä‰º†Ëá≥Ëá™Â∑±ÁöÑÂçöÂÆ¢ÁΩëÁ´ôÔºå‰∫éÊòØÂÜçÊ¨°ÈòÖËØª‰∫ÜËøôÁØáÂØíÂÅáÂÜôÁöÑÂ§çÁõòÔºåÊâìÁÆóÊ£ÄÊü•ÊñáÁ´†ÂèØËÉΩÂ≠òÂú®ÁöÑÈîôËØØ„ÄÇ</p><p>Âú®Ê£ÄÊü•ÁöÑËøáÁ®ã‰∏≠ÔºåÊëä‰∏ªÁ™ÅÁÑ∂ÂèëÁé∞ C È¢òÂèà‰∏ç‰ºöÂÅö‰∫ÜÔºåËØ¥ÊòéÂΩìÊó∂ËøòÊòØÊ≤°ÊúâÁêÜËß£ÈÄèÂΩªÔºåÈúÄË¶ÅÂõûÁÇâÈáçÈÄ†„ÄÇüòÇ</p><p>ÂõûÈ°æ‰∏Ä‰∏ãËá™Â∑±Êôö‰∏äÁöÑÂÅöÈ¢òÊµÅÁ®ãÔºö</p><ul><li>‰∏ÄÂºÄÂßãÊâìÁÆóÁî®Ë¥™ÂøÉÂéªËß£ÔºåÂç≥‰ºòÂÖàÂà†ÂéªÊúÄÂ§ßÂÄºÔºå‰ΩÜÊòØÊ†∑‰æã3ËøôÊ†∑ÁöÑÂ∫èÂàóÊòæÁÑ∂Êó†Ê≥ïËøôÊ†∑ÁÆÄÂçïÁöÑË¥™ÂøÉ„ÄÇ</li><li>ÁÑ∂ÂêéÂèëÁé∞ÂèØ‰ª•ÊääÊó†Â∫èÁöÑÂ∫èÂàóÔºåËøõË°åÂçáÂ∫èÊéíÂàóÔºåÊõ¥Âä†Áõ¥ËßÇ„ÄÇ</li><li>ÊÉ≥Âà∞‰ΩøÁî® <strong>Á∫øÊÄßDP</strong> Ê±ÇËß£Ôºå‰ΩÜÊòØÂßãÁªàÊó†Ê≥ïÊé®Âá∫Áä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ãÔºåÊàñËÄÖËØ¥Á©∂Á´üÂ¶Ç‰ΩïË°®Á§∫Áä∂ÊÄÅÔºü<ul><li>Ëá™Â∑±Ê®°ÊãüÁöÑÂ∫èÂàóÊòØËøôÊ†∑ÁöÑ <code>1 1 1 2 2 2 2 2 3 3 3</code></li><li>DP ËÄÉËôëÂ¶Ç‰∏ã<ul><li><code>dp[i]</code> Ë°®Á§∫Âà†ÂéªÁ¨¨ <code>i</code> ‰∏™Êï∞Â≠óÂêéÔºà‰∏ÄÂÆöË¶ÅÂà†ÂéªÁ¨¨ <code>i</code> ‰∏™Êï∞Â≠óÔºâÔºåËÉΩÂæóÂà∞ÁöÑÊúÄÂ§ßÂÄº</li><li><code>dp[i]</code> Ë°®Á§∫ <code>1~i</code> Â∫èÂàóËÉΩÂæóÂà∞ÁöÑÊúÄÂ§ßÂÄºÔºà‰∏ç‰∏ÄÂÆöÂà†ÂéªÁ¨¨ <code>i</code> ‰∏™Êï∞Â≠óÔºâ</li></ul></li><li>‰ΩÜÊòØÂú®ËÄÉËôë‰∏äÈù¢‰∏§ÁßçÊÉÖÂÜµÊòØÔºåÊÄªÊòØ‰ºöÈÅáÂà∞ <strong>Êó†Ê≥ïÂæÄ‰∏ãÊÄùËÄÉÁöÑÁÇπ</strong>ÔºàËøôÁßçÁä∂ÊÄÅÂú®È¢òÁõÆÈöæÊó∂ÁªèÂ∏∏Âá∫Áé∞ÔºâÔºåÊúâÊó∂ÂÄôÊÉÖÂÜµÊúâÁÇπÊùÇÔºåËá™Â∑±Â∞±ÂºÄÂßãÁêÜ‰∏çÊ∏Ö‰∫Ü„ÄÇ<ul><li>ÊØîÂ¶ÇÁ¨¨ 1 ÁßçÊÉÖÂÜµÔºåÂ¶ÇÊûú‰∏ÄÂÆöÂà†ÂéªÁ¨¨ <code>i</code> ‰∏™Êï∞Â≠ó <code>a[i]</code>ÔºåÈÇ£ËøôÊó∂ÂÄôÂ¶Ç‰ΩïÂà†Èô§ÂâçÈù¢ÊâÄÊúâÁöÑ <code>a[i]-1</code>ÔºüÁä∂ÊÄÅÂ•ΩÂÉèÊ≤°ÂäûÊ≥ïËΩ¨ÁßªËøáÊù•ÔºåÊàñËÄÖËØ¥ÈúÄË¶ÅËÆ∞ÂΩï‰∏ÄËøû‰∏≤Êï∞Â≠óÁöÑÂ∑¶Âè≥‰∏ãÊ†áÔºåÊÑüËßâÊúâÁÇπÈ∫ªÁÉ¶„ÄÇÔºàÂÖ∂ÂÆûËøôÈáåÂ∞±Â∫îÂΩìËÄÉËôëÂà∞ÔºåÂ¶ÇÊûúÊää‰∏ÄËøû‰∏≤Êï∞Â≠óËøõË°åÂêàÂπ∂Ôºå‰ºö‰∏ç‰ºöÁÆÄÂçï‰∫õÔºâ</li><li>ÂÜçÂ¶ÇÁ¨¨ 2 ÁßçÊÉÖÂÜµÔºåÈÇ£Â∞±ÈúÄË¶ÅËÆ®ËÆ∫ÊòØÂê¶Âà†Èô§Á¨¨ <code>i</code> ‰∏™Êï∞Â≠óÔºå‰ΩÜÊòØËøôÊ†∑‰πüÈúÄË¶ÅËÆ®ËÆ∫ÔºöÊØîÂ¶Ç <code>1 1 1 2</code> ÔºåÊâßË°åÂà∞ 2 Êó∂ÔºåÂ¶ÇÊûúÂà†‰∫Ü 2Ôºå<code>dp[4] = 2</code>Ôºå‰∏çÂà† 2 ÁöÑËØùÔºå <code>dp[4] = 3</code>ÔºåÂèñ‰∏§ËÄÖÊúÄÂ§ßÂÄº ‚Üí <code>dp[4] = 3</code>„ÄÇ‰ΩÜÊòØÂÅáÂ¶ÇÂú®ÂêéÈù¢ÂÜçÊ∑ª‰∏Ä‰∏™ <code>2</code>ÔºåÊàë‰ª¨‰∏ÄÁúºËÉΩÁúãÂá∫Êù• <code>dp[5] = 4</code>Ôºå‰ΩÜÊòØËêΩÂÆûÂà∞ÂÖ∑‰ΩìÊñπÁ®ãÊó∂Ôºå<code>dp[5]=dp[4]+2=5</code>ÔºåÊòæÁÑ∂ÊúâÈóÆÈ¢òÔºåÂõ†‰∏∫ËøôÊó∂ÂÄô <code>dp[4]</code> Â∫îËØ•‰∏∫ 2ÔºåÂá∫Áé∞‰∫ÜÂâçÂêéÁüõÁõæ„ÄÇ</li></ul></li></ul></li><li>ÊúÄÂêéÂè™ËÉΩÈÅóÊÜæÂëäÁªà</li></ul><p>‰∫éÊòØÂèàÂéªÊ∏©‰π†‰∫Ü‰∏ÄÈÅç yÊÄªÁöÑËÆ≤Ëß£ÔºåÂèëÁé∞‰∏ÄÂºÄÂßã yÊÄªÁõ¥Êé•Êää <code>1 1 1 2 2 2 2 2 3 3 3</code> ËøôÁßçÂêàÂπ∂Êàê‰∫Ü <code>1 2 3</code>ÔºåÂ∞±Áõ¥Êé•ÂØπ 3 ‰∏™Êï∞ÂÄºËøõË°å Á∫øÊÄßDPÔºåÁúÅÂéª‰∫ÜËÆ∞ÂΩï‰∏ÄËøû‰∏≤Êï∞Â≠óÁöÑÂ∑¶Âè≥‰∏ãÊ†á„ÄÇÔºàËøôÈáåÊúâ‰∏ÄÊ≠•Ë¥™ÂøÉËøáÁ®ãÔºåÂ¶ÇÊÉ≥Ë¶ÅÂà†Èô§Êï∞Â≠ó 2Ôºå‰∏ÄÂÆöÊòØÊää 5 ‰∏™ 2 ÈÉΩÂà†Èô§Ôºâ</p><p>ÁÑ∂Âêé <code>dp[i]</code> ÁöÑË°®Á§∫ÊòØÈÄâÊã©‰∫Ü‰∏äÈù¢Á∫øÊÄßDPÁöÑÁ¨¨‰∫åÁßçÊñπÊ°àÔºåÊÄùË∑ØÂ¶Ç‰∏ãÔºö</p><ul><li>Â∫èÂàó <code>1 2 ... i</code>ÔºåËøôÈáå <code>i</code> Âπ∂Èùû‰∏ãÊ†áÔºåËÄåÊòØÂéüÂ∫èÂàó‰∏≠Âá∫Áé∞ÁöÑÂÄº<ul><li>Â¶ÇÊûú‰∏çÈÄâÊï∞Â≠ó <code>i</code>ÔºåÂàô <code>dp[i] = dp[i-1]</code></li><li>Â¶ÇÊûúÈÄâÊã©Êï∞Â≠ó <code>i</code>ÔºåÂàô <code>dp[i] = dp[i-2] + s[i]</code></li><li>Âèñ‰∏§ËÄÖÊúÄÂ§ßÂÄºÂç≥ÂèØ„ÄÇ</li><li>Ê≥®ÊÑè üçâÔºöÁî±‰∫éÁä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ã‰∏≠Âá∫Áé∞‰∫Ü <code>i-2</code>ÔºåÊâÄ‰ª•‰∏∫‰∫ÜÈò≤Ê≠¢‰∏ãÊ†áË∂äÁïåÔºåÂæ™ÁéØÈúÄË¶Å‰ªé 2 ÂºÄÂßãÔºõÊàñËÄÖÂÜôÊàêËøôÁßçÂΩ¢Âºè <code>dp[max(0,i-2)]</code></li></ul></li></ul><p>ËøôÈáåÈùûÂ∏∏Á≤æÂ¶ôÁöÑÂØπÊï∞ÂÄºËøõË°åÁ∫øÊÄßDPÔºåËÄå‰∏çÊòØÂÉèÂæàÂ§öÊ®°ÂûãÈÇ£Ê†∑ÂØπ‰∏ãÊ†áËøõË°åÁ∫øÊÄßDPÔºàÊúâÁÇπÂÉè„Äå‰∫åÂàÜÁ≠îÊ°à„ÄçÈÇ£Ê†∑Ôºâ</p><p>Âè™ËÉΩËØ¥ DP ÁöÑÈ¢òÁõÆÊÄùË∑ØÈÉΩÂ§™Á≤æÂ¶ô‰∫ÜÔºåÂè™ÊúâÂ§öÁúãÔºåÂ§öÂ≠¶ÔºåÂ§öÁªÉÔºåÊâçËÉΩËÆ©Ëá™Â∑±„ÄåÈ°øÊÇü„ÄçÔºåÁªßÁª≠Âä†Ê≤π„ÄÇ</p><h4 id="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-2"><a href="#„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ-2" class="headerlink" title="„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ"></a>„ÄêÂ§çÁõòÂêéÁöÑ‰ºòÂåñ‰ª£Á†Å„Äë‚úÖ</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e5</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span>ll s<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> x<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span>        s<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">+=</span> x<span class="token punctuation">;</span>  <span class="token comment">// sÊï∞ÁªÑÁ±ª‰ºº‰∫é"Ê°∂"ÔºåËøôÈáåÁöÑ"Ê°∂"Áõ¥Êé•Â≠òÂÇ®ÊÄªÂíå</span>    <span class="token punctuation">}</span>    <span class="token comment">// Âä®ÊÄÅËßÑÂàí</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> N <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment">// Áä∂ÊÄÅËΩ¨ÁßªÊñπÁ®ã</span>        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">+</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> dp<span class="token punctuation">[</span>N <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-2"><a href="#„ÄêÂë®ËµõÁé∞Âú∫-AC-‰ª£Á†Å„Äë-2" class="headerlink" title="„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë"></a>„ÄêÂë®ËµõÁé∞Âú∫ AC ‰ª£Á†Å„Äë</h4><p>ËØ•È¢òÁé∞Âú∫Êú™AC üòÇ</p><h4 id="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë-1"><a href="#„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë-1" class="headerlink" title="„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë"></a>„Äê‰ª£Á†ÅÂØπÊØîÊÄªÁªì„Äë</h4><ul><li>Âë®ËµõÁé∞Âú∫Ê≤°ËÉΩÁúãÂá∫Êú¨È¢ò‰∏∫Âä®ÊÄÅËßÑÂàíÈ¢òÔºåÂØºËá¥ËõÆÂäõÊ®°Êãü‰∏ÄÁõ¥Ëß£‰∏çÂá∫Êù•„ÄÇËØ¥ÊòéÈúÄË¶Å <strong>Â§öÂÅöÈ¢òÔºåÂ§öÁßØÁ¥Ø</strong>„ÄÇ</li></ul><hr><blockquote><p>üçâ PSÔºöÊé®ËçêÂâçÂæÄÊëä‰∏ªÁöÑ‰∏™‰∫∫ÂçöÂÆ¢Êü•ÁúãËØ•ÊñáÁ´†ÔºåÂèØ‰ª•ÊúâÊõ¥Â•ΩÁöÑÈòÖËØª‰ΩìÈ™å</p><p>‰∏ªÁ´ôÁÇπÔºö<a href="https://rickyxcoder.top/2023/04/08/acwing-di-86-chang-zhou-sai-fu-pan/">„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨86Âú∫Âë®ËµõÂ§çÁõò</a> </p><p>Â§áÁî®Á´ôÁÇπÔºö<a href="https://rickyxcoder.gitee.io/2023/04/08/acwing-di-86-chang-zhou-sai-fu-pan/">„ÄêAcwing Âë®ËµõÂ§çÁõò„ÄëÁ¨¨86Âú∫Âë®ËµõÂ§çÁõò„Äë</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> AcwingÂë®ËµõÂ§çÁõò </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> Acwing </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩú‰ΩçÊï∞ÈóÆÈ¢ò</title>
      <link href="/2023/04/06/xin-xi-ao-sai-ti-jie-wei-shu-wen-ti/"/>
      <url>/2023/04/06/xin-xi-ao-sai-ti-jie-wei-shu-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩú‰ΩçÊï∞ÈóÆÈ¢ò"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩú‰ΩçÊï∞ÈóÆÈ¢ò" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩú‰ΩçÊï∞ÈóÆÈ¢ò"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩú‰ΩçÊï∞ÈóÆÈ¢ò</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>Âú®ÊâÄÊúâÁöÑ $N$ ‰ΩçÊï∞‰∏≠ÔºåÊúâÂ§öÂ∞ë‰∏™Êï∞‰∏≠ÊúâÂÅ∂Êï∞‰∏™Êï∞Â≠ó $3$ ? Áî±‰∫éÁªìÊûúÂèØËÉΩÂæàÂ§ßÔºå‰Ω†Âè™ÈúÄË¶ÅËæìÂá∫Ëøô‰∏™Á≠îÊ°àÂØπ $12345$ Âèñ‰ΩôÁöÑÂÄº„ÄÇ</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>ËØªÂÖ•‰∏Ä‰∏™Êï∞ $N(N \le 1000)$„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>ËæìÂá∫ÊúâÂ§öÂ∞ë‰∏™Êï∞‰∏≠ÊúâÂÅ∂Êï∞‰∏™Êï∞Â≠ó $3$„ÄÇ</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">73</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1313">http://ybt.ssoier.cn:8088/problem_show.php?pid=1313</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p>Êú¨È¢òÂØπ‰∫é <strong>ÁÆóÊ≥ïÂàùÂ≠¶ËÄÖ</strong> Êù•ËØ¥ÊúâÁÇπÈöæÂ∫¶Ôºå‰∏îÁΩëÁªú‰∏äÁöÑÈ¢òËß£ÈÉΩ‰∏çÊòØÁâπÂà´Ê∏ÖÊô∞ÔºåÊïÖÊëä‰∏ªÊí∞ÂÜô‰∫ÜÊú¨ÁØáËØ¶ÁªÜÁöÑÈ¢òËß£ÂàÜÊûêÔºåÂ∏åÊúõËÉΩÂú®Êú™Êù•Â∏ÆÂä©Âà∞Êõ¥Â§öÁöÑÂêåÂ≠¶„ÄÇ</p><br><p>È¶ñÂÖà‰ª• $N=1$ÔºåÂç≥ <strong>‰∏Ä‰ΩçÊï∞</strong> ‰∏∫‰æãÔºåÁªüËÆ°‰∏Ä‰ΩçÊï∞‰∏≠ ÂåÖÂê´ÂÅ∂Êï∞‰∏™ 3 ÁöÑ‰∏™Êï∞ÔºåËÆ∞‰Ωú $f[1]_ÂÅ∂$ ÔºõÁªüËÆ°ÂåÖÂê´Â•áÊï∞‰∏™ 3 ÁöÑ‰∏™Êï∞ÔºåËÆ∞‰Ωú $f[1]_Â•á$ </p><ul><li>Áî±‰∫é 0 ‰πüÊòØÂÅ∂Êï∞ÔºåÊâÄ‰ª• „Äå<strong>0 ‰∏™ 3</strong>„Äç ‰πüÊª°Ë∂≥ÂÅ∂Êï∞‰∏™ 3 ÁöÑÊù°‰ª∂ÔºåÊïÖ $f[1]_ÂÅ∂$ ‰∏∫ 1ÔΩû2Ôºå4ÔΩû9ÔºåÂÖ± 8 ‰∏™Êï∞ÔºàÊ≥®ÊÑèÔºö0 ‰∏çÊòØ‰∏Ä‰ΩçÊï∞ÔºâÔºå$f[1]_ÂÅ∂ = 8$</li><li>Â•áÊï∞‰∏™3 ÁöÑÊÉÖÂÜµÂè™ÊúâÂçïÁã¨ÁöÑ 3ÔºåÊâÄ‰ª• $f[1]_Â•á = 1$</li></ul><blockquote><p>üçâ PSÔºöÊúâÁöÑÂ∞è‰ºô‰º¥ÂèØËÉΩ‰ºöÈóÆÔºåÈ¢òÁõÆ‰∏çÊòØÊ±ÇÂÅ∂Êï∞ÁöÑÊÉÖÂÜµÂ∞±Â§ü‰∫ÜÂêóÔºü‰∏∫‰ªÄ‰πàË¶ÅËøòË¶ÅÁªüËÆ°Â•áÊï∞ÁöÑÊÉÖÂÜµÔºüÁªßÁª≠ÂæÄ‰∏ãÁúãÔºå‰Ω†Â∞±ÊòéÁôΩ‰∫ÜÔºâ</p></blockquote><br><p>ÁÑ∂Âêé‰ª• $N=2$ÔºåÂç≥ <strong>‰∏§‰ΩçÊï∞</strong> ‰∏∫‰æãÔºåÁªüËÆ°‰∏§‰ΩçÊï∞‰∏≠ ÂåÖÂê´ÂÅ∂Êï∞‰∏™ 3 ÁöÑ‰∏™Êï∞ÔºåËÆ∞‰Ωú $f[2]_ÂÅ∂$ ÔºõÁªüËÆ°ÂåÖÂê´Â•áÊï∞‰∏™ 3 ÁöÑ‰∏™Êï∞ÔºåËÆ∞‰Ωú $f[2]_Â•á$ </p><p>ÂØπ‰∫é $f[2]_ÂÅ∂$ÔºåÂèØ‰ª•ÂàÜ‰∏§ÁßçÊÉÖÂÜµËøõË°åÁªüËÆ°Ôºö</p><ul><li><strong>ÂçÅ‰Ωç‰∏∫ 3</strong>ÔºåÂàô ‰∏™‰ΩçÂøÖÈ°ª‰∏∫Â•áÊï∞‰∏™ 3ÔºåÊï∞Èáè‰∏∫ $f[1]_Â•á$</li><li><strong>ÂçÅ‰Ωç‰∏ç‰∏∫ 3</strong>ÔºàÂçÅ‰ΩçÂèØ‰ª•‰∏∫ 1ÔΩû2Ôºå4ÔΩû9Ôºå<strong>ÂÖ± 8 ‰∏™Êï∞</strong>ÔºâÔºåÂàô ‰∏™‰ΩçÂøÖÈ°ª‰∏∫ÂÅ∂Êï∞‰∏™ 3 ÔºåÊï∞Èáè‰∏∫ $f[1]_ÂÅ∂$</li></ul><p>ÊâÄ‰ª• $f[2]_ÂÅ∂ = f[1]_Â•á + 8 * f[1]_ÂÅ∂$ </p><p>ÁÑ∂ÂêéÊàë‰ª¨Â∏¶ÂÖ• $f[1]_Â•á$„ÄÅ$f[1]_ÂÅ∂$ ÔºåÂæó $f[2]_ÂÅ∂ = f[1]_Â•á + 8 * f[1]_ÂÅ∂=1+8*8=64$ ÔºåÂç¥ÂèëÁé∞‰∏éÊ†∑‰æãÁ≠îÊ°à 73 ‰∏çÁõ∏Á≠â„ÄÇ‚ùå</p><br><p>ËøôÊòØ‰ªÄ‰πàÂéüÂõ†ÈÄ†ÊàêÁöÑÂë¢ ?  üßê „ÄÄ</p><p>ÂÆûÈôÖ‰∏äÔºåÂΩìÊàë‰ª¨ÂçïÁã¨Êãø$f[1]_Â•á$„ÄÅ$f[1]_ÂÅ∂$ ËÆ®ËÆ∫Êó∂ÔºåÁî±‰∫é <strong>0 ‰∏ç‰∏∫‰∏Ä‰ΩçÊï∞</strong>ÔºåÊâÄ‰ª• $f[1]_ÂÅ∂$ ‰∏∫ 1ÔΩû2Ôºå4ÔΩû9ÔºåÂÖ± 8 ‰∏™„ÄÇ</p><p>‰ΩÜÊòØÂΩì $N=2$ Êó∂ÔºåÁî±‰∫éÂçÅ‰Ωç‰∏äÊúâ‰∫ÜÊï∞Â≠óÔºåÊâÄ‰ª•Ê≠§Êó∂‰∏™‰Ωç‰∏äÁöÑÊï∞Â≠óÊòØÂèØ‰ª•‰∏∫ 0 ÁöÑÔºåÂõ†Ê≠§Âú®ËÆ°ÁÆó $f[2]_ÂÅ∂$ Êó∂Ôºå$f[1]_ÂÅ∂$ ÂèØ‰ª•ÂèñÂà∞ 0ÔΩû2Ôºå4ÔΩû9ÔºåÂÖ± 9 ‰∏™„ÄÇÔºà<strong>Êú¨Ë¥®</strong>ÊòØ <strong>‰∏Ä‰ΩçÊï∞</strong> Âíå <strong>‰∏™‰Ωç‰∏äÁöÑÊï∞Â≠ó</strong> ÁöÑÂå∫Âà´Ôºâ</p><p>ÂêåÁêÜÔºå$f[1]_Â•á$ ‰πüË¶ÅËÄÉËôë 0 ÁöÑÊÉÖÂÜµÔºå‰ΩÜÊòØÊ≠§Êó∂ 0 Âπ∂‰∏çÊª°Ë∂≥ „ÄåÂ•áÊï∞‰∏™3ÁöÑÊù°‰ª∂„ÄçÔºåÊâÄ‰ª• $f[1]_Â•á$ ‰ªçÁÑ∂‰∏∫ 1ÔºàËøôÈáå $f[1]_Â•á$ ÁöÑÂÄºËôΩÁÑ∂Ê≤°ÊúâÂèòÔºå‰ΩÜÊòØÂêéÈù¢ÁöÑ $f[2]_Â•á„ÄÅf[3]_Â•á$„ÄÅ‚Ä¶„ÄÅ$f[n]_Â•á$ ÁöÑÂÄº‰ºöÂú®Êõ¥Êñ∞ÂêéÂèëÁîüÊîπÂèòÔºâ</p><p>ÊääÊñ∞ÁöÑ $f[1]_ÂÅ∂$„ÄÅ$f[1]_Â•á$ ÁöÑÂÄºÂ∏¶ÂÖ•ÔºåÂæóÂà∞  $f[2]_ÂÅ∂ = f[1]_Â•á + 8 * f[1]_ÂÅ∂=1+8*9=73$ </p><p>Âç≥‰∏∫Ê†∑‰æãÁ≠îÊ°à 73„ÄÇ</p><p>ÂêåÁêÜÔºå$f[2]_Â•á = f[1]_ÂÅ∂ + 8 * f[1]_Â•á=9+8*1=17$</p><blockquote><p>‰∏äÈù¢Ëøô‰∏™ $f[1]_ÂÅ∂$„ÄÅ$f[1]_Â•á$ ‰∏∫‰ªÄ‰πàË¶ÅÊõ¥Êñ∞ÁöÑÁöÑÂéüÂõ†ÔºåÊòØÊú¨È¢òÁöÑÈöæÁÇπÔºå‰πüÊòØÊú¨È¢òÁöÑËß£È¢òÂÖ≥ÈîÆ„ÄÇÁé∞Âú®‰∏çÁêÜËß£‰πüÊ≤°ÂÖ≥Á≥ªÔºåÁªßÁª≠ÂæÄ‰∏ãÈòÖËØªÔºåÂÜçÂàÜÊûê‰∏Ä‰∏™Ê°à‰æãÔºå‰πüËÆ∏‰Ω†Â∞±ÁêÜËß£‰∫Ü„ÄÇ</p></blockquote><br><p>ÁÑ∂Âêé‰ª• $N=3$ÔºåÂç≥ <strong>‰∏â‰ΩçÊï∞</strong> ‰∏∫‰æãÔºå‰πüÊòØÁ±ª‰ººÁöÑËøáÁ®ã„ÄÇ</p><p>ÂØπ‰∫é $f[3]_ÂÅ∂$ÔºåÂèØ‰ª•ÂàÜ‰∏§ÁßçÊÉÖÂÜµÔºö</p><ul><li><strong>Áôæ‰Ωç‰∏∫ 3</strong>ÔºåÂàô ÂçÅ‰ΩçÂíå‰∏™‰ΩçÊÄª‰Ωì ÂøÖÈ°ª‰∏∫ Â•áÊï∞‰∏™ 3ÔºåÊï∞Èáè‰∏∫ $f[2]_Â•á$</li><li><strong>Áôæ‰Ωç‰∏ç‰∏∫ 3</strong>ÔºåÂàô ÂçÅ‰ΩçÂíå‰∏™‰ΩçÊÄª‰Ωì ÂøÖÈ°ª‰∏∫ ÂÅ∂Êï∞‰∏™ 3ÔºåÊï∞Èáè‰∏∫ $f[2]_ÂÅ∂$</li></ul><p>ÊâÄ‰ª• $f[3]_ÂÅ∂ = f[2]_Â•á + 8 * f[2]_ÂÅ∂$</p><p>ÂêåÁêÜÔºå$f[3]_Â•á = f[2]_ÂÅ∂ + 8 * f[2]_Â•á$</p><p>ÂêåÊ†∑ÔºåÁî±‰∫éÂú®ËÆ°ÁÆó $f[2]_Â•á$ „ÄÅ$f[2]_ÂÅ∂$ Êó∂ÔºåÂçÅ‰Ωç‰∏çËÉΩ‰∏∫0ÔºõËÄåÂºïÂÖ•Áôæ‰ΩçÂêéÔºåÂçÅ‰ΩçÂèØ‰ª•‰∏∫ 0ÔºåÊâÄ‰ª•Â¶ÇÊûúË¶ÅËæìÂá∫ÁöÑÊòØ‰∏â‰ΩçÊï∞ÁöÑÁªìÊûúÔºåÂàôÂú®ËÆ°ÁÆó $f[2]_Â•á$ „ÄÅ$f[2]_ÂÅ∂$ Êó∂Ôºå‰πüÈúÄË¶ÅËÄÉËôë 0</p><br><p>Áé∞Âú®Êàë‰ª¨ <strong>ÈáçÊñ∞ËÆ°ÁÆó</strong> Ê±ÇËß£ $f[3]_ÂÅ∂$ „ÄÅ$f[3]_Â•á$ ÊÉÖÂÜµ‰∏ãÁöÑ $f[2]_ÂÅ∂$ „ÄÅ$f[2]_Â•á$ </p><p>Êàë‰ª¨Âú®‰∏ä‰∏ÄÊ≠•‰∏≠ËÆ°ÁÆóÁöÑ $f[2]_ÂÅ∂ = f[1]_Â•á + 8 * f[1]_ÂÅ∂=1+8*9=73$ </p><p>ÂÖ∂‰∏≠ 8 Ëøô‰∏™Á≥ªÊï∞ÔºåÊòØÂçÅ‰Ωç‰∏ç‰∏∫ 3 ÔºåÂèñ 1ÔΩû2Ôºå4ÔΩû9 ÂæóÂà∞ÁöÑÔºàÂΩìÊó∂ÂçÅ‰Ωç‰∏çËÉΩ‰∏∫ 0Ôºâ„ÄÇ‰ΩÜÊòØÁé∞Âú®ÔºåÁî±‰∫éÂçÅ‰ΩçÂèØ‰ª•‰∏∫0 ÔºåÊâÄ‰ª•ÂçÅ‰ΩçÂèØ‰ª•Âèñ 0ÔΩû2Ôºå4ÔΩû9 ÂÖ± 9 ‰∏™Êï∞Â≠óÔºåÊâÄ‰ª•‰∏äÈù¢ÂºèÂ≠ê‰∏≠ÁöÑÁ≥ªÊï∞Â∫îËØ•‰∏∫ 9ÔºåËÄå‰∏çÊòØ 8„ÄÇ</p><p>ÊâÄ‰ª•Êñ∞ÁöÑ $f[2]_ÂÅ∂ = f[1]_Â•á + 9 * f[1]_ÂÅ∂=1+9*9=82$ </p><p>ÂêåÁêÜÔºåÊñ∞ÁöÑ $f[2]_Â•á = f[1]_ÂÅ∂ + 9 * f[1]_Â•á=9+9*1=18$</p><p>Âú®ÂæóÂà∞‰∫ÜÊñ∞ÁöÑ $f[2]_ÂÅ∂$„ÄÅ$f[2]_Â•á$ ÂêéÔºåÂÜçÂ∏¶ÂÖ• $f[3]_ÂÅ∂ = f[2]_Â•á + 8 * f[2]_ÂÅ∂$ÔºåÂ∞±ËÉΩÂæóÂà∞Ê≠£Á°ÆÁöÑ $f[3]_ÂÅ∂$</p><p>üçâ PSÔºö$f[3]_ÂÅ∂ = f[2]_Â•á + 8 * f[2]_ÂÅ∂$ÔºåËøôÈáåÁöÑÁ≥ªÊï∞ 8 Âπ∂‰∏ç‰ºöÂèòÊàê 9ÔºåÂõ†‰∏∫Ê≠§Êó∂Áôæ‰ΩçÊòØÊúÄÈ´ò‰ΩçÔºå‰∏çËÉΩ‰∏∫ 0„ÄÇ</p><p>‰ΩÜÊòØÂêåÁêÜÔºåÂΩì $N=4$ Êó∂ÔºåÁî±‰∫éÊúâÂçÉ‰ΩçÁöÑÂ≠òÂú®ÔºåÁôæ‰ΩçÂ∞±ÂèØ‰ª•‰∏∫ 0 ÔºåÈÇ£‰πàËÆ°ÁÆó$f[3]_ÂÅ∂$ Êó∂ÔºåÂÖ∂Êï∞ÂÄºÂ∞±Â∫îËØ•Êõ¥Êñ∞‰∏∫ $f[3]_ÂÅ∂ = f[2]_Â•á + 9 * f[2]_ÂÅ∂$</p><blockquote><p>‰∏äÈù¢Êé®ÂØºËøáÁ®ã‰∏≠Ôºå $f[2]_ÂÅ∂$„ÄÅ$f[2]_Â•á$ ‰∏∫‰ªÄ‰πàË¶ÅÊõ¥Êñ∞ÔºåÂπ∂‰∏î „ÄåÂÖ¨ÂºèÁ≥ªÊï∞‰ªé 8 Êîπ‰∏∫ 9„ÄçÁöÑÂéüÂõ†Ôºå‰ª•ÂèäËÆ°ÁÆó $f[3]_ÂÅ∂$„ÄÅ$f[3]_Â•á$ Êó∂Ôºå„ÄåÂÖ¨ÂºèÁ≥ªÊï∞‰ªç‰∏∫ 8 „ÄçÁöÑÂéüÂõ†ÔºåÊòØÊú¨È¢òÁöÑÈöæÁÇπÔºå‰πüÊòØÊú¨È¢òÁöÑËß£È¢òÂÖ≥ÈîÆ„ÄÇ‚≠êÔ∏è</p></blockquote><br><p>Ê†πÊçÆ‰∏äÈù¢ÁöÑÊé®ÂØºÔºåÊàë‰ª¨ÂèØ‰ª•ÂæóÂà∞ÊúÄÁªà <strong>n ‰ΩçÊï∞ÁöÑÁªìÊûú</strong>Ôºö</p><ul><li><p>$f[n]_ÂÅ∂ = f[n-1]_Â•á + 8 * f[n-1]_ÂÅ∂$</p></li><li><p>$f[n]_Â•á = f[n-1]_ÂÅ∂ + 8 * f[n-1]_Â•á$</p></li></ul><p>ËÄåÂú®ËÆ°ÁÆó $f[n-1]_Â•á$„ÄÅ$f[n-1]_ÂÅ∂$ Êó∂ÔºåÁî±‰∫éÊ≠§Êó∂ÊúÄÈ´ò‰ΩçÂèØ‰ª•‰∏∫ 0Ôºå‰∏äÈù¢ÈÄíÊé®Âºè‰∏≠Ë°®Á§∫ 1ÔΩû2Ôºå4ÔΩû9ÁöÑÁ≥ªÊï∞„Äå8„ÄçÂ∞±ÂèòÊàê‰∫Ü0ÔΩû2Ôºå4ÔΩû9ÁöÑÁ≥ªÊï∞„Äå9„ÄçÔºåÈÄíÊé®ÂÖ¨Âºè‰∏∫Ôºö</p><ul><li><p>$f[n-1]_ÂÅ∂ = f[n-2]_Â•á + 9 * f[n-2]_ÂÅ∂$</p></li><li><p>$f[n-1]_Â•á = f[n-2]_ÂÅ∂ + 9 * f[n-2]_Â•á$</p></li></ul><p>ÊâÄ‰ª•Âú®‰π¶ÂÜô‰ª£Á†ÅÊó∂Ôºå‰πüÈúÄË¶ÅÂàÜ‰∏∫‰∏§‰∏™Ë°®ËææÂºèÊù•ÂÜô„ÄÇ‚úÖ</p><p>üçâ PS1ÔºöÂú®ÂÆûÈôÖÁºñÁ®ã‰∏≠ÔºåÊàë‰ª¨ÂèØ‰ª•Áî® $f[N][0]$ Êù•Ë°®Á§∫ $f[N]_ÂÅ∂$ ÔºåÁî® $f[N][1]$ Êù•Ë°®Á§∫ $f[N]_Â•á$</p><p>üçâ PS2ÔºöËøôÁßçÈÄíÊé®ÈóÆÈ¢òÁöÑÁ≠îÊ°àÂèØËÉΩÂæàÂ§ßÔºåÁîöËá≥Ë∂ÖÂá∫ <code>long long</code> ÁöÑËåÉÂõ¥ÔºåÊâÄ‰ª•‰∏çË¶ÅÂøòËÆ∞È¢òÂπ≤‰∏≠ÁöÑÂèñÊ®°Ë¶ÅÊ±Ç„ÄÇ</p><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e3</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> K <span class="token operator">=</span> <span class="token number">12345</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//f[n][0]Ë°®Á§∫ n‰ΩçÊï∞ ‰∏≠ÂåÖÂê´ÂÅ∂Êï∞‰∏™3ÁöÑÊÉÖÂÜµ</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>  <span class="token comment">//1~2,4~9 ÂÖ± 8 ‰∏™</span>        f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//3ÔºåÂÖ±1‰∏™</span>        cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>  <span class="token comment">//Êõ¥È´ò‰Ωç‰∏äÊúâÊï∞Â≠óÔºåÈúÄË¶ÅËÄÉËôë0</span>        f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>              <span class="token comment">//ÈÄíÊé®2ÔΩûn-1‰ΩçÊï∞</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//K = 12345</span>            f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">%</span> K<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">*</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">%</span> K<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> K<span class="token punctuation">)</span> <span class="token operator">%</span> K<span class="token punctuation">;</span>            f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">%</span> K<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">*</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">%</span> K<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> K<span class="token punctuation">)</span> <span class="token operator">%</span> K<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment">//ÂçïÁã¨ËÆ°ÁÆón‰ΩçÊï∞</span>        f<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">%</span> K<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">%</span> K<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> K<span class="token punctuation">)</span> <span class="token operator">%</span> K<span class="token punctuation">;</span>        cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="üòë-ÂêêÊßΩÊó∂Èó¥"><a href="#üòë-ÂêêÊßΩÊó∂Èó¥" class="headerlink" title="üòë ÂêêÊßΩÊó∂Èó¥"></a>üòë ÂêêÊßΩÊó∂Èó¥</h3><p>Êëä‰∏ªÊú¨‰∫∫Âú®ÈòÖËØªÂÖ∂‰ªñ‰∏Ä‰∫õÈ¢òËß£Êó∂ÔºåÂèëÁé∞ÊúâÁöÑÈ¢òËß£Âú®ÂàÜÊûêÊó∂ÔºåËÆ§‰∏∫ $f[1][0]=8$Ôºà 1ÔΩû2Ôºå4ÔΩû9ÔºåÂõ†‰∏∫ 0 ‰∏çÁÆó‰∏Ä‰ΩçÊï∞ÔºâÔºå‰ΩÜÊòØÂÆûÈôÖ‰ª£Á†Å‰∏≠ÔºåÂç¥Âá∫Áé∞ $f[1][0] = 9$ ÁöÑÊÉÖÂÜµÔºåÂπ∂‰∏îÊ≤°Êúâ‰∫§‰ª£ÂéüÂõ†„ÄÇËøôÊ†∑ÁöÑÂâçÂêéÁüõÁõæÔºåËÆ©‰∏çÂ∞ëÁúãÈ¢òËß£ÁöÑÂ∞è‰ºô‰º¥‰ª¨ÊÑüÂà∞Âõ∞ÊÉë„ÄÇ</p><p>Êëä‰∏ªËøòÂèëÁé∞ÔºåÊúâÁöÑÈ¢òËß£Â∞±Áõ¥Êé•ËÆ§‰∏∫ $f[1][0]$ Â∞±Â∫îËØ•Á≠â‰∫é 9ÔºåÊää 0 ‰πüÁÆóÊàê‰∫Ü‰∏Ä‰ΩçÊï∞ÔºåËøô‰ªé <strong>Êï∞Â≠¶ÂÆö‰πâÁöÑËßíÂ∫¶</strong> Êù•ÁúãÊòØÈîôËØØÁöÑ„ÄÇ‚ùå ÔºàÊúâÁñëÊÉëÁöÑÂ∞è‰ºô‰º¥ÂèØ‰ª•Êü•ÈòÖ‰ª•‰∏ãÈóÆÈ¢òÔºö0 ÁÆó‰∏çÁÆó‰∏Ä‰ΩçÊï∞ ? ‰∏Ä‰ΩçÊï∞Âíå‰∏™‰ΩçÊï∞Êúâ‰ªÄ‰πàÂå∫Âà´ÔºüÔºâ</p><p>‰ªéÊé®ÂØºËøáÁ®ã‰∏≠ÔºåÊàë‰ª¨ÁúãÂà∞Âè™ÊúâÂú® $N &gt; 1$ Êó∂Ôºå<code>f[1][0]</code> ÊâçÂõ†‰∏∫ËøõÂà∂ÁöÑËßÑÂàôÔºåÂèòÊàê‰∫Ü 9„ÄÇ</p><p>ËØ¥ÊòéÂÜôÂÖ∂‰ªñÈ¢òËß£ÁöÑ‰ΩúËÄÖÂèØËÉΩÊ≤°Êúâ‰ªîÁªÜËÄÉËôëËøôÂÖ∂‰∏≠ÁöÑÂÖ≥Á≥ªÔºåËøô‰πüÊòØÊëä‰∏ªÊí∞ÂÜôÊ≠§ÁØáÈ¢òËß£ÁöÑÂéüÂõ†ÔºåÂ∏åÊúõÊú¨È¢òËß£ËÉΩÁúüÊ≠£Ëß£Á≠î‰∏Ä‰∫õÂ∞è‰ºô‰º¥‰ª¨ÁöÑÂõ∞Èöæ„ÄÇ</p><p>Êëä‰∏ª‰πüÂ∏åÊúõÈòÖËØªÊ≠§ÁØáÈ¢òËß£ÂêéÔºåÁêÜËß£‰∫ÜÊú¨È¢òÁöÑÂ∞è‰ºô‰º¥ÔºåÂú®Êú™Êù•Ëá™Â∑±ÂÜôÂÖ∂‰ªñÈ¢òÁõÆÁöÑÈ¢òËß£Êó∂ÔºåÂ§ö‰∏Ä‰ªΩËÄêÂøÉ‰∏éÁªÜËá¥Ôºå‰∏çË¶ÅËÆ©Êõ¥Â§öÁÅåÊ∞¥„ÄÅÊ≤°ÊúâÂ§™Â§öÊÄùËÄÉÁöÑÈ¢òËß£ÔºåÊ±°Êüì‰∫ÜËøôÁâáÂúüÂ£§ÔºåÊµ™Ë¥πÂÖ∂‰ªñÂ∞è‰ºô‰º¥ÊêúÁ¥¢‰∏éÈòÖËØªÁöÑÊó∂Èó¥„ÄÇ‚òòÔ∏è</p>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÈÄíÊé® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÂµåÂÖ•ÂºèÁ≥ªÁªüÔΩúÊúüÊú´ÊåáÂåó</title>
      <link href="/2023/04/05/qian-ru-shi-xi-tong-qi-mo-zhi-bei/"/>
      <url>/2023/04/05/qian-ru-shi-xi-tong-qi-mo-zhi-bei/</url>
      
        <content type="html"><![CDATA[<h1 id="ÊúüÊú´ÊåáÂåó‚Äî‚ÄîÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàfeat-ChatGPTÔºâ"><a href="#ÊúüÊú´ÊåáÂåó‚Äî‚ÄîÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàfeat-ChatGPTÔºâ" class="headerlink" title="ÊúüÊú´ÊåáÂåó‚Äî‚ÄîÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàfeat. ChatGPTÔºâ"></a>ÊúüÊú´ÊåáÂåó‚Äî‚ÄîÂµåÂÖ•ÂºèÁ≥ªÁªüÔºàfeat. ChatGPTÔºâ</h1><p><img src="http://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-164338.png" alt="ÂµåÂÖ•ÂºèÁ≥ªÁªüÔΩúÊúüÊú´ÊåáÂåó"></p><h2 id="ÂÜôÂú®ÊúÄÂâç-‚úçÔ∏è"><a href="#ÂÜôÂú®ÊúÄÂâç-‚úçÔ∏è" class="headerlink" title="ÂÜôÂú®ÊúÄÂâç ‚úçÔ∏è"></a>ÂÜôÂú®ÊúÄÂâç ‚úçÔ∏è</h2><p>Êú¨ÊñáÊëòÂΩï‰∫Ü‰∏Ä‰∫õ „ÄäÂµåÂÖ•ÂºèÁ≥ªÁªü„ÄãËØæÁ®ãÁöÑ <strong>Â∏∏ËßÅÈÄâÊã©È¢ò</strong>Ôºå‰æõÊúâÈúÄÊ±ÇÁöÑÂêåÂ≠¶‰ª¨Â≠¶‰π†‰ΩøÁî®„ÄÇ</p><p>ÈÉ®ÂàÜÁ≠îÊ°àËß£ÊûêÁî± <strong>ChatGPT</strong> ÁîüÊàêÔºåÊëä‰∏ªËøõË°åÂÆ°Ê†∏„ÄÇ</p><p><strong>ÊïôÊùêÁâàÊú¨</strong>Ôºö„ÄäÂµåÂÖ•ÂºèÁ≥ªÁªüËÆæËÆ°‰∏éÂ∫îÁî®‚Äî‚ÄîÂü∫‰∫é ARM Cortex-A8 Âíå LinuxÔºàÁ¨¨‰∫åÁâàÔºâ„Äã</p><hr><h2 id="È¢òÁõÆÊ¶ÇËßà-üßëüèª‚Äçüíª"><a href="#È¢òÁõÆÊ¶ÇËßà-üßëüèª‚Äçüíª" class="headerlink" title="È¢òÁõÆÊ¶ÇËßà üßëüèª‚Äçüíª"></a>È¢òÁõÆÊ¶ÇËßà üßëüèª‚Äçüíª</h2><p><strong>1„ÄÅ‰∏ãÈù¢ÂÖ≥‰∫éÂìà‰ΩõÁªìÊûÑÊèèËø∞Ê≠£Á°ÆÁöÑÊòØÔºà Ôºâ</strong> </p><p>A„ÄÅÁ®ãÂ∫èÂ≠òÂÇ®Á©∫Èó¥‰∏éÊï∞ÊçÆÂ≠òÂÇ®Á©∫Èó¥ÂàÜÁ¶ª </p><p>B„ÄÅÂ≠òÂÇ®Á©∫Èó¥‰∏é IO Á©∫Èó¥ÂàÜÁ¶ª </p><p>C„ÄÅÁ®ãÂ∫èÂ≠òÂÇ®Á©∫Èó¥‰∏éÊï∞ÊçÆÂ≠òÂÇ®Á©∫Èó¥ÂêàÂπ∂ </p><p>D„ÄÅÂ≠òÂÇ®Á©∫Èó¥‰∏é IO Á©∫Èó¥ÂêàÂπ∂</p><br><p><strong>2„ÄÅÂÖ≥‰∫éARMÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°ÂºèÔºå‰ª•‰∏ãËØ¥Ê≥ïÈîôËØØÁöÑÊòØÔºà Ôºâ</strong></p><p>A„ÄÅÁî®Êà∑Ê®°ÂºèÊòØÁ®ãÂ∫èÊ≠£Â∏∏ÊâßË°åÁöÑÂ∑•‰ΩúÊ®°Âºè </p><p>B„ÄÅÁÆ°ÁêÜÊ®°ÂºèË¥üË¥£Â§ÑÁêÜÂ≠òÂÇ®Âô®ÊïÖÈöúÔºåÂÆûÁé∞ËôöÊãüÂ≠òÂÇ®Âô®ÂíåÂ≠òÂÇ®Âô®ÁöÑ‰øùÊä§ </p><p>C„ÄÅÁ≥ªÁªüÊ®°ÂºèËøêË°åÁâπÊùÉÁ∫ßÁöÑÊìç‰ΩúÁ≥ªÁªü‰ªªÂä° </p><p>D„ÄÅÂΩìÂ§ÑÁêÜÂô®Â§Ñ‰∫éÁî®Êà∑Ê®°ÂºèÊó∂ÔºåÂ¶ÇÊûúÊ≤°ÊúâÂºÇÂ∏∏ÂèëÁîüÊòØ‰∏çËÉΩÊîπÂèòÂ∑•‰ΩúÊ®°ÂºèÁöÑ </p><br><p><strong>3„ÄÅÂ≠òÂÇ®‰∏Ä‰∏™ 32 ‰ΩçÊï∞ 0x2168465 Âà∞ 2000H~2003H Âõõ‰∏™Â≠óËäÇÂçïÂÖÉ‰∏≠ÔºåËã•‰ª•Â∞èÁ´ØÊ®°ÂºèÂ≠òÂÇ®ÔºåÂàô 2000H Â≠òÂÇ®ÂçïÂÖÉÂÜÖÂÆπ‰∏∫Ôºà Ôºâ</strong></p><p>A„ÄÅ 0x21 B„ÄÅ 0x68 C„ÄÅ0x65 D„ÄÅ0x02 </p><br><p><strong>4„ÄÅ‰∏ãÈù¢ÂÖ≥‰∫é ARM Â§ÑÁêÜÂô®ÁöÑ‰ΩìÁ≥ªÁªìÊûÑÊèèËø∞Âì™‰∏Ä‰∏™ÊòØÈîôËØØÁöÑÔºà Ôºâ</strong> </p><p>A„ÄÅ‰∏âÂú∞ÂùÄÊåá‰ª§Ê†ºÂºè </p><p>B„ÄÅÊâÄÊúâÁöÑÊåá‰ª§ÈÉΩÊòØÂçïÂë®ÊúüÊâßË°å </p><p>C„ÄÅÊåá‰ª§ÈïøÂ∫¶Âõ∫ÂÆö </p><p>D„ÄÅLoad-StoreÁªìÊûÑ</p><br><p><strong>5„ÄÅARM Êåá‰ª§ÈõÜÂíå Thumb Êåá‰ª§ÈõÜÂàÜÂà´ÊòØÔºà Ôºâ‰ΩçÁöÑ„ÄÇ</strong> </p><p>A„ÄÅ8 ‰ΩçÔºå16 ‰Ωç </p><p>B„ÄÅ16 ‰ΩçÔºå32 ‰Ωç </p><p>C„ÄÅ16 ‰ΩçÔºå16 ‰Ωç </p><p>D„ÄÅ32 ‰ΩçÔºå16 ‰Ωç </p><br><p><strong>6„ÄÅARM Cortex A8ÁöÑÂ∑•‰ΩúÁä∂ÊÄÅÂåÖÊã¨Ôºà Ôºâ„ÄÇ</strong></p><p>A„ÄÅÊµãËØïÁä∂ÊÄÅÂíåËøêË°åÁä∂ÊÄÅ </p><p>B„ÄÅÊåÇËµ∑Áä∂ÊÄÅÂíåÂ∞±Áª™Áä∂ÊÄÅ </p><p>C„ÄÅÂ∞±Áª™Áä∂ÊÄÅÂíåËøêË°åÁä∂ÊÄÅ </p><p>D„ÄÅARMÁä∂ÊÄÅÂíåThumbÁä∂ÊÄÅ </p><br><p><strong>7„ÄÅÂØπ‰∫é ARM7 ‰∏âÁ∫ßÊµÅÊ∞¥Á∫øÔºåÂΩì‰∏ÄÊù°Êåá‰ª§Ë¢´ËØëÁ†ÅÊó∂Ôºå‰∏ã‰∏ÄÊù°Êåá‰ª§Ê≠£Ë¢´Ôºà Ôºâ</strong></p><p>A„ÄÅÂèñÊåá</p><p>B„ÄÅËØëÁ†Å</p><p>C„ÄÅPCÂÄºÈÄíÂ¢û</p><p>D„ÄÅÊâßË°å</p><br><p><strong>8„ÄÅÂ§ç‰ΩçÂêéÔºåARMÂ§ÑÁêÜÂô®Â§Ñ‰∫éÔºà ÔºâÊ®°Âºè</strong></p><p>A. USER</p><p>B. SVC</p><p>C. SYSTEM</p><p>D. ARM</p><br><p><strong>9„ÄÅÂØÑÂ≠òÂô® R13 Èô§ÂèØÂÅöÈÄöÁî®ÂØÑÂ≠òÂô®Â§ñÔºåËøòÂèØ‰ª•ÂÅöÔºà Ôºâ</strong> </p><p>A„ÄÅÁ®ãÂ∫èËÆ°Êï∞Âô® B„ÄÅÈìæÊé•ÂØÑÂ≠òÂô® C„ÄÅÊ†àÊåáÈíàÂØÑÂ≠òÂô® D„ÄÅÂü∫ÂùÄÂØÑÂ≠òÂô®</p><br><p><strong>10„ÄÅÂú®‰∏ãÂàóARMÂ§ÑÁêÜÂô®ÁöÑÂêÑÁßçÊ®°Âºè‰∏≠ÔºåÂè™ÊúâÔºà ÔºâÊ®°Âºè‰∏çÂèØ‰ª•Ëá™Áî±Âú∞ÊîπÂèòÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°Âºè</strong></p><p>A„ÄÅÁî®Êà∑Ê®°Âºè</p><p>B„ÄÅÁ≥ªÁªüÊ®°Âºè</p><p>C„ÄÅÁªàÊ≠¢Ê®°Âºè</p><p>D„ÄÅ‰∏≠Êñ≠Ê®°Âºè </p><br><p><strong>11„ÄÅ0x17 &amp; 0x1A ÁöÑËøêÁÆóÁªìÊûúÊòØÔºà Ôºâ</strong></p><p>A„ÄÅ<code>0x01</code></p><p>B„ÄÅ<code>0x11</code></p><p>C„ÄÅ<code>0x17</code></p><p>D„ÄÅ<code>0x12</code></p><br><p><strong>12„ÄÅÂØπÂØÑÂ≠òÂô® R1 ÁöÑÂÜÖÂÆπ‰πò‰ª• 4 ÁöÑÊ≠£Á°ÆÊåá‰ª§ÊòØÔºàÔºâ</strong></p><p>A. <code>LSR R1, #2</code></p><p>B. <code>LSL R1, #2</code></p><p>C. <code>MOV R1, R1, LSL #2</code></p><p>D. <code>MOV R1, R1, LSR #2</code></p><br><p><strong>13„ÄÅMOV R1, #0x1000 LDR R0, [R1], #4 ÊâßË°å‰∏äËø∞Êåá‰ª§Â∫èÂàóÂêéÔºåR1 ÂØÑÂ≠òÂô®ÁöÑÂÄºÊòØÔºà Ôºâ</strong></p><p>A. <code>0x1000</code></p><p>B. <code>0x1004</code></p><p>C. <code>0x0FFC</code></p><p>D. <code>0x4</code></p><br><p><strong>14„ÄÅR0=0x05, ÊâßË°åBIC R0,R0,#3ÁöÑËøêÁÆóÂêéÔºåR0ÁªìÊûúÊòØÔºà Ôºâ</strong></p><p>A. <code>0x02</code></p><p>B. <code>0x03</code></p><p>C. <code>0x04</code></p><p>D. <code>0x05</code> </p><br><p><strong>15„ÄÅGET‰º™Êåá‰ª§ÁöÑÂê´‰πâÊòØÔºà Ôºâ</strong></p><p>A. ÂåÖÂê´‰∏Ä‰∏™Â§ñÈÉ®Êñá‰ª∂</p><p>B. ÂÆö‰πâÁ®ãÂ∫èÁöÑÂÖ•Âè£</p><p>C. ÂÆö‰πâ‰∏Ä‰∏™ÂÆè</p><p>D. Â£∞Êòé‰∏Ä‰∏™ÂèòÈáè</p><br><p><strong>16„ÄÅËã• R1 = 2000HÔºåÔºà2000HÔºâ= 0x86ÔºåÔºà2008HÔºâ= 0x39 ÔºåÂàôÊâßË°åÊåá‰ª§ LDR R0Ôºå[R1,#8]! Âêé R0 ÁöÑÂÄº‰∏∫Ôºà Ôºâ</strong></p><p>A. <code>0x2000</code></p><p>B. <code>0x86</code></p><p>C. <code>0x2008</code></p><p>D. <code>0x39</code></p><br><p><strong>17„ÄÅÂ∞Ü ARM Â§ÑÁêÜÂô® R0 ‰∏≠ÁöÑ‰∏Ä‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆÔºåÂ≠òÂÖ•Áî± R1+4 ÊåáÁ§∫ÁöÑÂÜÖÂ≠òÂå∫Âüü,‰∏îÂú∞ÂùÄËá™Âä®Êõ¥Êñ∞,Âàô‰ΩøÁî®ÁöÑ ARM Êåá‰ª§ÊòØÔºà Ôºâ</strong></p><p>A. <code>STR R0,ÔºªR1,#4]</code></p><p>B. <code>STRH R0,ÔºªR1ÔºåÔºÉ4]!</code></p><p>C. <code>STRH R0Ôºå[R1,ÔºÉ4]</code></p><p>D. <code>STRB R0,[R1Ôºå#4]!</code></p><br><hr><h2 id="Á≠îÊ°àËß£Êûê-üöÄ"><a href="#Á≠îÊ°àËß£Êûê-üöÄ" class="headerlink" title="Á≠îÊ°àËß£Êûê üöÄ"></a>Á≠îÊ°àËß£Êûê üöÄ</h2><p><strong>1„ÄÅ‰∏ãÈù¢ÂÖ≥‰∫éÂìà‰ΩõÁªìÊûÑÊèèËø∞Ê≠£Á°ÆÁöÑÊòØÔºà Ôºâ</strong> </p><p>A„ÄÅÁ®ãÂ∫èÂ≠òÂÇ®Á©∫Èó¥‰∏éÊï∞ÊçÆÂ≠òÂÇ®Á©∫Èó¥ÂàÜÁ¶ª</p><p>B„ÄÅÂ≠òÂÇ®Á©∫Èó¥‰∏é IO Á©∫Èó¥ÂàÜÁ¶ª </p><p>C„ÄÅÁ®ãÂ∫èÂ≠òÂÇ®Á©∫Èó¥‰∏éÊï∞ÊçÆÂ≠òÂÇ®Á©∫Èó¥ÂêàÂπ∂ </p><p>D„ÄÅÂ≠òÂÇ®Á©∫Èó¥‰∏é IO Á©∫Èó¥ÂêàÂπ∂</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> A</p><p><strong>„ÄêChatGPT Ëß£Êûê„Äë</strong></p><p><strong>Âìà‰ΩõÁªìÊûÑ</strong> ÊòØÊåáÂú®ËÆ°ÁÆóÊú∫‰ΩìÁ≥ªÁªìÊûÑ‰∏≠ÔºåÂ∞Ü <strong>„ÄåÊåá‰ª§Â≠òÂÇ®Âô®ÔºàÁ®ãÂ∫èÂ≠òÂÇ®Á©∫Èó¥Ôºâ‰∏éÊï∞ÊçÆÂ≠òÂÇ®Âô®„Äç</strong> ÂàÜÁ¶ªÁöÑÁªìÊûÑ„ÄÇÂú®Âìà‰ΩõÁªìÊûÑ‰∏≠ÔºåÊåá‰ª§ÂíåÊï∞ÊçÆÂ≠òÂÇ®Âô®‰ΩøÁî®‰∏çÂêåÁöÑÊÄªÁ∫øÂíå‰∏çÂêåÁöÑÁâ©ÁêÜÂ≠òÂÇ®Âô®ÔºåËøôÁßçÁªìÊûÑÂèØ‰ª•ÊèêÈ´òÊï∞ÊçÆÂ≠òÂèñÁöÑÊïàÁéáÔºåÂõ†‰∏∫Êåá‰ª§ÂíåÊï∞ÊçÆÂèØ‰ª•Âπ∂Ë°åÂú∞ËÆøÈóÆ„ÄÇ</p><p>ËÄåÂ≠òÂÇ®Á©∫Èó¥‰∏éIOÁ©∫Èó¥ÂàÜÁ¶ªÔºåÊòØÊåáÂú®ËÆ°ÁÆóÊú∫‰ΩìÁ≥ªÁªìÊûÑ‰∏≠ÔºåÂ∞ÜÂ≠òÂÇ®Âô®ÂíåIOÊé•Âè£ÂàÜÁ¶ªÁöÑÁªìÊûÑ„ÄÇÂú®ËøôÁßçÁªìÊûÑ‰∏≠ÔºåÂ≠òÂÇ®Âô®ÂíåIOËÆæÂ§á‰ΩøÁî®‰∏çÂêåÁöÑÊÄªÁ∫øÂíå‰∏çÂêåÁöÑÁâ©ÁêÜÊé•Âè£Ôºå‰ª•ÂÆûÁé∞Áõ∏‰∫íÁã¨Á´ãÁöÑËÆøÈóÆ„ÄÇËøôÁßçÁªìÊûÑÂèØ‰ª•ÊèêÈ´òËÆ°ÁÆóÊú∫Á≥ªÁªüÁöÑÁ®≥ÂÆöÊÄßÂíåÂèØÈù†ÊÄßÔºåÂêåÊó∂‰πüÊñπ‰æø‰∫ÜÁ°¨‰ª∂ÂíåËΩØ‰ª∂ÁöÑËÆæËÆ°ÂíåÁª¥Êä§„ÄÇ</p><p>ÂíåÂìà‰ΩõÁªìÊûÑÁ±ª‰ººÔºåÂ≠òÂÇ®Á©∫Èó¥‰∏éIOÁ©∫Èó¥ÂàÜÁ¶ªÁöÑÁªìÊûÑ‰πüÂèØ‰ª•ÊèêÈ´òËÆøÈóÆÊïàÁéáÔºåÂõ†‰∏∫Â≠òÂÇ®Âô®ÂíåIOËÆæÂ§áÂèØ‰ª•Âπ∂Ë°åÂú∞ËÆøÈóÆ„ÄÇ‰ΩÜÊòØËøô‰∏§ËÄÖÁöÑÂàÜÁ¶ªÊñπÂºè‰∏çÂêåÔºåÂìà‰ΩõÁªìÊûÑÂàÜÁ¶ªÁöÑÊòØÊåá‰ª§Â≠òÂÇ®Âô®ÂíåÊï∞ÊçÆÂ≠òÂÇ®Âô®ÔºåËÄåÂ≠òÂÇ®Á©∫Èó¥‰∏éIOÁ©∫Èó¥ÂàÜÁ¶ªÁöÑÁªìÊûÑÂàÜÁ¶ªÁöÑÊòØÂ≠òÂÇ®Âô®ÂíåIOÊé•Âè£„ÄÇ</p><p>Âõ†Ê≠§ÔºåÈÄâÈ°πAÊèèËø∞ÁöÑÊòØÂìà‰ΩõÁªìÊûÑÁöÑÁâπÁÇπÔºåÁ®ãÂ∫èÂ≠òÂÇ®Á©∫Èó¥ÂíåÊï∞ÊçÆÂ≠òÂÇ®Á©∫Èó¥ÊòØÂàÜÁ¶ªÁöÑÔºåÈÄâÈ°πB„ÄÅC„ÄÅDÂùá‰∏çÁ¨¶ÂêàÂìà‰ΩõÁªìÊûÑÁöÑÂÆö‰πâ„ÄÇ</p><br><p><strong>2„ÄÅÂÖ≥‰∫éARMÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°ÂºèÔºå‰ª•‰∏ãËØ¥Ê≥ïÈîôËØØÁöÑÊòØÔºà Ôºâ</strong></p><p>A„ÄÅÁî®Êà∑Ê®°ÂºèÊòØÁ®ãÂ∫èÊ≠£Â∏∏ÊâßË°åÁöÑÂ∑•‰ΩúÊ®°Âºè </p><p>B„ÄÅÁÆ°ÁêÜÊ®°ÂºèË¥üË¥£Â§ÑÁêÜÂ≠òÂÇ®Âô®ÊïÖÈöúÔºåÂÆûÁé∞ËôöÊãüÂ≠òÂÇ®Âô®ÂíåÂ≠òÂÇ®Âô®ÁöÑ‰øùÊä§ </p><p>C„ÄÅÁ≥ªÁªüÊ®°ÂºèËøêË°åÁâπÊùÉÁ∫ßÁöÑÊìç‰ΩúÁ≥ªÁªü‰ªªÂä° </p><p>D„ÄÅÂΩìÂ§ÑÁêÜÂô®Â§Ñ‰∫éÁî®Êà∑Ê®°ÂºèÊó∂ÔºåÂ¶ÇÊûúÊ≤°ÊúâÂºÇÂ∏∏ÂèëÁîüÊòØ‰∏çËÉΩÊîπÂèòÂ∑•‰ΩúÊ®°ÂºèÁöÑ </p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> B</p><p><strong>„ÄêChatGPT Ëß£Êûê„Äë</strong></p><p>B„ÄÅ<strong>ÁÆ°ÁêÜÊ®°Âºè</strong> ‰πüÁß∞‰∏∫ÁâπÊùÉÊ®°ÂºèÔºåÁî®‰∫éÂ§ÑÁêÜÁâπÊÆäÁöÑÁ≥ªÁªüÊìç‰ΩúÔºåÂ¶Ç‰∏≠Êñ≠„ÄÅÂºÇÂ∏∏„ÄÅÊìç‰ΩúÁ≥ªÁªüÁöÑÂÜÖÊ†∏‰ª£Á†ÅÁ≠â„ÄÇ</p><p>‰ΩÜÊòØ <strong>ÁÆ°ÁêÜÊ®°ÂºèÂπ∂‰∏çË¥üË¥£Â§ÑÁêÜÂ≠òÂÇ®Âô®ÊïÖÈöú</strong> ÔºåËøôÊòØÁî± <strong>Êï∞ÊçÆËÆøÈóÆ‰∏≠Ê≠¢Ê®°Âºè</strong> Ë¥üË¥£ÁöÑ„ÄÇ</p><p>A„ÄÅ<strong>Áî®Êà∑Ê®°ÂºèÊòØÁ®ãÂ∫èÊ≠£Â∏∏ÊâßË°åÁöÑÂ∑•‰ΩúÊ®°Âºè</strong>ÔºåARMÂ§ÑÁêÜÂô®Âú®Áî®Êà∑Ê®°Âºè‰∏ãÊâßË°åÂ∫îÁî®Á®ãÂ∫èÔºåËÆøÈóÆÂèóÈôêÁöÑÁ≥ªÁªüËµÑÊ∫êÂíåÂØÑÂ≠òÂô®ÔºåÂπ∂‰∏îÊó†Ê≥ïÁõ¥Êé•ÊâßË°åÁâπÊùÉÊåá‰ª§„ÄÇÂ¶ÇÊûúÂ∫îÁî®Á®ãÂ∫èËØïÂõæÊâßË°åÁâπÊùÉÊåá‰ª§ÊàñËÆøÈóÆÂèóÈôêÁöÑËµÑÊ∫êÔºå‰ºöÂØºËá¥ÂºÇÂ∏∏ÂèëÁîüÔºåÂ§ÑÁêÜÂô®‰ºöÂàáÊç¢Âà∞ÂºÇÂ∏∏Ê®°Âºè„ÄÇ</p><p>C„ÄÅ<strong>Á≥ªÁªüÊ®°Âºè‰πüÊòØ‰∏ÄÁßçÁâπÊùÉÊ®°Âºè</strong>ÔºåÁî®‰∫éËøêË°åÁâπÊùÉÁ∫ßÂà´ÁöÑÊìç‰ΩúÁ≥ªÁªü‰ªªÂä°„ÄÇÂú®Á≥ªÁªüÊ®°Âºè‰∏ãÔºåÊìç‰ΩúÁ≥ªÁªüÂèØ‰ª•ÊâßË°åÁâπÊùÉÊåá‰ª§ÔºåËÆøÈóÆÊâÄÊúâËµÑÊ∫êÂíåÂØÑÂ≠òÂô®ÔºåÂπ∂‰∏îÂèØ‰ª•ËøõË°åÁâπÊùÉÁ∫ßÂà´ÁöÑÊìç‰ΩúÔºåÂ¶Ç‰ªªÂä°ÂàáÊç¢„ÄÅÂÜÖÂ≠òÁÆ°ÁêÜÁ≠â„ÄÇ</p><p>D„ÄÅËØ•ÈÄâÈ°πÁï•Êúâ‰∫âËÆÆÔºå‰ΩÜÊòØÊåâÁÖßÊïôÊùêP27„ÄÅP28ÁöÑÂÜÖÂÆπÔºåÂπ∂‰∏îÂØπÊØî B ÈÄâÈ°πÔºåËØ•ÈÄâÈ°π‰πüÁÆóÊ≠£Á°Æ„ÄÇ</p><br><p><strong>3„ÄÅÂ≠òÂÇ®‰∏Ä‰∏™ 32 ‰ΩçÊï∞ 0x2168465 Âà∞ 2000H~2003H Âõõ‰∏™Â≠óËäÇÂçïÂÖÉ‰∏≠ÔºåËã•‰ª•Â∞èÁ´ØÊ®°ÂºèÂ≠òÂÇ®ÔºåÂàô 2000H Â≠òÂÇ®ÂçïÂÖÉÂÜÖÂÆπ‰∏∫Ôºà Ôºâ</strong></p><p>A„ÄÅ 0x21 B„ÄÅ 0x68 C„ÄÅ0x65 D„ÄÅ0x02</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> C</p><p><strong>„ÄêÊëä‰∏ªËß£Êûê„Äë</strong></p><p>Â§ßÁ´Ø/Â∞èÁ´ØÊ®°ÂºèÊòØÈáçÁÇπÁü•ËØÜÔºåÂèØ‰ª•ÊääÂ∞èÁ´ØÊ®°ÂºèÊåâÁÖß‰∏ãÂõæ‰∏≠„Äå<strong>ÂÄíËΩ¶ÂÖ•Â∫ì</strong>„ÄçÁöÑÊñπÂºèÁêÜËß£ÔºåÂ∞±‰ºöÂÆπÊòìÂæàÂ§ö‰∫Ü„ÄÇ</p><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-164350.png" alt="Â§ßÁ´Ø/Â∞èÁ´ØËÆ∞ÂøÜÊñπÂºè"></p><br><p><strong>4„ÄÅ‰∏ãÈù¢ÂÖ≥‰∫é ARM Â§ÑÁêÜÂô®ÁöÑ‰ΩìÁ≥ªÁªìÊûÑÊèèËø∞Âì™‰∏Ä‰∏™ÊòØÈîôËØØÁöÑÔºà Ôºâ</strong> </p><p>A„ÄÅ‰∏âÂú∞ÂùÄÊåá‰ª§Ê†ºÂºè </p><p>B„ÄÅÊâÄÊúâÁöÑÊåá‰ª§ÈÉΩÊòØÂçïÂë®ÊúüÊâßË°å </p><p>C„ÄÅÊåá‰ª§ÈïøÂ∫¶Âõ∫ÂÆö </p><p>D„ÄÅLoad-StoreÁªìÊûÑ</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> B</p><p><strong>„ÄêChatGPT Ëß£Êûê„Äë</strong></p><p>ARMÂ§ÑÁêÜÂô®ÁöÑÊåá‰ª§ÈõÜ‰ΩìÁ≥ªÁªìÊûÑÔºàISAÔºâÈááÁî®ÁöÑÊòØ RISCÔºàReduced Instruction Set ComputingÔºâÊû∂ÊûÑÔºå‰ª•Á≤æÁÆÄÁöÑÊåá‰ª§ÈõÜ‰∏∫Âü∫Á°ÄÔºåÊîØÊåÅÈ´òÊïàÁöÑÊåá‰ª§ÊµÅÊ∞¥Á∫øÊâßË°å„ÄÇ</p><p>B„ÄÅ<strong>Âπ∂ÈùûÊâÄÊúâÁöÑARMÊåá‰ª§ÈÉΩÊòØÂçïÂë®ÊúüÊâßË°åÁöÑ</strong>„ÄÇÁî±‰∫éÊåá‰ª§ÁöÑÂ§çÊùÇÂ∫¶‰∏çÂêåÔºå‰∏Ä‰∫õÊåá‰ª§ÈúÄË¶ÅÂ§ö‰∏™Êó∂ÈíüÂë®ÊúüÊâçËÉΩÂÆåÊàêÊâßË°å„ÄÇARMÂ§ÑÁêÜÂô®‰∏∫‰∫Ü‰øùÊåÅÈ´òÊïàÊÄßÔºåÈááÁî®‰∫ÜÊµÅÊ∞¥Á∫øÊâßË°åÁöÑÊñπÂºèÔºåÂèØ‰ª•Âú®‰∏Ä‰∏™Êó∂ÈíüÂë®ÊúüÂÜÖÊâßË°åÂ§ö‰∏™Êåá‰ª§ÁöÑ‰∏çÂêåÈò∂ÊÆµ„ÄÇ‰ΩÜÊòØÔºåÂú®Êüê‰∫õÊÉÖÂÜµ‰∏ãÔºåÁî±‰∫éÊï∞ÊçÆÁõ∏ÂÖ≥ÊÄßÊàñÊéßÂà∂Áõ∏ÂÖ≥ÊÄßÁ≠âÂõ†Á¥†ÔºåÂèØËÉΩÈúÄË¶Å‰∏≠Êñ≠ÊµÅÊ∞¥Á∫øÊâßË°åÔºå‰ªéËÄåÂØºËá¥Êåá‰ª§ÊâßË°åÁöÑÂª∂Ëøü„ÄÇ</p><p>A„ÄÅARM Êåá‰ª§ÈõÜÈááÁî®‰∏âÂú∞ÂùÄÊåá‰ª§Ê†ºÂºèÔºåÂç≥‰∏Ä‰∏™Êåá‰ª§ÂèØ‰ª•ÂêåÊó∂Êìç‰Ωú‰∏â‰∏™Êìç‰ΩúÊï∞ÔºàÊ∫êÊìç‰ΩúÊï∞1„ÄÅÊ∫êÊìç‰ΩúÊï∞2 Âíå ÁõÆÁöÑÊìç‰ΩúÊï∞Ôºâ„ÄÇ</p><p>C„ÄÅËØ•ÈÄâÈ°πÁï•Êúâ‰∫âËÆÆÔºåÊåá‰ª§ÈïøÂ∫¶ÊñπÈù¢ÔºåARMÂ§ÑÁêÜÂô®ÈááÁî®ÂèòÈïøÊåá‰ª§ÈïøÂ∫¶ÁöÑÊñπÂºèÔºåÊåá‰ª§ÈïøÂ∫¶ÂèØ‰ª•ÊòØ 2 Â≠óËäÇÊàñ 4 Â≠óËäÇÔºå‰ª•Êª°Ë∂≥‰∏çÂêåÁöÑÂ∫îÁî®ÈúÄÊ±Ç„ÄÇËøôÈáåÁöÑÂõ∫ÂÆöÂèØËÉΩÊòØÊåá Êåá‰ª§ÈïøÂ∫¶Ë¶Å‰πàÊòØ 2 Â≠óËäÇÊàñ 4 Â≠óËäÇ„ÄÇÔºàÊú¨È¢òÂú®‰∏Ä‰∫õÊêúÈ¢òËΩØ‰ª∂‰∏äÁöÑÁ≠îÊ°à‰πüÊòØBÔºâ</p><p>D„ÄÅLoad-Store ÁªìÊûÑÂàôÊòØ ARM Â§ÑÁêÜÂô®ÁöÑ‰∏ÄÁßçÂ∏∏ËßÅÁöÑÊåá‰ª§ÊâßË°åÊñπÂºèÔºåÂç≥Âè™Êúâ Load Âíå Store Êåá‰ª§ÊâçËÉΩËÆøÈóÆÂ≠òÂÇ®Âô®‰∏≠ÁöÑÊï∞ÊçÆÔºåÂÖ∂‰ªñÊåá‰ª§Âè™ËÉΩÈÄöËøáÂØÑÂ≠òÂô®Êù•Êìç‰ΩúÊï∞ÊçÆÔºåËøôÊ†∑ÂèØ‰ª•ÊèêÈ´òÂ≠òÂÇ®Âô®ÁöÑËÆøÈóÆÊïàÁéá„ÄÇ</p><br><p><strong>5„ÄÅARM Êåá‰ª§ÈõÜÂíå Thumb Êåá‰ª§ÈõÜÂàÜÂà´ÊòØÔºà Ôºâ‰ΩçÁöÑ„ÄÇ</strong> </p><p>A„ÄÅ8 ‰ΩçÔºå16 ‰Ωç </p><p>B„ÄÅ16 ‰ΩçÔºå32 ‰Ωç </p><p>C„ÄÅ16 ‰ΩçÔºå16 ‰Ωç </p><p>D„ÄÅ32 ‰ΩçÔºå16 ‰Ωç </p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> D</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><p>ARM Êåá‰ª§ÈõÜÂíå Thumb Êåá‰ª§ÈõÜÂàÜÂà´ÊòØ 32 ‰ΩçÂíå 16 ‰ΩçÁöÑ„ÄÇ</p><p>ARMÊåá‰ª§ÈõÜÂÖ∑ÊúâÊõ¥Âº∫ÁöÑÂäüËÉΩÂíåÁÅµÊ¥ªÊÄßÔºåËÄåThumbÊåá‰ª§ÈõÜÂàôÂÖ∑ÊúâÊõ¥Â∞èÁöÑÊåá‰ª§ÈïøÂ∫¶ÂíåÊõ¥È´òÁöÑ‰ª£Á†ÅÂØÜÂ∫¶ÔºåÂèØ‰ª•Âú®ËäÇÁúÅÂ≠òÂÇ®Á©∫Èó¥ÂíåÊèêÈ´òÊâßË°åÈÄüÂ∫¶‰πãÈó¥ÂÅöÂá∫Âπ≥Ë°°„ÄÇ</p><p>Âú® ARMv7 Êåá‰ª§ÈõÜ‰∏≠ÔºåËøòÊúâ‰∏ÄÁßçÊåá‰ª§ÈõÜÔºåÁß∞‰∏∫ Thumb-2ÔºåÂÆÉÊó¢ÊîØÊåÅ 16 ‰ΩçÊåá‰ª§ÔºåÂèàÊîØÊåÅ 32 ‰ΩçÊåá‰ª§ÔºåÂèØ‰ª•Âú®ÈúÄË¶ÅÊó∂ÁÅµÊ¥ªÂú∞ÂàáÊç¢‰ΩøÁî®„ÄÇ</p><br><p><strong>6„ÄÅARM Cortex A8ÁöÑÂ∑•‰ΩúÁä∂ÊÄÅÂåÖÊã¨Ôºà Ôºâ„ÄÇ</strong></p><p>A„ÄÅÊµãËØïÁä∂ÊÄÅÂíåËøêË°åÁä∂ÊÄÅ </p><p>B„ÄÅÊåÇËµ∑Áä∂ÊÄÅÂíåÂ∞±Áª™Áä∂ÊÄÅ </p><p>C„ÄÅÂ∞±Áª™Áä∂ÊÄÅÂíåËøêË°åÁä∂ÊÄÅ </p><p>D„ÄÅARMÁä∂ÊÄÅÂíåThumbÁä∂ÊÄÅ</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> D</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><p>ARM Cortex A8ÊòØ‰∏ÄÊ¨æÂü∫‰∫é ARMv7 Êû∂ÊûÑÁöÑÂ§ÑÁêÜÂô®Ôºå<strong>ÊîØÊåÅ ARM Áä∂ÊÄÅÂíå Thumb Áä∂ÊÄÅ‰∏§ÁßçÂ∑•‰ΩúÁä∂ÊÄÅ</strong>„ÄÇ</p><p>Âú® ARM Áä∂ÊÄÅ‰∏ãÔºåÂ§ÑÁêÜÂô®ÊâßË°å 32 ‰ΩçÁöÑ ARM Êåá‰ª§ÔºåÊèê‰æõËæÉÈ´òÁöÑÊÄßËÉΩÂíåÂ§çÊùÇÂ∫¶ÔºõÂú® Thumb Áä∂ÊÄÅ‰∏ãÔºåÂ§ÑÁêÜÂô®ÊâßË°å 16 ‰ΩçÁöÑThumbÊåá‰ª§ÔºåÊèê‰æõËæÉÈ´òÁöÑ‰ª£Á†ÅÂØÜÂ∫¶Âíå‰ΩéÂäüËÄó„ÄÇÂ§ÑÁêÜÂô®ÂèØ‰ª•Âú® ARM Áä∂ÊÄÅÂíå Thumb Áä∂ÊÄÅ‰πãÈó¥ÂàáÊç¢Ôºå‰ª•Ê†πÊçÆÂ∫îÁî®Á®ãÂ∫èÁöÑÈúÄÊ±ÇÊù•Âπ≥Ë°°ÊÄßËÉΩÂíåÂäüËÄó„ÄÇ</p><p>Èô§‰∫ÜARMÁä∂ÊÄÅÂíåThumbÁä∂ÊÄÅÔºåÂ§ÑÁêÜÂô®ËøòÊîØÊåÅ‰∏Ä‰∫õÁâπÊÆäÁä∂ÊÄÅÔºåÂ¶Ç Jazelle Áä∂ÊÄÅÂíå ThumbEE Áä∂ÊÄÅ„ÄÇÂú® Jazelle Áä∂ÊÄÅ‰∏ãÔºåÂ§ÑÁêÜÂô®ÊâßË°å Java Â≠óËäÇÁ†ÅÔºåÁî®‰∫éÊîØÊåÅ Java ËôöÊãüÊú∫ÔºàJVMÔºâÂíåJust-In-TimeÔºàJITÔºâÁºñËØëÂô®„ÄÇÂú® ThumbEE Áä∂ÊÄÅ‰∏ãÔºåÂ§ÑÁêÜÂô®ÊâßË°åÂü∫‰∫éThumbÊåá‰ª§ÁöÑÊâßË°åÁéØÂ¢ÉÔºàTEEÔºâÔºåÁî®‰∫éÂÆâÂÖ®Â∫îÁî®Á®ãÂ∫èÁöÑËøêË°å„ÄÇ</p><br><p><strong>7„ÄÅÂØπ‰∫é ARM7 ‰∏âÁ∫ßÊµÅÊ∞¥Á∫øÔºåÂΩì‰∏ÄÊù°Êåá‰ª§Ë¢´ËØëÁ†ÅÊó∂Ôºå‰∏ã‰∏ÄÊù°Êåá‰ª§Ê≠£Ë¢´Ôºà Ôºâ</strong></p><p>A„ÄÅÂèñÊåá</p><p>B„ÄÅËØëÁ†Å</p><p>C„ÄÅPCÂÄºÈÄíÂ¢û</p><p>D„ÄÅÊâßË°å</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> A</p><p><strong>„ÄêÊëä‰∏ªËß£Êûê„Äë</strong></p><p>ÁêÜÊÉ≥ÁöÑ ARM7 ÁöÑÊµÅÊ∞¥Á∫øÁî±‰∏â‰∏™Èò∂ÊÆµÁªÑÊàêÔºåÂàÜÂà´ÊòØÂèñÊåá„ÄÅËØëÁ†ÅÂíåÊâßË°å„ÄÇÂ¶Ç‰∏ãÂõæÊâÄÁ§∫Ôºö</p><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-164351.png" alt="‰∏âÁ∫ßÊµÅÊ∞¥Êåá‰ª§"></p><p>ÂèØ‰ª•ÁúãÂà∞ÔºåÂΩìÂâçÊåá‰ª§Ê≠£Âú®Ë¢´ËØëÁ†ÅÊó∂Ôºå‰∏ã‰∏ÄÊù°Êåá‰ª§Â∑≤ÁªèË¢´ÂèñÊåáÔºåÁ≠âÂæÖËøõÂÖ•ËØëÁ†ÅÈò∂ÊÆµ„ÄÇËøôÊ†∑ÂèØ‰ª•ÂÖÖÂàÜÂà©Áî®Â§ÑÁêÜÂô®ÁöÑÊÄßËÉΩÔºåÊèêÈ´òÊåá‰ª§ÁöÑÊâßË°åÊïàÁéá„ÄÇ</p><br><p><strong>8„ÄÅÂ§ç‰ΩçÂêéÔºåARMÂ§ÑÁêÜÂô®Â§Ñ‰∫éÔºà ÔºâÊ®°Âºè</strong></p><p>A. USER</p><p>B. SVC</p><p>C. SYSTEM</p><p>D. ARM</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> B</p><p><strong>„ÄêÊëä‰∏ªËß£Êûê„Äë</strong></p><p>Ê†πÊçÆÊïôÊùê P27 È°µË°®Ê†ºÔºåÂ§ç‰ΩçÂêéÔºåARM Â§ÑÁêÜÂô®‰Ωç‰∫é <strong>ÁÆ°ÁêÜÊ®°Âºè</strong>ÔºàSupervisorÔºåSVCÔºâ</p><br><p><strong>9„ÄÅÂØÑÂ≠òÂô® R13 Èô§ÂèØÂÅöÈÄöÁî®ÂØÑÂ≠òÂô®Â§ñÔºåËøòÂèØ‰ª•ÂÅöÔºà Ôºâ</strong> </p><p>A„ÄÅÁ®ãÂ∫èËÆ°Êï∞Âô® B„ÄÅÈìæÊé•ÂØÑÂ≠òÂô® C„ÄÅÊ†àÊåáÈíàÂØÑÂ≠òÂô® D„ÄÅÂü∫ÂùÄÂØÑÂ≠òÂô®</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> C</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><p>Âú®ARM‰ΩìÁ≥ªÁªìÊûÑ‰∏≠ÔºåR13 ÊòØÊ†àÊåáÈíàÂØÑÂ≠òÂô®ÔºàStack PointerÔºâÔºåÈÄöÂ∏∏ÁÆÄÁß∞ SP„ÄÇÂÆÉÁöÑ‰ΩúÁî®ÊòØÂ≠òÂÇ®ÂΩìÂâçÊ†àÁöÑÂú∞ÂùÄÔºå‰ª•ÂèäÂú®ÂáΩÊï∞Ë∞ÉÁî®Êó∂ÂàÜÈÖçÂíåÂõûÊî∂Ê†àÁ©∫Èó¥„ÄÇ</p><br><p><strong>10„ÄÅÂú®‰∏ãÂàóARMÂ§ÑÁêÜÂô®ÁöÑÂêÑÁßçÊ®°Âºè‰∏≠ÔºåÂè™ÊúâÔºà ÔºâÊ®°Âºè‰∏çÂèØ‰ª•Ëá™Áî±Âú∞ÊîπÂèòÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°Âºè</strong></p><p>A„ÄÅÁî®Êà∑Ê®°Âºè</p><p>B„ÄÅÁ≥ªÁªüÊ®°Âºè</p><p>C„ÄÅÁªàÊ≠¢Ê®°Âºè</p><p>D„ÄÅ‰∏≠Êñ≠Ê®°Âºè</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> A</p><p><strong>„ÄêÊëä‰∏ªËß£Êûê„Äë</strong></p><p>Ê†πÊçÆÊïôÊùê P27„ÄÅ28 È°µÂÜÖÂÆπÔºåÂè™ÊúâÁî®Êà∑Ê®°ÂºèÔºàUserÔºâÊ®°Âºè‰∏çÂèØ‰ª•Ëá™Áî±Âú∞ÊîπÂèòÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°Âºè„ÄÇ</p><p>Áî®Êà∑Ê®°ÂºèÊòØ ARM Â§ÑÁêÜÂô®ÊúÄÂü∫Êú¨ÁöÑÂ∑•‰ΩúÊ®°ÂºèÔºåÁî®‰∫é‰∏ÄËà¨ÁöÑÂ∫îÁî®Á®ãÂ∫èÁöÑÊâßË°å„ÄÇÂú®Áî®Êà∑Ê®°Âºè‰∏ãÔºåÂ§ÑÁêÜÂô®Âè™ËÉΩËÆøÈóÆÂèó‰øùÊä§ÁöÑÂØÑÂ≠òÂô®ÂíåÂÜÖÂ≠òÂå∫ÂüüÔºå‰∏çËÉΩÊâßË°åÁâπÊùÉÊåá‰ª§Ôºå‰πü‰∏çËÉΩÊîπÂèòÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°Âºè„ÄÇ</p><p>ÂÖ∂‰ªñÊ®°ÂºèÔºåÂ¶ÇÁ≥ªÁªüÊ®°Âºè„ÄÅ‰∏≠Êñ≠Ê®°ÂºèÂíåÁªàÊ≠¢Ê®°ÂºèÔºåÈÉΩÂÖ∑ÊúâÊõ¥È´òÁöÑÁâπÊùÉÁ∫ßÂà´ÔºåÂèØ‰ª•ÊâßË°åÊõ¥Â§öÁöÑÊåá‰ª§ÂíåÊìç‰ΩúÔºåÂπ∂‰∏îÂèØ‰ª•ÊîπÂèòÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°Âºè„ÄÇ‰æãÂ¶ÇÔºåÁ≥ªÁªüÊ®°ÂºèÁî®‰∫éÊìç‰ΩúÁ≥ªÁªüÂÜÖÊ†∏ÁöÑÊâßË°åÔºå‰∏≠Êñ≠Ê®°ÂºèÁî®‰∫éÂìçÂ∫îÂ§ñÈÉ®‰∏≠Êñ≠‰∫ã‰ª∂ÔºåÁªàÊ≠¢Ê®°ÂºèÁî®‰∫éÂ§ÑÁêÜ‰∏•ÈáçÁöÑÈîôËØØÊÉÖÂÜµ„ÄÇ</p><p>Âõ†Ê≠§ÔºåÂè™ÊúâÁî®Êà∑Ê®°Âºè‰∏çÂèØ‰ª•Ëá™Áî±Âú∞ÊîπÂèòÂ§ÑÁêÜÂô®ÁöÑÂ∑•‰ΩúÊ®°Âºè„ÄÇ</p><br><p><strong>11„ÄÅ0x17 &amp; 0x1A ÁöÑËøêÁÆóÁªìÊûúÊòØÔºà Ôºâ</strong></p><p>A„ÄÅ<code>0x01</code></p><p>B„ÄÅ<code>0x11</code></p><p>C„ÄÅ<code>0x17</code></p><p>D„ÄÅ<code>0x12</code></p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> D</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><p>ËøõË°å‰ΩçËøêÁÆóÊó∂ÔºåÊåâ‰Ωç‰∏éËøêÁÆóÁ¨¶Ôºà&amp;Ôºâ‰ºöÂ∞Ü‰∏§‰∏™Êìç‰ΩúÊï∞ÁöÑÂØπÂ∫î‰Ωç‰∏äÁöÑÂÄºËøõË°å„Äå‰∏é„ÄçËøêÁÆóÔºåÂè™ÊúâÂΩì‰∏§‰∏™Êìç‰ΩúÊï∞ÁöÑÂØπÂ∫î‰Ωç‰∏äÁöÑÂÄºÈÉΩ‰∏∫1Êó∂ÔºåÁªìÊûú‰Ωç‰∏äÁöÑÂÄºÊâç‰∏∫1ÔºåÂê¶Âàô‰∏∫0„ÄÇ</p><p>ÂØπ‰∫é <code>0x17 &amp; 0x1A</code>ÔºåÊåâ‰ΩçËøõË°å‰∏éËøêÁÆóÔºö</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">  <span class="token number">0001</span> <span class="token number">0111</span><span class="token operator">&amp;</span> <span class="token number">0001</span> <span class="token number">1010</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">-</span>  <span class="token number">0001</span> <span class="token number">0010</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Âõ†Ê≠§Ôºå<code>0x17 &amp; 0x1A</code> ÁöÑËøêÁÆóÁªìÊûúÊòØ <code>0x12</code>ÔºàÂçÅÂÖ≠ËøõÂà∂ÔºâÔºåÊàñËÄÖ <code>18</code>ÔºàÂçÅËøõÂà∂ÔºâÔºåÊâÄ‰ª•ÈÄâÈ°π D ÊòØÊ≠£Á°ÆÁöÑÁ≠îÊ°à„ÄÇ</p><br><p><strong>12„ÄÅÂØπÂØÑÂ≠òÂô® R1 ÁöÑÂÜÖÂÆπ‰πò‰ª• 4 ÁöÑÊ≠£Á°ÆÊåá‰ª§ÊòØÔºàÔºâ</strong></p><p>A. <code>LSR R1, #2</code></p><p>B. <code>LSL R1, #2</code></p><p>C. <code>MOV R1, R1, LSL #2</code></p><p>D. <code>MOV R1, R1, LSR #2</code></p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> D</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><p>Ë¶ÅÂ∞ÜÂØÑÂ≠òÂô® R1 ‰∏≠ÁöÑÂÜÖÂÆπ‰πò‰ª• 4ÔºåÂèØ‰ª•‰ΩøÁî®ÈÄªËæëÂ∑¶ÁßªÊåá‰ª§ÔºàLSLÔºâÊàñÁßª‰ΩçÂêéÁöÑÁßªÂä®Êåá‰ª§ÔºàMOVÔºâ„ÄÇ</p><p>ÈÄªËæëÂ∑¶ÁßªÊåá‰ª§Â∞ÜÊìç‰ΩúÊï∞ÁöÑ‰∫åËøõÂà∂‰ΩçÂêëÂ∑¶ÁßªÂä®ÊåáÂÆöÁöÑ‰ΩçÊï∞ÔºåÂπ∂Âú®Âè≥‰æßÊèíÂÖ• 0„ÄÇÁßª‰ΩçÂêéÁöÑÁßªÂä®Êåá‰ª§Â∞ÜÊìç‰ΩúÊï∞Â∑¶ÁßªÊåáÂÆöÁöÑ‰ΩçÊï∞ÔºåÂπ∂Â∞ÜÁªìÊûúÁßªÂõûÂà∞ÁõÆÊ†áÂØÑÂ≠òÂô®„ÄÇ</p><p>Âú®ÈÄâÈ°πAÂíåD‰∏≠ÔºåÈÉΩ‰ΩøÁî®‰∫ÜÁßª‰ΩçÊåá‰ª§Ôºå‰ΩÜÊòØÊòØÈÄªËæëÂè≥ÁßªÔºàLSRÔºâÔºåËÄå‰∏çÊòØÈÄªËæëÂ∑¶ÁßªÔºàLSLÔºâÔºåËøôÊ†∑‰∏ç‰ºöÂæóÂà∞Ê≠£Á°ÆÁöÑ‰πòÊ≥ïÁªìÊûú„ÄÇÂõ†Ê≠§ÔºåÈÄâÈ°πAÂíåDÈÉΩÊòØÈîôËØØÁöÑ„ÄÇ</p><p>Âú®ÈÄâÈ°πB‰∏≠Ôºå‰ΩøÁî®‰∫ÜÈÄªËæëÂ∑¶ÁßªÊåá‰ª§Ôºå‰ΩÜÊòØÊ≤°ÊúâÂ∞ÜÁªìÊûúÁßªÂõûÂà∞ÁõÆÊ†áÂØÑÂ≠òÂô®ÔºåÂõ†Ê≠§‰πüÊòØÈîôËØØÁöÑ„ÄÇ</p><p>Ê≠£Á°ÆÁöÑÈÄâÈ°πÊòØCÔºå‰ΩøÁî®Áßª‰ΩçÂêéÁöÑÁßªÂä®Êåá‰ª§Â∞Ü R1 Â∑¶Áßª‰∏§‰ΩçÔºåÁÑ∂ÂêéÂ∞ÜÁªìÊûúÁßªÂõûÂà∞ R1 ‰∏≠Ôºå‰ªéËÄåÂæóÂà∞ R1 ÁöÑÂÜÖÂÆπ‰πò‰ª•4 ÁöÑÁªìÊûú„ÄÇ</p><p>Âõ†Ê≠§ÔºåÊ≠£Á°ÆÁöÑÊåá‰ª§ÊòØÔºö</p><pre class="line-numbers language-arm" data-language="arm"><code class="language-arm">MOV R1, R1, LSL #2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br><p><strong>13„ÄÅÊâßË°å‰∏ãÈù¢Êåá‰ª§Â∫èÂàóÂêéÔºåR1 ÂØÑÂ≠òÂô®ÁöÑÂÄºÊòØÔºà Ôºâ</strong></p><pre class="line-numbers language-arm" data-language="arm"><code class="language-arm">MOV R1,#0x1000LDR R0,[R1],#4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>A. <code>0x1000</code></p><p>B. <code>0x1004</code></p><p>C. <code>0x0FFC</code></p><p>D. <code>0x4</code></p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> B</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><p>ÊâßË°å‰∏äËø∞Êåá‰ª§Â∫èÂàóÂêéÔºåR1ÂØÑÂ≠òÂô®ÁöÑÂÄºÊòØ <code>0x1004</code>„ÄÇ</p><p>ËØ•Êåá‰ª§È¶ñÂÖàÂ∞Ü <code>0x1000</code> ËµãÂÄºÁªô R1ÔºåÁÑ∂Âêé‰ªéÂú∞ÂùÄ R1 ÂºÄÂßãÔºåËØªÂèñ 4 ‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆÂà∞ R0ÔºåÂêåÊó∂ R1 ÂÄºÂä†‰∏ä 4„ÄÇ</p><p>Âõ†Ê≠§ÔºåÊâßË°åÂÆåÊåá‰ª§Â∫èÂàóÂêéÔºåR1 ÁöÑÂÄºÂ∫îËØ•ÊòØ <code>0x1004</code>„ÄÇ</p><br><p><strong>14„ÄÅR0=0x05, ÊâßË°åBIC R0,R0,#3ÁöÑËøêÁÆóÂêéÔºåR0ÁªìÊûúÊòØÔºà Ôºâ</strong></p><p>A. <code>0x02</code></p><p>B. <code>0x03</code></p><p>C. <code>0x04</code></p><p>D. <code>0x05</code> </p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> C</p><p><strong>„ÄêChatGPTËß£Êûê1„Äë</strong></p><p><code>BIC R0, R0, #3</code></p><p>ÂÖ∂‰∏≠Ôºå„ÄåBIC„ÄçÊòØÊåá‰ΩçÊ∏ÖÈõ∂Êåá‰ª§ÔºàBit ClearÔºâÔºåÂ∞ÜÁõÆÊ†áÂØÑÂ≠òÂô®ÁöÑÊåáÂÆö‰ΩçÊ∏ÖÈõ∂„ÄÇ</p><p>R0 ÊòØ ARM Â§ÑÁêÜÂô®ÁöÑÂØÑÂ≠òÂô®ÂêçÔºåËøôÈáåË°®Á§∫ÁõÆÊ†áÂØÑÂ≠òÂô®„ÄÇ</p><p><code>#3</code> ÊòØ‰∏Ä‰∏™Á´ãÂç≥Êï∞ÔºåË°®Á§∫Ë¶ÅÊ∏ÖÈõ∂ÁöÑ‰ΩçÊâÄÂú®ÁöÑ‰ΩçÂÅèÁßªÈáè„ÄÇÂõ†‰∏∫ 3 ÁöÑ‰∫åËøõÂà∂ÊòØ 00000011ÔºåÊâÄ‰ª•Ëøô‰∏™Êåá‰ª§‰ºöÂ∞ÜR0ÁöÑ‰∫åËøõÂà∂Ë°®Á§∫ÁöÑ‰Ωé‰∏§‰ΩçÊ∏ÖÈõ∂„ÄÇ</p><p><strong>„ÄêChatGPTËß£Êûê2„Äë</strong></p><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-164352-20230406000739987.png" alt="ChatGPTËß£Êûê2"></p><br><p><strong>15„ÄÅGET‰º™Êåá‰ª§ÁöÑÂê´‰πâÊòØÔºà Ôºâ</strong></p><p>A. ÂåÖÂê´‰∏Ä‰∏™Â§ñÈÉ®Êñá‰ª∂</p><p>B. ÂÆö‰πâÁ®ãÂ∫èÁöÑÂÖ•Âè£</p><p>C. ÂÆö‰πâ‰∏Ä‰∏™ÂÆè</p><p>D. Â£∞Êòé‰∏Ä‰∏™ÂèòÈáè</p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> A</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><p><strong>GET</strong> ÊòØ ARM Ê±áÁºñËØ≠Ë®Ä‰∏≠ÁöÑ‰∏Ä‰∏™‰º™Êåá‰ª§Ôºå<strong>Áî®‰∫éÂ∞Ü‰∏Ä‰∏™Â§ñÈÉ®Êñá‰ª∂ÁöÑÂÜÖÂÆπÂåÖÂê´Âà∞ÂΩìÂâçÊ±áÁºñÊñá‰ª∂‰∏≠</strong>„ÄÇÂèØ‰ª•Â∞Ü GET Êåá‰ª§Áúã‰ΩúÊòØ„ÄåÂ§çÂà∂Á≤òË¥¥„ÄçÊìç‰ΩúÔºåÂÆÉ‰ºöÂ∞ÜÂ§ñÈÉ®Êñá‰ª∂ÁöÑÂÜÖÂÆπÂ§çÂà∂Âà∞Êåá‰ª§ÊâÄÂú®ÁöÑ‰ΩçÁΩÆÔºå‰ªéËÄå‰ΩøÁ®ãÂ∫èËÉΩÂ§ü‰ΩøÁî®Â§ñÈÉ®Êñá‰ª∂‰∏≠ÁöÑÂèòÈáè„ÄÅÂ∏∏Èáè„ÄÅÂáΩÊï∞Á≠â‰ø°ÊÅØ„ÄÇ</p><br><p><strong>16„ÄÅËã• R1 = 2000HÔºåÔºà2000HÔºâ= 0x86ÔºåÔºà2008HÔºâ= 0x39 ÔºåÂàôÊâßË°åÊåá‰ª§ LDR R0Ôºå[R1,#8]! Âêé R0 ÁöÑÂÄº‰∏∫Ôºà Ôºâ</strong></p><p>A. <code>0x2000</code></p><p>B. <code>0x86</code></p><p>C. <code>0x2008</code></p><p>D. <code>0x39</code></p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> D</p><p><strong>„ÄêÊëä‰∏ªËß£Êûê„Äë</strong></p><p>ËØ•Êåá‰ª§ÁöÑÂê´‰πâÊòØÔºöÂ∞ÜÂú∞ÂùÄ‰∏∫ <code>R1+8</code> ÁöÑÂÜÖÂ≠òÊï∞ÊçÆËØªÂèñÂà∞ R0 ÂØÑÂ≠òÂô®‰∏≠ÔºåÂπ∂Â∞ÜR1ÁöÑÂÄºÂä†‰∏ä 8Ôºà! Ë°®Á§∫Ëá™Âä®‰øÆÊîπÂü∫Âú∞ÂùÄR1ÁöÑÂÄºÔºâ„ÄÇ</p><p>Âú®Êú¨È¢ò‰∏≠ÔºåR1 = 2000HÔºåÔºà2008HÔºâ= 0x39ÔºåÊâÄ‰ª•Â∞Ü 0x39 ËØªÂÖ• R0 ‰∏≠ÔºåÂêåÊó∂ R1 ÁöÑÂÄºÂèò‰∏∫ <code>2008H</code>„ÄÇÂõ†Ê≠§ÔºåR0 ÁöÑÂÄº‰∏∫ <code>0x39</code>„ÄÇ</p><br><p><strong>17„ÄÅÂ∞Ü ARM Â§ÑÁêÜÂô® R0 ‰∏≠ÁöÑ‰∏Ä‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆÔºåÂ≠òÂÖ•Áî± R1+4 ÊåáÁ§∫ÁöÑÂÜÖÂ≠òÂå∫Âüü,‰∏îÂú∞ÂùÄËá™Âä®Êõ¥Êñ∞,Âàô‰ΩøÁî®ÁöÑ ARM Êåá‰ª§ÊòØÔºà Ôºâ</strong></p><p>A. <code>STR R0,ÔºªR1,#4]</code></p><p>B. <code>STRH R0,ÔºªR1ÔºåÔºÉ4]!</code></p><p>C. <code>STRH R0Ôºå[R1,ÔºÉ4]</code></p><p>D. <code>STRB R0,[R1Ôºå#4]!</code></p><p><strong>„ÄêÂèÇËÄÉÁ≠îÊ°à„Äë</strong> D</p><p><strong>„ÄêChatGPTËß£Êûê„Äë</strong></p><ul><li><p><code>STRB</code> Êåá‰ª§ÊòØÂ∞Ü R0 ÂØÑÂ≠òÂô®‰∏≠ÁöÑ <strong>‰∏Ä‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆ</strong> Â≠òÂÇ®Âà∞Â≠òÂÇ®Âô®‰∏≠ÔºåÂ≠òÂÇ®Âô®ÁöÑÂú∞ÂùÄ‰∏∫ R1+4ÔºåÂç≥ [ R1, #4]„ÄÇËÄå‰∏îÂú®Â≠òÂÇ®Êï∞ÊçÆÂêéÔºåR1Ëá™Âä®Âä†‰∏ä1ÔºåÊåáÂêë‰∏ã‰∏Ä‰∏™Â≠óËäÇ„ÄÇÂõ†Ê≠§ÔºåSTRBÊåá‰ª§ÊòØÂ∞Ü‰∏Ä‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆ‰ªéÂØÑÂ≠òÂô®Â≠òÂÇ®Âà∞ÂÜÖÂ≠ò‰∏≠ÔºåÂπ∂‰∏îËá™Âä®Êõ¥Êñ∞ÁõÆÊ†áÂú∞ÂùÄ„ÄÇ</p></li><li><p><code>STR</code>Êåá‰ª§ÊòØÂ∞Ü R0 ÂØÑÂ≠òÂô®‰∏≠ÁöÑ <strong>‰∏Ä‰∏™Â≠óÁöÑÊï∞ÊçÆ</strong> Â≠òÂÇ®Âà∞Â≠òÂÇ®Âô®‰∏≠ÔºåÂ≠òÂÇ®Âô®ÁöÑÂú∞ÂùÄ‰∏∫R1+4ÔºåÂç≥[ R1, #4]„ÄÇÂíåSTRBÊåá‰ª§‰∏çÂêåÔºåSTR Êåá‰ª§Â≠òÂÇ®ÁöÑÊòØ‰∏Ä‰∏™Â≠óÁöÑÊï∞ÊçÆÔºåËÄå‰∏çÊòØ‰∏Ä‰∏™Â≠óËäÇÔºåÂõ†Ê≠§Â≠òÂÇ®Âêé R1 Ëá™Âä®Âä†‰∏ä 4ÔºåÊåáÂêë‰∏ã‰∏Ä‰∏™Â≠óÁöÑÂú∞ÂùÄ„ÄÇ</p></li><li><p><code>STRH</code> Êåá‰ª§ÊòØÂ∞ÜR0ÂØÑÂ≠òÂô®‰∏≠ÁöÑ <strong>‰∏Ä‰∏™ÂçäÂ≠óÁöÑÊï∞ÊçÆ</strong> Â≠òÂÇ®Âà∞Â≠òÂÇ®Âô®‰∏≠ÔºåÂ≠òÂÇ®Âô®ÁöÑÂú∞ÂùÄ‰∏∫ R1+4ÔºåÂç≥[ R1, #4]„ÄÇÂíåSTRBÊåá‰ª§Á±ª‰ººÔºåSTRHÊåá‰ª§Â≠òÂÇ®ÁöÑÊòØ‰∏Ä‰∏™ÂçäÂ≠óÁöÑÊï∞ÊçÆÔºåÂ≠òÂÇ®Âêé R1 Ëá™Âä®Âä†‰∏ä 2ÔºåÊåáÂêë‰∏ã‰∏Ä‰∏™ÂçäÂ≠óÁöÑÂú∞ÂùÄ„ÄÇ</p></li></ul><p><strong>Â≠ó</strong> ‰∏é <strong>Â≠óËäÇ</strong> Êç¢ÁÆóÂÖ¨ÂºèÔºö1 ‰∏™Â≠ó = 2 ‰∏™ÂçäÂ≠ó = 4 ‰∏™Â≠óËäÇ</p><p>Êú¨È¢òÈúÄË¶ÅÂ≠òÂÇ®‰∏Ä‰∏™Â≠óËäÇÁöÑÊï∞ÊçÆÔºåÊâÄ‰ª•ÈÄâÊã© D</p><br>]]></content>
      
      
      <categories>
          
          <category> ÂµåÂÖ•ÂºèÁ≥ªÁªü </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ÂµåÂÖ•ÂºèÁ≥ªÁªü </tag>
            
            <tag> ÊúüÊú´ÊåáÂåó </tag>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊòÜËô´ÁπÅÊÆñ</title>
      <link href="/2023/04/04/xin-xi-ao-sai-ti-jie-kun-chong-fan-zhi/"/>
      <url>/2023/04/04/xin-xi-ao-sai-ti-jie-kun-chong-fan-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊòÜËô´ÁπÅÊÆñ"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊòÜËô´ÁπÅÊÆñ" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊòÜËô´ÁπÅÊÆñ"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÊòÜËô´ÁπÅÊÆñ</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>ÁßëÂ≠¶ÂÆ∂Âú®ÁÉ≠Â∏¶Ê£ÆÊûó‰∏≠ÂèëÁé∞‰∫Ü‰∏ÄÁßçÁâπÊÆäÁöÑÊòÜËô´ÔºåËøôÁßçÊòÜËô´ÁöÑÁπÅÊÆñËÉΩÂäõÂæàÂº∫„ÄÇÊØèÂØπÊàêËô´Ëøá $X$ ‰∏™ÊúàÂêéÂºÄÂßã‰∫ßÂçµÔºåÊØèÊúà‰∫ß $Y$ ÂØπÂçµÔºåÊØèÂØπÂçµË¶ÅËøá‰∏§‰∏™ÊúàÈïøÊàêÊàêËô´„ÄÇ</p><p>ÂÅáËÆæÊØè‰∏™ÊàêËô´‰∏çÊ≠ªÔºåÁ¨¨‰∏Ä‰∏™ÊúàÂè™Êúâ‰∏ÄÂØπÊàêËô´Ôºå‰∏îÂçµÈïøÊàêÊàêËô´ÂêéÁöÑÁ¨¨‰∏Ä‰∏™Êúà‰∏ç‰∫ßÂçµ( Ëøá $X$ ‰∏™Êúà‰∫ßÂçµ)ÔºåÈóÆËøá $Z$ ‰∏™Êúà‰ª•ÂêéÔºåÂÖ±ÊúâÊàêËô´Â§öÂ∞ëÂØπÔºü</p><p>$0 \le X \le 20,1 \le Y \le 20,X \le Z \le 50$</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>$X,Y,Z$ ÁöÑÊï∞ÂÄº„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>Ëøá $Z$ ‰∏™Êúà‰ª•ÂêéÔºåÂÖ±ÊúâÊàêËô´ÂØπÊï∞„ÄÇ</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">1</span> <span class="token number">2</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">37</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1204">http://ybt.ssoier.cn:8088/problem_show.php?pid=1204</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p><strong>ÊòÜËô´ÁπÅÊÆñ</strong> ÈóÆÈ¢òÊòØ ÁÆóÊ≥ïÂàùÂ≠¶ËÄÖ Âú®Â≠¶‰π† <strong>ÈÄíÊé®‰∏ìÈ¢ò</strong> Êó∂ÔºåÂøÖÂÆöÈÅáÂà∞ÁöÑÈóÆÈ¢ò‰πã‰∏Ä„ÄÇÊ≠§È¢òÂØπ‰∫éÂàùÂ≠¶ËÄÖÊù•ËØ¥ <strong>ÈöæÂ∫¶ËæÉÈ´ò</strong>ÔºåÂæàÂÆπÊòìÂá∫Áé∞È¢òÁõÆÊé®ÁùÄÊé®ÁùÄÔºåÂ∞±ÊääÂêÑÁßçÂèòÈáè„ÄÅ‰∏ãÊ†áÊêûÊ∑∑ÁöÑÊÉÖÂÜµ„ÄÇüòµ‚Äçüí´</p><p>Âçö‰∏ªÂú®ÈòÖËØªÂÖ∂‰ªñ‰∫∫ÂÜôÁöÑÈ¢òËß£Êó∂ÔºåË¶Å‰πàËß£ÈáäÁöÑÈùûÂ∏∏ÊΩ¶ËçâÔºåÈöæ‰ª•ÁêÜËß£ÔºõË¶Å‰πàÂπ≤ËÑÜÂè™Êúâ‰ª£Á†ÅÔºåÊ≤°ÊúâËß£Èáä„ÄÇüí¶</p><p>ÊâÄ‰ª•Âú®ÂØπÊú¨È¢òËøõË°å‰∫Ü‰∏ÄÂÆöÁöÑÁ†îÁ©∂ÂêéÔºåÂçö‰∏ªÊí∞ÂÜô‰∫ÜÊ≠§ÁØáÈ¢òËß£ÔºåÂ∏åÊúõËÉΩÂú®Êú™Êù•Â∏ÆÂä©Êõ¥Â§öÁöÑÂ∞è‰ºô‰º¥ÂºÑÊáÇÊú¨È¢òÁöÑÈÄíÊé®ÂÖ≥Á≥ªÔºåÊúÄÂêéËÉΩÂ§üÊâãÊíïÊú¨È¢ò‰ª£Á†Å„ÄÇüßëüèª‚Äçüíª</p><p>Âú®Âçö‰∏ªÁúãÊù•Êú¨È¢òÁöÑÈöæÁÇπ‰∏ªË¶ÅÊúâ 3 ‰∏™Ôºö</p><ul><li>Á¨¨‰∏ÄÔºå‰∏çÁü•ÈÅìÂ¶Ç‰ΩïË°®Á§∫„ÄåËøá‰∫Ü z ‰∏™Êúà„Äç</li><li>Á¨¨‰∫åÔºå‰∏çÁü•ÈÅìÂ¶Ç‰ΩïÂæóÂà∞ÈÄíÊé®ÊñπÁ®ã</li><li>Á¨¨‰∏âÔºåÊé®Âá∫Êù•ÈÉ®ÂàÜÈÄíÊé®ÊñπÁ®ãÔºåÂç¥‰∏çÁü•ÈÅìÂ¶Ç‰ΩïËÆæÂÆöËæπÁïåÊù°‰ª∂Ôºå‰π¶ÂÜô‰ª£Á†Å</li></ul><p>È¶ñÂÖàËß£ÂÜ≥ <strong>Á¨¨‰∏Ä‰∏™ÈóÆÈ¢ò</strong>ÔºåËØ•Â¶Ç‰ΩïË°®Á§∫„Äå<strong>Ëøá‰∫Ü z ‰∏™Êúà</strong>„ÄçÔºüËÉΩÂê¶Áî®ÂàóË°®ÁöÑÊñπÂºèÔºåÊù•Ê∏ÖÊô∞ÁöÑË°®ÂºèÊØè‰∏Ä‰∏™ÊúàÁöÑÊï∞ÊçÆ Ôºü</p><p>ËØ•ÈóÆÈ¢òÁöÑÂÖ≥ÈîÆÂú®‰∫éÔºåÊàë‰ª¨Â¶Ç‰ΩïË°®Á§∫ÂàöÂºÄÂßãÁöÑÁ¨¨‰∏Ä‰∏™ÊúàÔºüÊòØ‰ªé 0 ÂºÄÂßãÔºåËøòÊòØ 1 ÂºÄÂßã ? ÂÆûÈôÖ‰∏äÔºå‰∏§ÁßçÊñπÂºèÈÉΩÂèØ‰ª•ÁöÑÔºåÂàóË°®ÁöÑÊñπÂºèÂ¶Ç‰∏ãÔºö</p><ul><li>‰ªé 0 ÂºÄÂßãÁöÑÊúà‰ªΩ‰∏ãÊ†áÔºåÊ≠§Êó∂„ÄåËøá‰∫Ü z ‰∏™Êúà„ÄçÔºåÂ∞±ÂØπÂ∫î z ÊúàÔºàÂ¶ÇËøá‰∫Ü 1 ‰∏™ÊúàÔºåÂ∞±ÊòØ‰ªé 0Êúà ‚Üí 1 ÊúàÔºâ</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th><th align="center">‚Ä¶</th><th align="center">z Êúà</th></tr></thead><tbody><tr><td align="center"></td><td align="center">ÂàùÂßãÊï∞ÊçÆ</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><ul><li>‰ªé 1 ÂºÄÂßãÁöÑÊúà‰ªΩ‰∏ãÊ†áÔºåÊ≠§Êó∂„ÄåËøá‰∫Ü z ‰∏™Êúà„ÄçÔºåÂØπÂ∫îÁöÑÊòØ z + 1 ÊúàÔºàÂ¶ÇËøá‰∫Ü 1 ‰∏™ÊúàÔºåÂ∞±ÊòØ‰ªé 1Êúà ‚Üí 2 ÊúàÔºâ</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th><th align="center">5Êúà</th><th align="center">‚Ä¶</th><th align="center">z + 1Êúà</th></tr></thead><tbody><tr><td align="center"></td><td align="center">ÂàùÂßãÊï∞ÊçÆ</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>Âú®Êú¨Êñá‰∏≠ÔºåÂçö‰∏ªÈÄâÊã©‰ªéÁ¨¨‰∏ÄÁßçÊñπÂºèÔºåÂç≥Êúà‰ªΩ‰∏ãÊ†á‰ªé 0 ÂºÄÂßãÔºàÂéüÂõ†‰ºöÂú®‰∏ãÊñáÂàÜÊûêÂÆåÈóÆÈ¢ò‰∫å„ÄÅ‰∏âÂêéÈòêËø∞Ôºâ</p><br><p>ÂØπ‰∫é <strong>Á¨¨‰∫å‰∏™ÈóÆÈ¢ò</strong>ÔºåÊàë‰ª¨ÈúÄË¶ÅÈÄöËøá <strong>Ê®°Êãü</strong> ÁöÑÊñπÂºèÊù•Êé®Âá∫ÈÄíÊé®ÊñπÁ®ã„ÄÇ</p><p>È¶ñÂÖàÔºå‰ª• $x = 1, y = 2, z = 4$ ÁöÑÊÉÖÂÜµËøõË°åÊ®°ÊãüÔºåÊ≠§Êù°‰ª∂Ë°®Á§∫ÁöÑÊòØÔºö</p><ul><li>Ëøá $x = 1$ ‰∏™ÊúàÔºåÊàêËô´ÂºÄÂßã‰∫ßÂçµ</li><li>ÊØèÂØπÊàêËô´ÊØèÊ¨°‰∫ß $y = 2$ ÂØπÂçµ</li><li>Ë¶ÅÊ±ÇËøá $z = 4$ ‰∏™ÊúàÂêéÔºåÊàêËô´ÁöÑÊï∞Èáè</li></ul><p>Âõ†‰∏∫Ë¶ÅÊ±ÇËß£ÊàêËô´Êï∞ÈáèÔºåÊâÄ‰ª•ÊØîËæÉÂÆπÊòìÊÉ≥Âà∞ÁöÑÊñπÂºèÊòØ <strong>ÂàõÂª∫‰∏§‰∏™Êï∞ÁªÑ</strong>Ôºå‰∏Ä‰∏™Â≠òÂÇ®ÊØè‰∏™ÊúàÁöÑÊàêËô´ÊÄªÊï∞ÈáèÔºàÊï∞ÁªÑ <code>c</code> Ë°®Á§∫ÔºâÔºåÂè¶‰∏Ä‰∏™Â≠òÂÇ®ÊØè‰∏™ÊúàÂçµÁöÑÊÄªÊï∞ÈáèÔºàÊï∞ÁªÑ <code>r</code> Ë°®Á§∫Ôºâ„ÄÇ</p><p><strong>Âú®Á¨¨ 0 ‰∏™Êúà</strong> Êó∂ÔºåÊúâ 1 ÂØπÊàêËô´Ôºå0 ÂØπÂçµÔºåÊâÄ‰ª• $c[0] = 1Ôºår[0] = 0$</p><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊÄªÊï∞Èáè r[i]</td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p><strong>Ëøá‰∫Ü 1 ‰∏™ÊúàÂêé</strong>Ôºà1ÊúàÔºâÔºåÊàêËô´ÂºÄÂßã‰∫ßÂçµÔºåÊâÄ‰ª•Âú® 1 Êúà‰ªΩÊó∂ÔºåÂçµÁöÑÊï∞Èáè‰∏∫ 2ÔºåÊàêËô´Êï∞Èáè‰ªç‰∏∫ 1Ôºå$c[1] = 1Ôºår[1] = 2$</p><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊÄªÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p><strong>Ëøá‰∫Ü 2 ‰∏™ÊúàÂêé</strong>Ôºà2ÊúàÔºâÔºåÊ≠§Êó∂ 1 Êúà‰∫ßÁöÑÂçµÊ≤°ÊúâÈïøÂ§ß‰∏∫ÊàêËô´ÔºåÊâÄ‰ª•ÊàêËô´Êï∞Èáè‰ªç‰∏∫ 1ÔºåÂπ∂‰∏îÂú®Ëøô‰∏™ÊúàÔºåÊàêËô´Âèà‰∫ßÁîü‰∫Ü y = 2 ÂØπÂçµÔºåÂàôÊ≠§Êó∂ÂÖ±Êúâ 4 ÂØπÂçµÔºà2 ÂØπÊñ∞‰∫ßÁîüÁöÑÂçµÔºå2 ÂØπ‰∏∫ 1 Êúà‰ªΩ‰ªÖÊàêÈïø‰∫Ü 1 ‰∏™ÊúàÁöÑÂçµÔºâÔºå$c[2] = 1,r[2] = 4$</p><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊÄªÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">2</td><td align="center">4</td><td align="center"></td><td align="center"></td></tr></tbody></table><p><strong>Ëøá‰∫Ü 3 ‰∏™ÊúàÂêé</strong>Ôºà3ÊúàÔºâÔºåÊ≠§Êó∂ 1 ÊúàÁöÑÂçµÊàêÈïø‰∏∫‰∫ÜÊàêËô´Ôºå<strong>ÊàêËô´Êï∞ÈáèÂ¢ûÂä†</strong>ÔºåÊâÄ‰ª• $c[3] = c[2] + r[3 - 2] = 3$ÔºõÂØπ‰∫éÂçµÊù•ËØ¥ÔºåÊ≠§Êó∂Êúâ 2 Âè™ÂçµÂèòÊàêÊàêËô´Ôºå‰ΩÜÊòØÂéüÂÖàÁöÑ 1 ÂØπÊàêËô´Âèà‰∫ßÁîü‰∫Ü 2 Âè™ÂçµÔºåÊâÄ‰ª• $r[3] = r[2] - 2 + 2 = 4$</p><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center">3</td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊÄªÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">2</td><td align="center">4</td><td align="center">4</td><td align="center"></td></tr></tbody></table><p>‰∫éÊòØÊàë‰ª¨ÂÆπÊòìÊÄªÁªìÂæóÂà∞ÔºåÊàêËô´Êï∞Èáè $c[i] = c[i - 1] + r[i -2]$ Ôºà‰ΩÜÊòØËøôÂÖ∂ÂÆûÊòØÊúâÈóÆÈ¢òÁöÑ ‚ùåÔºâ</p><p>Êàë‰ª¨ÁªßÁª≠Êù•Áúã <strong>4 Êúà‰ªΩ</strong>ÔºåÂ¶ÇÊûúÊåâÁÖß‰∏äÈù¢ËøôÁßçÊñπÂºèÔºåÈÇ£‰πà $c[4] = c[3] + r[4-2] = 8$„ÄÇ</p><p>‰ΩÜÊòØ‰ªîÁªÜÊÄùËÄÉÔºå2 Êúà‰ªΩÁöÑ 4 ÂØπÂçµÔºåÂ∑≤ÁªèÊúâ 2 ÂØπÂú® 3 Êúà‰ªΩÂèòÊàê‰∫ÜÊàêËô´ÔºåÂÆûÈôÖ‰∏äÂè™Êúâ 2 ÂØπÂçµÂú® 4 Êúà‰ªΩÂèòÊàê‰∫ÜÊàêËô´ÔºåÊ≠£Á°ÆÁöÑ $c[4] = c[3] + 2 = 6$ ÊâçÂØπ„ÄÇü§î</p><p>ÁªèËøáÊÄùËÄÉÔºåÊàë‰ª¨ÂèëÁé∞‰∏äÈù¢ÂÖ¨ÂºèÈáåÁöÑ <code>r[i-2]</code>Ôºå<strong>‰∏çÂ∫îËØ•ËÆæÊàê 2 ‰∏™ÊúàÂâçÂçµÁöÑÊÄªÊï∞Èáè</strong>ÔºåÂõ†‰∏∫Â¶ÇÊûúÊòØÊÄªÊï∞ÈáèÔºåÈÇ£‰πàËøô‰∫õÂçµ‰∏≠Êúâ‰∏ÄÈÉ®ÂàÜÊù•Ëá™‰∫é‰∏ä‰∏™ÊúàÔºåËøôÈÉ®ÂàÜÂçµÂú®‰∏ã‰∏Ä‰∏™ÊúàÂ∞±‰ºöÂèòÊàêÊàêËô´ÔºåËÄå‰∏çÊòØÁ≠â 2 ‰∏™ÊúàÂêéÊâçÂèòÊàêÊàêËô´„ÄÇüí°</p><p>ÊâÄ‰ª•ÔºåÊõ¥Âä†ÂêàÁêÜÁöÑË°®Á§∫ÊñπÂºèÔºåÂ∫îËØ•ÊòØÂ∞Ü„Äå<strong>r Êï∞ÁªÑËÆæÁΩÆ‰∏∫ÊØè‰∏™ÊúàÊñ∞Â¢ûÁöÑÂçµÁöÑÊï∞Èáè</strong>„Äç„ÄÇÂç≥ÊØè‰∏™ÊúàÁöÑÊàêËô´ÊÄªÊï∞Èáè <code>c[i]</code>ÔºåÂ∫îËØ•Á≠â‰∫é ‰∏ä‰∏™ÊúàÊàêËô´ÁöÑÊÄªÊï∞Èáè <code>c[i-1]</code> + ‰∏ä 2 ‰∏™ÊúàÊñ∞Â¢ûÁöÑÂçµÁöÑÊï∞Èáè <code>r[i-2]</code>ÔºàÂÖ∂‰ªñÊó∂Èó¥‰∫ßÁîüÁöÑÂçµÂíå <code>c[i]</code> ÁöÑËÆ°ÁÆóÂπ∂Ê≤°ÊúâÂÖ≥Á≥ªÔºâ‚úÖ </p><p>Ëøô‰πüÊòØ‰∏∫‰ªÄ‰πàÂæàÂ§öÈ¢òËß£‰∏≠ÔºåÈÄâÊã©ËÆæÁΩÆ <strong>c‰∏∫ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè</strong>Ôºå‰ΩÜÊòØ <strong>r ‰∏∫ÊØèÊúà<u><em>Êñ∞Â¢û</em></u> ÁöÑÂçµÁöÑÊï∞Èáè</strong>ÁöÑÂéüÂõ†„ÄÇ</p><p>ËøôÊ†∑ËÆæÂÆöÂèòÈáèÂê´‰πâÔºåÂ∞±ËÉΩÂ§üÂæóÂà∞Ê≠£Á°ÆÁöÑÈÄíÊé®ÊñπÁ®ãÔºö<br>$$<br>c[i] = c[i - 1] + r[i - 2] ; r[i] = c[i -x] * y<br>$$<br>ÈÄíÊé®ÊñπÁ®ãÂê´‰πâ‰∏∫ÔºàÂú® x ‰∏™Êúà‰πãÂêéÔºâÔºö</p><p>ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè $c[i]$ = ‰∏ä‰∏Ä‰∏™ÊúàÊàêËô´ÊÄªÊï∞Èáè $c[i -1]$ + ‰∏ä 2 ‰∏™ÊúàÊñ∞Â¢ûÁöÑÂçµÁöÑÊï∞Èáè $r[i - 2]$</p><p>ÊØèÊúàÊñ∞Â¢ûÁöÑÂçµÁöÑÊï∞Èáè $r[i]$ = ‰∏ä x ‰∏™ÊúàÁöÑÊàêËô´ÊÄªÊï∞Èáè $c[i-x] * y$</p><p>Âú®ÁêÜËß£‰∫ÜËøô‰∏ÄÊ≠•ÂêéÔºåÊàë‰ª¨ÂÜçÈáçÊñ∞Êù•Êé®‰∏Ä‰∏ãËøô‰∏™Ë°®Ê†ºÔºö</p><p>Âú® <code>0 - x-1</code> ÊúàÔºåÁ¨¨‰∏ÄÂØπÊàêËô´‰∏ç‰∫ßÂçµÔºå$c[i] \equiv  1,r[i] \equiv 0$ÔºåÂç≥Ôºö</p><ul><li>Âú®Á¨¨ 0 ÊúàÊó∂Ôºå$c[0] = 1,r[0] = 0$</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊñ∞Â¢ûÊï∞Èáè r[i]</td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>Âú® <code>x</code> ÊúàÔºåÁ¨¨‰∏ÄÂØπÊàêËô´ÂºÄÂßã‰∫ßÂçµÔºå‰∏î‰∫ß‰∫Ü y ÂØπÂçµÔºå$c[x] =  1,r[x] = y$ÔºåÂç≥Ôºö</p><ul><li>Âú®Á¨¨ 1 ÊúàÊó∂Ôºå$c[1] = 1,r[1] = 2$</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊñ∞Â¢ûÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">2</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>Âú® <code>x+1 - z</code> ÊúàÔºåÈÄíÊé®ÂÖ≥Á≥ªÊª°Ë∂≥‰∏äËø∞ÈÄíÊé®ÊñπÁ®ãÔºåÊúâÔºö</p><ul><li>Âú®Á¨¨ 2 ÊúàÊó∂Ôºå$c[2] = c[1] + r[0] = 1,r[2] = c[2 - 1] * 2 = 2$</li><li>Âú®Á¨¨ 3 ÊúàÊó∂Ôºå$c[3] = c[2] + r[1] = 3,r[3] = c[3 - 1] * 2 = 2$</li><li>Âú®Á¨¨ 4 ÊúàÊó∂Ôºå$c[4] = c[3] + r[2] = 5,r[4] = c[4 - 1] * 2 = 6$</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center">3</td><td align="center">5</td></tr><tr><td align="center">ÊØèÊúàÂçµÊñ∞Â¢ûÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">2</td><td align="center">2</td><td align="center">2</td><td align="center">6</td></tr></tbody></table><p>ÊåâÁÖßÊ†∑‰æã‰∏≠ $z=8$ÔºåÊàë‰ª¨‰πüÂèØ‰ª•ÂæóÂà∞‰∏ãË°®ÔºåÊ†∑‰æãÁ≠îÊ°à c[8] = 37 Â∞±ÊòØËøôÊ†∑Êù•ÁöÑ„ÄÇ</p><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th><th align="center">5Êúà</th><th align="center">6Êúà</th><th align="center">7Êúà</th><th align="center">8Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center">3</td><td align="center">5</td><td align="center">7</td><td align="center">13</td><td align="center">23</td><td align="center">37</td></tr><tr><td align="center">ÊØèÊúàÂçµÊñ∞Â¢ûÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">2</td><td align="center">2</td><td align="center">2</td><td align="center">6</td><td align="center">10</td><td align="center">14</td><td align="center">26</td><td align="center">46</td></tr></tbody></table><p>‰∏ãÈù¢ÔºåÊàë‰ª¨‰ª• $x = 2,y=3,z = 4$ ‰∏∫‰æãÔºåÂÜçÊ¨°Ê®°Êãü„ÄÇ</p><p>È¶ñÂÖàÔºåÂú® <code>0 - x-1</code> ÊúàÔºåÁ¨¨‰∏ÄÂØπÊàêËô´ÊòØ‰∏ç‰∫ßÂçµÁöÑÔºåÊâÄ‰ª• $c[i] \equiv  1,r[i] \equiv 0$ÔºåÂç≥Ôºö</p><ul><li>Âú®Á¨¨ 0 ÊúàÊó∂Ôºå$c[0] = 1,r[0] = 0$</li><li>Âú®Á¨¨ 1 ÊúàÊó∂Ôºå$c[1] = 1,r[1] = 0$</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊñ∞Â¢ûÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">0</td><td align="center"></td><td align="center"></td><td align="center"></td></tr></tbody></table><p>Âú® <code>x</code> ÊúàÔºåÁ¨¨‰∏ÄÂØπÊàêËô´ÂºÄÂßã‰∫ßÂçµÔºå‰∏î‰∫ß‰∫Ü y ÂØπÂçµÔºå$c[x] =  1,r[x] = y$ÔºåÂç≥Ôºö</p><ul><li>Âú®Á¨¨ 2 ÊúàÊó∂Ôºå$c[2] = 1,r[2] = 3$</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">ÊØèÊúàÂçµÊñ∞Â¢ûÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">0</td><td align="center">3</td><td align="center"></td><td align="center"></td></tr></tbody></table><p>Âú® <code>x+1 - z</code> ÊúàÔºåÈÄíÊé®ÂÖ≥Á≥ªÊª°Ë∂≥‰∏äËø∞ÈÄíÊé®ÊñπÁ®ãÔºåÊúâÔºö</p><ul><li>Âú®Á¨¨ 3 ÊúàÊó∂Ôºå$c[3] = c[2] + r[1] = 1,r[3] = c[3 - 2] * 3 = 3$</li><li>Âú®Á¨¨ 4 ÊúàÊó∂Ôºå$c[4] = c[3] + r[2] = 4,r[4] = c[4 - 2] * 3 = 3$</li></ul><table><thead><tr><th align="center">Êúà‰ªΩ</th><th align="center">0Êúà</th><th align="center">1Êúà</th><th align="center">2Êúà</th><th align="center">3Êúà</th><th align="center">4Êúà</th></tr></thead><tbody><tr><td align="center">ÊØèÊúàÊàêËô´ÊÄªÊï∞Èáè c[i]</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center">1</td><td align="center">4</td></tr><tr><td align="center">ÊØèÊúàÂçµÊñ∞Â¢ûÊï∞Èáè r[i]</td><td align="center">0</td><td align="center">0</td><td align="center">3</td><td align="center">3</td><td align="center">3</td></tr></tbody></table><p>Ëá≥Ê≠§ÔºåÊï¥ÈÅìÈ¢òÁõÆÁöÑÈÄªËæëÂÖ≥Á≥ªÂü∫Êú¨ÁêÜÊ∏Ö„ÄÇ‚úÖ </p><br><p>Âú®Ê¢≥ÁêÜÂÆå‰∫ÜÈÄíÊé®ÂÖ≥Á≥ªÂêéÔºåÊàë‰ª¨Â∞ùËØï‰π¶ÂÜô‰ª£Á†ÅÔºàËøôÈ¢òÂØπ‰∫éÂàùÂ≠¶ËÄÖÊù•ËØ¥Á°ÆÂÆûÈ∫ªÁÉ¶Ôºå‰ΩÜÊòØ <strong>ÂØπÈÄªËæëÊÄùÁª¥ÊòØÂæàÂ•ΩÁöÑÈîªÁÇº</strong>Ôºâ</p><p>Êàë‰ª¨‰ªé‰∏äÈù¢ÁöÑËøáÁ®ãÂÖ•ÊâãÔºå<strong>ËæπÁïåÊù°‰ª∂</strong> Â∞±ÊØîËæÉÂÆπÊòìÁ°ÆÂÆö„ÄÇÊòæÁÑ∂ÔºåÊÄªËøáÁ®ãÂàÜ‰∏∫ 3 ÊÆµÔºåÂàÜÂà´ÊòØ <code>0-x-1</code>Êúà, <code>x</code>Êúà, <code>x+1-z</code> ÊúàÔºåÊâÄ‰ª•Êàë‰ª¨ÁöÑÁ®ãÂ∫è‰πüÂèØ‰ª•ÂàÜ‰∏∫ 3 ÊÆµÊù•ÂÜôÔºö</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//Ê®°Êãü 0 - x - 1 Êúà</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//Ê®°Êãü x Êúà</span>c<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span><span class="token comment">//Ê®°Êãü x + 1 - z Êúà</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> z<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> r<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> r<span class="token punctuation">[</span>i <span class="token operator">-</span> x<span class="token punctuation">]</span> <span class="token operator">*</span> y<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ËøôÊ†∑ÔºåÊàë‰ª¨Â∞±ÂÆåÊàê‰∫ÜÊú¨È¢òÁöÑÊ†∏ÂøÉ‰ª£Á†ÅÔºàÊÅ≠Âñú üéâüéâüéâÔºâ</p><p>ÂÖ∂ÂÆûÔºåÂú®ÂØπ $x$ ÊúàÁöÑËµãÂÄºÊó∂Ôºå‰πüÂèØ‰ª•Â∞ÜÂÖ∂ÂêàÂπ∂Âà∞Á¨¨ 3 ÊÆµÔºå‰ΩÜÊòØËøô‰∏™ÂêàÂπ∂Êìç‰ΩúË¶ÅÊ±Ç x &gt; 1ÔºàÂõ†‰∏∫Á¨¨ 3 ÊÆµÁöÑ ÈÄíÊé®ÊñπÁ®ã‰∏≠ÂåÖÂê´ <code>r[i - 2]</code>ÔºåÊâÄ‰ª•ÈúÄË¶Å‰øùËØÅ <code>i - 2 &gt; 0</code>Ôºâ„ÄÇ‰∏∫‰∫Ü‰ª£Á†ÅÈÄªËæëÊõ¥Âä†Ê∏ÖÊô∞ÔºåÂçö‰∏ªÈááÁî®‰∫Ü 3 ÊÆµÂºè„ÄÇ</p><p>ÂΩìÁÑ∂ÔºåÂçö‰∏ª‰πüÁúãÂà∞Êúâ‰ª£Á†ÅÊòØÊúà‰ªΩ‰ªé 1 ÂºÄÂßãÁöÑÔºåËøôÊ†∑ÁöÑËØùÔºå„ÄåËøá‰∫Ü z ‰∏™Êúà„ÄçÂ∞±ÊòØ z + 1 ÊúàÔºåÊúÄÁªàËæìÂá∫ÁöÑÁ≠îÊ°àÊòØ c[z + 1]ÔºåËøôÊ†∑‰ªé 1 ÂºÄÂßãÁöÑ‰∏ãÊ†áÂ∞±ÂèØ‰ª•‰øùËØÅ 2„ÄÅ3 ÊÆµÂêàÂπ∂Êó∂ $i - 2 &gt; 0$ ‰∫ÜÔºå‰πüÊòØÂèØ‰ª•ÁöÑ„ÄÇ</p><p>Âú®Êú¨Êñá‰∏≠ÔºåÂçö‰∏ªÈÄâÊã©Êúà‰ªΩ‰∏ãÊ†á‰ªé 0 ÂºÄÂßãÔºåËøôÊ†∑„ÄåËøá‰∫Ü z ‰∏™Êúà„ÄçÂ∞±ÊòØ z ÊúàÔºåÊØîËæÉÂÆπÊòìËÆ∞ÂøÜÔºåÂ§ß‰ºôÂèØ‰ª•Ê†πÊçÆÂñúÂ•ΩËá™Ë°åÈÄâÊã©„ÄÇ</p><p>üçâ PSÔºöÊú¨È¢òÈúÄË¶Å‰ΩøÁî® <code>long long</code> Á±ªÂûãÔºå<code>int</code> Á±ªÂûã‰∏çÂ§üÁî®„ÄÇ</p><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1e2</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>ll c<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//cÊï∞ÁªÑÂ≠òÂÇ®ÊØè‰∏™ÊúàÊàêËô´ÁöÑÊÄªÊï∞Èáè</span>ll r<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//rÊï∞ÁªÑÂ≠òÂÇ®ÊØè‰∏™ÊúàÊñ∞Â¢ûÁöÑÊòÜËô´Êï∞Èáè</span>ll x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cin <span class="token operator">&gt;&gt;</span> x <span class="token operator">&gt;&gt;</span> y <span class="token operator">&gt;&gt;</span> z<span class="token punctuation">;</span>      <span class="token comment">//Ê®°Êãü 0 - x - 1 Êúà</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//Ê®°Êãü x Êúà</span>    c<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    r<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>      <span class="token comment">//Ê®°Êãü x + 1 - z Êúà</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> z <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">[</span>i <span class="token operator">-</span> x<span class="token punctuation">]</span> <span class="token operator">*</span> y<span class="token punctuation">;</span>        c<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> r<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> c<span class="token punctuation">[</span>z<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÈÄíÊé® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PythonÂ≠¶‰π†Á¨îËÆ∞ÔΩúList</title>
      <link href="/2023/04/02/python-xue-xi-bi-ji-list/"/>
      <url>/2023/04/02/python-xue-xi-bi-ji-list/</url>
      
        <content type="html"><![CDATA[<p>Êú¨ÁØáÂçöÂÆ¢ËøòÂú®‰øÆÊîπÊ∂¶Ëâ≤‰∏≠ÔΩû</p><p>Êï¨ËØ∑ÊúüÂæÖÔΩû</p>]]></content>
      
      
      <categories>
          
          <category> PythonÂü∫Á°Ä </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Â≠¶‰π†Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁà¨Ê•ºÊ¢Ø</title>
      <link href="/2023/04/01/xin-xi-ao-sai-ti-jie-pa-lou-ti/"/>
      <url>/2023/04/01/xin-xi-ao-sai-ti-jie-pa-lou-ti/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁà¨Ê•ºÊ¢Ø"><a href="#‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁà¨Ê•ºÊ¢Ø" class="headerlink" title="‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁà¨Ê•ºÊ¢Ø"></a>‰ø°ÊÅØÂ••ËµõÈ¢òËß£ÔΩúÁà¨Ê•ºÊ¢Ø</h1><hr><h2 id="üöÄ-È¢òÁõÆÊµèËßà"><a href="#üöÄ-È¢òÁõÆÊµèËßà" class="headerlink" title="üöÄ È¢òÁõÆÊµèËßà"></a>üöÄ È¢òÁõÆÊµèËßà</h2><h3 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h3><p>Ê†ëËÄÅÂ∏àÁà¨Ê•ºÊ¢ØÔºå‰ªñÂèØ‰ª•ÊØèÊ¨°Ëµ∞ $1$ Á∫ßÊàñËÄÖ $2$ Á∫ßÔºåËæìÂÖ•Ê•ºÊ¢ØÁöÑÁ∫ßÊï∞ÔºåÊ±Ç‰∏çÂêåÁöÑËµ∞Ê≥ïÊï∞„ÄÇ</p><p>‰æãÂ¶ÇÔºöÊ•ºÊ¢Ø‰∏ÄÂÖ±Êúâ $3$ Á∫ßÔºå‰ªñÂèØ‰ª•ÊØèÊ¨°ÈÉΩËµ∞‰∏ÄÁ∫ßÔºåÊàñËÄÖÁ¨¨‰∏ÄÊ¨°Ëµ∞‰∏ÄÁ∫ßÔºåÁ¨¨‰∫åÊ¨°Ëµ∞‰∏§Á∫ßÔºå‰πüÂèØ‰ª•Á¨¨‰∏ÄÊ¨°Ëµ∞‰∏§Á∫ßÔºåÁ¨¨‰∫åÊ¨°Ëµ∞‰∏ÄÁ∫ßÔºå‰∏ÄÂÖ± $3$ ÁßçÊñπÊ≥ï„ÄÇ</p><h3 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h3><p>ËæìÂÖ•ÂåÖÂê´Ëã•Âπ≤Ë°åÔºåÊØèË°åÂåÖÂê´‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $N$Ôºå‰ª£Ë°®Ê•ºÊ¢ØÁ∫ßÊï∞Ôºå$1‚â§N‚â§30$„ÄÇ</p><h3 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h3><p>‰∏çÂêåÁöÑËµ∞Ê≥ïÊï∞ÔºåÊØè‰∏ÄË°åËæìÂÖ•ÂØπÂ∫î‰∏ÄË°åËæìÂá∫„ÄÇ</p><h3 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span><span class="token number">8</span><span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">8</span><span class="token number">34</span><span class="token number">89</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="„ÄêÂéüÈ¢òÈìæÊé•„Äë"><a href="#„ÄêÂéüÈ¢òÈìæÊé•„Äë" class="headerlink" title="„ÄêÂéüÈ¢òÈìæÊé•„Äë"></a>„ÄêÂéüÈ¢òÈìæÊé•„Äë</h3><p><a href="http://ybt.ssoier.cn:8088/problem_show.php?pid=1204">http://ybt.ssoier.cn:8088/problem_show.php?pid=1204</a></p><hr><h2 id="‚òòÔ∏è-È¢òËß£ÂàÜÊûê"><a href="#‚òòÔ∏è-È¢òËß£ÂàÜÊûê" class="headerlink" title="‚òòÔ∏è È¢òËß£ÂàÜÊûê"></a>‚òòÔ∏è È¢òËß£ÂàÜÊûê</h2><p>Áà¨Ê•ºÊ¢ØÈóÆÈ¢ò‰πüÊòØ <strong>ÈÄíÊé®ÊÄùÊÉ≥</strong> ÁöÑÂÖ∏Âûã‰ΩìÁé∞„ÄÇ</p><p>Êàë‰ª¨ÂèØ‰ª•ÊääËµ∞Âà∞Á¨¨ <code>i</code> Á∫ßÊ•ºÊ¢ØÁöÑÊñπÊ°àÊï∞ <code>f[i]</code>  ÁúãÊàê <strong>‰∏Ä‰∏™ÈõÜÂêà</strong>ÔºåÁî±„ÄåÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 1 Á∫ßÊ•ºÊ¢ØÁöÑÊñπÊ°àÊï∞ <code>f[i-1]</code> „ÄçÂíå „ÄåÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 2 Á∫ßÊ•ºÊ¢ØÁöÑÊñπÊ°àÊï∞ <code>f[i-2]</code> „ÄçËøô <strong>‰∏§‰∏™Â≠êÈõÜ</strong> ÊûÑÊàê„ÄÇ</p><p>ÊØîÂ¶ÇËµ∞Âà∞Á¨¨ <code>5</code> Á∫ßÊ•ºÊ¢ØÁöÑÊñπÊ°àÊï∞ <code>f[5]</code> ÔºåÊåâÁÖßÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ÁöÑÁ∫ßÊï∞ÂèØ‰ª•ÂàÜ‰∏∫‰ª•‰∏ã‰∏§‰∏™Â≠êÈõÜÔºö</p><ul><li>ÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 1 Á∫ßÔºåÈÇ£‰πàËµ∞ÊúÄÂêé‰∏ÄÊ≠•‰πãÂâçÔºåÊàë‰ª¨Â§ÑÂú®Á¨¨ 4 Á∫ßÂè∞Èò∂ÔºåÊâÄ‰ª•Ëøô‰∏™Â≠êÈõÜÁöÑÂ§ßÂ∞è‰∏∫ <code>f[4]</code></li><li>ÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 2 Á∫ßÔºåÈÇ£‰πàËµ∞ÊúÄÂêé‰∏ÄÊ≠•‰πãÂâçÔºåÊàë‰ª¨Â§ÑÂú®Á¨¨ 3 Á∫ßÂè∞Èò∂ÔºåÊâÄ‰ª•Ëøô‰∏™Â≠êÈõÜÁöÑÂ§ßÂ∞è‰∏∫ <code>f[3]</code></li></ul><p>ËøôÊ†∑ÁöÑÂàÜÂâ≤ÊñπÊ≥ïÂÅöÂà∞‰∫Ü <strong>‰∏çÈáçÂ§ç„ÄÅ‰∏çÈÅóÊºè</strong>ÔºåÂõ†Ê≠§Âè™ÈúÄÊåâÁÖßÊñπÁ®ã <code>f[i] = f[i-1] + f[i-2]</code> ÂéªÈÄíÊé®Âç≥ÂèØ„ÄÇ</p><h2 id="‚ùóÔ∏è-ËØØÂå∫ÊèêÁ§∫"><a href="#‚ùóÔ∏è-ËØØÂå∫ÊèêÁ§∫" class="headerlink" title="‚ùóÔ∏è ËØØÂå∫ÊèêÁ§∫"></a>‚ùóÔ∏è ËØØÂå∫ÊèêÁ§∫</h2><p>Ê≠§È¢òÁöÑ‰∏Ä‰∏™ <strong>Â∏∏ËßÅÈîôËØØ</strong>ÔºåÂ∞±ÊòØÊääÈÄíÊé®ÊñπÁ®ã‰π¶ÂÜôÊàê <code>f[i] = f[i-1] + 2*f[i-2]</code>„ÄÇ</p><p>ËøôÊòØÂõ†‰∏∫Âú®ÂàíÂàÜÂ≠êÈõÜÊó∂ÔºåÊääÁ¨¨‰∫å‰∏™Â≠êÈõÜ„Äå<strong>ÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 2 Á∫ß</strong>„Äç‚úÖ ËØØËß£Êàê‰∫Ü„Äå<strong>ÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 2 Á∫ßÊúâÂ§öÂ∞ëÁßçÊñπÊ°à</strong>„Äç‚ùå</p><p>ËøôÂ∞±ÂØºËá¥Âú®ËÄÉËôë <code>f[i-2]</code> Êó∂ÔºåËÆ§‰∏∫ <strong>ÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 2 Á∫ßÊúâ 2 ÁßçÊñπÊ°à</strong>ÔºöÂç≥‰∏ÄÊ¨°Ëµ∞ 2 Á∫ßÔºåÊàñÂÖàËµ∞ 1 Á∫ßÔºåÂÜçËµ∞ 1 Á∫ß„ÄÇÊää <code>f[i-2]</code> ‰∏é <code>f[2]</code> ‰∫ßÁîü‰∫ÜËÅîÁ≥ªÔºåÊâÄ‰ª•Âú® <code>f[i-2]</code> Ââç‰πò‰∫Ü 2„ÄÇ‚ùå </p><p>‰ΩÜÊòØ‰ªîÁªÜÊÄùËÄÉÔºåÊàë‰ª¨‰ºöÂèëÁé∞‰∏äÈù¢ËøôÁßçÈîôËØØÁöÑÊÉ≥Ê≥ïÔºå<strong>Êú¨Ë¥®‰∏äÊòØÂõ†‰∏∫‰∏§‰∏™Â≠êÈõÜÂá∫Áé∞‰∫ÜÈáçÂ§ç</strong>„ÄÇ</p><p> „ÄåÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 2 Á∫ßÔºå‰ΩÜÊòØÊØèÊ¨°Ëµ∞ 1 Á∫ß„ÄçÁöÑÊñπÊ°àÔºåÂÖ∂ÂÆûÊòØÂåÖÂê´Âú®Á¨¨‰∏Ä‰∏™Â≠êÈõÜ „ÄåÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 1 Á∫ß„Äç‰∏≠ÁöÑ„ÄÇÂõ†‰∏∫Â¶ÇÊûúÂÖàËµ∞ 1 Á∫ßÔºåÂÜçËµ∞ 1 Á∫ßÔºåÈÇ£ÊúÄÂêé‰∏ÄÊ≠•Â∞±ÊòØ 1 Á∫ßÔºåÊ†πÊú¨‰∏çËÉΩÂàíÂàÜÂú®„ÄåÊúÄÂêé‰∏ÄÊ≠•Ëµ∞ 2 Á∫ß„ÄçËøô‰∏™Â≠êÈõÜ‰∏≠Ôºå‰ªéËÄå‰∫ßÁîü‰∫ÜÈîôËØØ„ÄÇ</p><p>‰πüÂ∞±ÊòØËØ¥Ôºå<code>f[i-2]</code> ‰∏é <code>f[2]</code> ÊòØÊ≤°ÊúâÂÖ≥Á≥ªÁöÑ‚ùóÔ∏è</p><p>ÂàùÂ≠¶ËÄÖÂú®ÂàùÂ≠¶Êó∂ÁäØ‰∫ÜËøôÁßçÈîôËØØÂêéÔºåÈúÄË¶Å‰ªîÁªÜÊÄùËÄÉÂéüÂõ†ÔºåÈÅøÂÖç‰∏ãÊ¨°ÂÜçËµ∞ÂÖ•Ëøô‰∏™ËØØÂå∫„ÄÇüçÄ</p><hr><h2 id="üßëüèª‚Äçüíª-C-‰ª£Á†Å"><a href="#üßëüèª‚Äçüíª-C-‰ª£Á†Å" class="headerlink" title="üßëüèª‚Äçüíª C++ ‰ª£Á†Å"></a>üßëüèª‚Äçüíª C++ ‰ª£Á†Å</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">35</span><span class="token punctuation">;</span><span class="token keyword">int</span> tmp<span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    f<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> f<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//ÊúÄÂêé‰∏ÄÊ≠•Ëµ∞1Á∫ßÁöÑÊñπÊ°à + ÊúÄÂêé‰∏ÄÊ≠•Ëµ∞2Á∫ßÁöÑÊñπÊ°à</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
            <tag> ÈÄíÊé® </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LinuxÂëΩ‰ª§Ë°åÂ§ßÂÖ®ÔΩúËØª‰π¶Á¨îËÆ∞</title>
      <link href="/2023/03/31/linux-ming-ling-xing-da-quan-du-shu-bi-ji/"/>
      <url>/2023/03/31/linux-ming-ling-xing-da-quan-du-shu-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="Book-Notes-The-Linux-Command-Line-Chapter-5"><a href="#Book-Notes-The-Linux-Command-Line-Chapter-5" class="headerlink" title="Book Notes: The Linux Command Line - Chapter 5"></a>Book Notes: The Linux Command Line - Chapter 5</h1><hr><h2 id="About-this-Book-üìö"><a href="#About-this-Book-üìö" class="headerlink" title="About this Book üìö"></a>About this Book üìö</h2><p><strong>Name</strong>: <em>The Linux Command Line</em></p><p><strong>Author</strong>: William E. Shotts</p><p><strong>Publisher</strong>: No Starch Press</p><p><strong>Cover</strong>:</p><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/51kjjarKXBL._SX376_BO1,204,203,200_.jpg" alt="The Linux Command Line"></p><p><strong>Translation Version:</strong></p><p><img src="https://img2.doubanio.com/view/subject/l/public/s27318531.jpg" alt="LinuxÂëΩ‰ª§Ë°åÂ§ßÂÖ®"></p><hr><h2 id="Notes-‚úçÔ∏è"><a href="#Notes-‚úçÔ∏è" class="headerlink" title="Notes ‚úçÔ∏è"></a>Notes ‚úçÔ∏è</h2><h3 id="4-Types-of-Commands"><a href="#4-Types-of-Commands" class="headerlink" title="4 Types of Commands"></a>4 Types of Commands</h3><ul><li><strong>An executable program</strong><ul><li>All files we saw in <code>/usr/bin</code> are executable programs. Within this category, programs can be <em><strong>compiled binaries</strong></em> such as programs written in C and C++, or programs written in scripting languages such as the shell, Perl, Python, Ruby, and so on.</li></ul></li><li><strong>A built-in command</strong><ul><li>A command <em><strong>built into the shell itself</strong></em>. <code>bash</code> supports a number of commands internally called <em>shell builtins</em>. The <code>cd</code> command, for example, is a shell builtin.</li></ul></li><li><strong>A shell function</strong><ul><li>Shell functions are miniature shell scripts incorporated into the environment.</li></ul></li><li><strong>An alias</strong><ul><li>Aliases are commands that we can <em><strong>define by ourselves</strong></em>, built from other commands.</li></ul></li></ul><h3 id="Commands-of-Chapter-5"><a href="#Commands-of-Chapter-5" class="headerlink" title="Commands of Chapter 5"></a>Commands of Chapter 5</h3><ul><li><p><code>type</code></p><ul><li>Display information about command type</li><li>Examples<ul><li><code>type ls</code></li><li><code>type cd</code></li><li><code>type mv</code></li></ul></li></ul></li><li><p><code>which</code></p><ul><li>Display an Executeable‚Äôs Location</li><li>Examples<ul><li><code>which ls</code></li><li><code>which cp</code></li></ul></li></ul></li><li><p><code>help</code></p><ul><li>Display information about built-in commands</li><li>Examples<ul><li><code>help cd</code></li></ul></li></ul></li><li><p><code>--help</code></p><ul><li>Display a description of the command‚Äôs supported syntax and options</li><li>Examples<ul><li><code>mkdir --help</code></li><li><code>mv --help</code></li></ul></li></ul></li><li><p><code>man</code> </p><ul><li>Display a program‚Äôs mannual page</li><li>Examples<ul><li><code>man mv</code></li></ul></li></ul></li><li><p><code>whatis</code></p><ul><li>Display one-line manual page descriptions<ul><li><code>whatis mv</code></li><li><code>whatis cp</code></li></ul></li></ul></li><li><p><code>alias</code></p><ul><li>Create an alias for a command</li><li>üçâ PS: The <code>alias</code> commands disappear when shell session ends, but we will learn how to store them for future use in later chapters.</li></ul></li></ul><hr><h2 id="Lab-üßëüèª‚Äçüíª"><a href="#Lab-üßëüèª‚Äçüíª" class="headerlink" title="Lab üßëüèª‚Äçüíª"></a>Lab üßëüèª‚Äçüíª</h2><h3 id="Why-Labs"><a href="#Why-Labs" class="headerlink" title="Why Labs ?"></a>Why Labs ?</h3><p>Lab provides <strong>a hands-on learning experience</strong> that allows us <strong>to apply theoretical knowledge to practical situations</strong>. This helps us to better understand concepts and retain information more effectively.</p><h3 id="Lab1"><a href="#Lab1" class="headerlink" title="Lab1"></a>Lab1</h3><blockquote><p>use <code>type</code> , <code>which</code>, <code>help</code>, <code>whatis</code>, <code>man</code> to check fundamental commands</p></blockquote><ul><li><code>pwd</code></li><li><code>cd</code></li><li><code>ls</code></li><li><code>mkdir</code></li><li><code>cp</code></li><li><code>mv</code></li><li><code>rm</code></li><li><code>less</code></li><li><code>file</code></li></ul><hr><h3 id="Lab2"><a href="#Lab2" class="headerlink" title="Lab2"></a>Lab2</h3><p><strong>Prerequisites</strong></p><blockquote><p> Try using <code>;</code> to write commands in 1 line</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span><span class="token punctuation">;</span> <span class="token builtin class-name">cd</span> Desktop<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Task</strong></p><blockquote><p>Use <code>alias</code> to change current directory to <code>Desktop</code></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">type</span> cdd <span class="token comment"># check if 'cdd' is used</span><span class="token builtin class-name">alias</span> <span class="token assign-left variable">cdd</span><span class="token operator">=</span><span class="token string">'cd; cd Desktop;'</span> <span class="token comment"># if not, assgin these command lines to 'cdd'</span>cdd <span class="token comment"># use this command</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> LinuxÂü∫Á°Ä </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ëã±ÊñáËØª‰π¶Á¨îËÆ∞ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>‰ø°ÊÅØÂ••ËµõÂÆûËÆ≠Êä•ÂëäÔΩúSTL</title>
      <link href="/2023/03/26/xin-xi-ao-sai-shi-xun-bao-gao-stl/"/>
      <url>/2023/03/26/xin-xi-ao-sai-shi-xun-bao-gao-stl/</url>
      
        <content type="html"><![CDATA[<h1 id="„Äê‰ø°ÊÅØÂ••ËµõÂÆûËÆ≠Êä•Âëä„ÄëSTL"><a href="#„Äê‰ø°ÊÅØÂ••ËµõÂÆûËÆ≠Êä•Âëä„ÄëSTL" class="headerlink" title="„Äê‰ø°ÊÅØÂ••ËµõÂÆûËÆ≠Êä•Âëä„ÄëSTL"></a>„Äê‰ø°ÊÅØÂ••ËµõÂÆûËÆ≠Êä•Âëä„ÄëSTL</h1><p><img src="http://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/2023-02-21-170357.jpg" alt="‰ø°ÊÅØÂ••ËµõÂÆûËÆ≠Êä•Âëä"></p><h2 id="ÂÆûËÆ≠Ê¶ÇË¶Å-üìô"><a href="#ÂÆûËÆ≠Ê¶ÇË¶Å-üìô" class="headerlink" title="ÂÆûËÆ≠Ê¶ÇË¶Å üìô"></a>ÂÆûËÆ≠Ê¶ÇË¶Å üìô</h2><hr><h3 id="ÂÆûËÆ≠‰∏ìÈ¢ò"><a href="#ÂÆûËÆ≠‰∏ìÈ¢ò" class="headerlink" title="ÂÆûËÆ≠‰∏ìÈ¢ò"></a>ÂÆûËÆ≠‰∏ìÈ¢ò</h3><p>STL ‰∏éÂü∫Á°ÄÊï∞ÊçÆÁªìÊûÑ‰∏ìÈ¢òËÆ≠ÁªÉ</p><h3 id="ÂÆûËÆ≠ÁõÆÁöÑ"><a href="#ÂÆûËÆ≠ÁõÆÁöÑ" class="headerlink" title="ÂÆûËÆ≠ÁõÆÁöÑ"></a>ÂÆûËÆ≠ÁõÆÁöÑ</h3><ul><li>ÊéåÊè°STLÂ∏∏Áî®ÁöÑÁÆóÊ≥ï„ÄÅÂÆπÂô®„ÄÅÂÆπÂô®ÈÄÇÈÖçÂô®ÁöÑ‰ΩøÁî®ÊñπÊ≥ï„ÄÇ</li><li>ËÉΩÂ§üÂà©Áî®STLÁöÑÁÆóÊ≥ï„ÄÅÂÆπÂô®„ÄÅÂÆπÂô®ÈÄÇÈÖçÂô®Ê±ÇËß£ÈóÆÈ¢ò„ÄÇ</li></ul><h3 id="È¢òÁõÆÂàóË°®"><a href="#È¢òÁõÆÂàóË°®" class="headerlink" title="È¢òÁõÆÂàóË°®"></a>È¢òÁõÆÂàóË°®</h3><ul><li>AÔºöÊëòËãπÊûú</li><li>BÔºöÁ´ãÊñπÂíå</li><li>CÔºöËÆ°ÁÆó‰∏™Êï∞</li><li>DÔºöÂêéÁºÄË°®ËææÂºèÁöÑÂÄº</li><li>EÔºöÂÅöËõãÁ≥ï</li><li>FÔºöÊü•ËµÑÊñô</li><li>GÔºöÊòéÊòéÁöÑÈöèÊú∫Êï∞</li></ul><h2 id="È¢òËß£-üßëüèª‚Äçüíª"><a href="#È¢òËß£-üßëüèª‚Äçüíª" class="headerlink" title="È¢òËß£ üßëüèª‚Äçüíª"></a>È¢òËß£ üßëüèª‚Äçüíª</h2><hr><h3 id="AÔºöÊëòËãπÊûú"><a href="#AÔºöÊëòËãπÊûú" class="headerlink" title="AÔºöÊëòËãπÊûú"></a>AÔºöÊëòËãπÊûú</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ËãπÊûúÊ†ë‰∏äÊúâ $n$ ‰∏™ËãπÊûúÔºåÊØè‰∏™ËãπÊûúÁöÑÈ´òÂ∫¶ÂàÜÂà•‰∏∫ $h_{1},h_{2},\dots,h_{n}$„ÄÇ</p><p>‰Ω†Êã•Êúâ‰∏Ä‰∏™ÈùûÂ∏∏Êñπ‰æøÁöÑÊëòËãπÊûúÂ∑•ÂÖ∑ÔºåÊØèÊ¨°ÂèØ‰ª•ÊääÊåáÂÆöÈ´òÂ∫¶‰∏äÁöÑÊâÄÊúâËãπÊûúÂÖ®ÈÉ®Êëò‰∏ãÊù•„ÄÇ</p><p>‰Ω†ÊâìÁÆóÊëò $q$ Ê¨°ÔºåÁ¨¨ $i$ Ê¨°ÊëòÈ´òÂ∫¶‰∏∫ $a_{i}$ ÁöÑÊâÄÊúâËãπÊûú„ÄÇ</p><p>ÈóÆÊØèÊ¨°ÂèØ‰ª•ÊëòÂà∞Â§öÂ∞ë‰∏™ËãπÊûúÔºü</p><h4 id="„ÄêËæìÂÖ•„Äë"><a href="#„ÄêËæìÂÖ•„Äë" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏§‰∏™Ê≠£Êï¥Êï∞ $n,q(1‚â§n‚â§10^{6},1‚â§q‚â§2*10^{5})$ÔºåÂàÜÂà´Ë°®Á§∫ËãπÊûúÁöÑÊï∞ÈáèÂíåÊëòËãπÊûúÁöÑÊ¨°Êï∞„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´ $n$ ‰∏™Ê≠£Êï¥Êï∞ $h_{1},h_{2},\dots,h_{n}(1\le h_{i} \le 10^{9})$ÔºåÂàÜÂà´Ë°®Á§∫ÊØè‰∏™ËãπÊûúÁöÑÈ´òÂ∫¶„ÄÇ</p><p>ÂÖ∂Âêé $q$ Ë°åÔºåÁ¨¨ $i$ Ë°åÂåÖÂê´‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $a(1‚â§ a_i ‚â§ 10^9)$ÔºåË°®Á§∫ÂΩìÊ¨°Ë¶ÅÊëòÁöÑËãπÊûúÁöÑÈ´òÂ∫¶„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë"><a href="#„ÄêËæìÂá∫„Äë" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ÂØπ‰∫éÊØèÊ¨°ÊëòËãπÊûúÁöÑÊìç‰ΩúÔºåÂú®‰∏ÄË°åÂÜÖËæìÂá∫‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫Ëøô‰∏ÄÊ¨°ÊëòÂà∞ÁöÑËãπÊûúÁöÑÊï∞Èáè„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">6</span> <span class="token number">4</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">4</span><span class="token number">1</span><span class="token number">2</span><span class="token number">1</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span><span class="token number">2</span><span class="token number">0</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òËÄÉÊü• STL ‰∏≠ÁöÑ <code>map</code> ÔºåÂè™ÈúÄÁªüËÆ°ÊØè‰∏™È´òÂ∫¶ÁöÑËãπÊûúÊï∞ÔºåÁÑ∂ÂêéÈááÊëòÊó∂ËæìÂá∫Âç≥ÂèØÔºåÈöæÂ∫¶ËæÉ‰Ωé„ÄÇ</p><p>Âè¶Â§ñÈ¢òÁõÆËæìÂÖ•ÈáèËæÉÂ§ßÔºå‰ΩøÁî® <code>cinËØªÂÖ•‰ºòÂåñ</code> ÂèØ‰ª•ÊúâÊïàÂáèÂ∞ëÊó∂Èó¥„ÄÇ</p><h4 id="„Äê-C-‰ª£Á†Å„Äë"><a href="#„Äê-C-‰ª£Á†Å„Äë" class="headerlink" title="„Äê C++ ‰ª£Á†Å„Äë"></a>„Äê C++ ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> q<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span>map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> mp<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> q<span class="token punctuation">;</span>    mp<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">;</span>        mp<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>   <span class="token comment">//ËØ•È´òÂ∫¶ËãπÊûúÊï∞ÈáèÁ¥ØÂä†</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> q<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">;</span>        cout <span class="token operator">&lt;&lt;</span> mp<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment">//ËæìÂá∫ËØ•È´òÂ∫¶ËãπÊûúÊÄªÊï∞</span>        mp<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//Ê∏ÖÈõ∂ÂΩìÂâçÈ´òÂ∫¶ËãπÊûúÊï∞</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="BÔºöÁ´ãÊñπÂíå"><a href="#BÔºöÁ´ãÊñπÂíå" class="headerlink" title="BÔºöÁ´ãÊñπÂíå"></a>BÔºöÁ´ãÊñπÂíå</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>Áªô‰Ω†‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $x$ÔºåÈóÆÊòØÂê¶Â≠òÂú®Ëá≥Â∞ë‰∏ÄÂØπÊ≠£Êï¥Êï∞ÂØπ $(a,b)$ Êª°Ë∂≥ $a^3+b^3=x$?</p><h4 id="„ÄêËæìÂÖ•„Äë-1"><a href="#„ÄêËæìÂÖ•„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $T(1‚â§ T‚â§100)$ÔºåË°®Á§∫ÊµãËØïÊï∞ÊçÆÁªÑÊï∞„ÄÇ</p><p>ÊØèÁªÑÊï∞ÊçÆÂç†‰∏ÄË°åÔºåÂåÖÂê´‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $x(1‚â§ x ‚â§10^{12})$„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-1"><a href="#„ÄêËæìÂá∫„Äë-1" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ÂØπ‰∫éÊØèÁªÑÊï∞ÊçÆÔºåÂ¶ÇÊûúÂ≠òÂú®Ëá≥Â∞ë‰∏ÄÂØπ $(a,b)$ Êª°Ë∂≥È¢òÊÑèÔºåËæìÂá∫ <code>YES</code>ÔºåÂê¶ÂàôËæìÂá∫ <code>NO</code></p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë-1"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë-1" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">6</span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">8</span><span class="token number">9</span><span class="token number">8567958184</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë-1"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë-1" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">NOYESNONOYESYES<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-1" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òÊúâ‰∏§ÁßçÊÄùË∑ØÔºö</p><ol><li>Áî±‰∫é x ÊúÄÂ§ß‰∏çË∂ÖËøá $10^{12}$ÔºåÊïÖ $a,b$ ÁöÑËåÉÂõ¥Âú® $[1,10^{4}]$ÔºåÂõ†Ê≠§ÂèØ‰ª•ÂØπ $a$ Êûö‰∏æÔºåÂØπ $b$ Áî®‰∫åÂàÜÔºåÂÆûÊµãÂèØ‰ª• AC„ÄÇÔºà‰ΩÜÊòØ‰∏çËÉΩ $a,b$ ÂùáÊûö‰∏æÔºå‰ºöË∂ÖÊó∂Ôºâ</li><li>ÂèØ‰ª•ÂÖàÂ∞ÜÊâÄÊúâ $a^3$ Â≠òÂÖ•ÂÆπÂô®‰∏≠ÔºåÁÑ∂ÂêéÊûö‰∏æ $b$ ÔºåÁúã $x-b^3$ ÊòØÂê¶Âú®ÂÆπÂô®‰∏≠ÔºåËã•ÊúâÔºåÂàôÊúâËß£„ÄÇ</li></ol><p>üçâ PS1Ôºö‰ΩøÁî® <code>vector</code> ‰ºöË∂ÖÊó∂ÔºåÂõ†‰∏∫Âú® <code>vector</code> ‰∏≠Êü•ÊâæÂÖÉÁ¥†ÔºåÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(N)$ÔºõËÄåÂú® <code>set„ÄÅmap</code> ‰∏≠ÔºåÊü•ÊâæÁöÑÊó∂Èó¥Â§çÊùÇÂ∫¶‰∏∫ $O(logN)$ÔºåÊó∂Èó¥‰ºöÂ§ßÂ§ßÈôç‰Ωé„ÄÇ</p><p>üçâ PS2ÔºöÊú¨È¢òÊï∞ÊçÆ‰∏äÈôêÂæàÂ§ßÔºåÂ∑≤ÁªèË∂ÖÂá∫‰∫Ü <code>int</code> Á±ªÂûãÁöÑËåÉÂõ¥ÔºåÈúÄË¶Å‰ΩøÁî® <code>long long</code> Á±ªÂûã„ÄÇÔºà <code>1ll</code> ÊòØ 1 ÁöÑ <code>long long</code> ÂΩ¢ÂºèÔºå<code>‰ªª‰Ωï int Á±ªÂûãÊï∞ÊçÆ * 1ll</code> ÂêéÂùáËÉΩËΩ¨Êç¢‰∏∫ <code>long long</code> Á±ªÂûãÔºâ</p><h4 id="„Äê-C-‰ª£Á†Å„Äë-1"><a href="#„Äê-C-‰ª£Á†Å„Äë-1" class="headerlink" title="„Äê C++ ‰ª£Á†Å„Äë"></a>„Äê C++ ‰ª£Á†Å„Äë</h4><p>ÊÄùË∑Ø1Ôºö</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span>ll T<span class="token punctuation">,</span> tmp<span class="token punctuation">,</span> flag<span class="token punctuation">;</span>ll <span class="token function">f</span><span class="token punctuation">(</span>ll a<span class="token punctuation">,</span> ll b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> T<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>T<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">;</span>        flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>ll a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> a <span class="token operator">&lt;=</span> <span class="token number">10001</span><span class="token punctuation">;</span> <span class="token operator">++</span>a<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//ÂØπaÊûö‰∏æ</span>            ll b<span class="token punctuation">,</span> res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">;</span>            ll l <span class="token operator">=</span> a<span class="token punctuation">;</span>            ll r <span class="token operator">=</span> <span class="token number">10001</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//ÂØπb‰∫åÂàÜ</span>                mid <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>                res <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">==</span> tmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    b <span class="token operator">=</span> mid<span class="token punctuation">;</span>                    flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&lt;</span> tmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>                      <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token comment">//Â∑≤ÊâæÂà∞ÔºåÈÄÄÂá∫aÁöÑÊûö‰∏æ</span>        <span class="token punctuation">}</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"YES"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment">//ËæìÂá∫ÁªìÊûú</span>        <span class="token keyword">else</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"NO"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>ll <span class="token function">f</span><span class="token punctuation">(</span>ll a<span class="token punctuation">,</span> ll b<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> a <span class="token operator">*</span> a <span class="token operator">*</span> a <span class="token operator">+</span> b <span class="token operator">*</span> b <span class="token operator">*</span> b<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ÊÄùË∑Ø2Ôºö</p><p>AC Áâà ‚úÖ</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">int</span> T<span class="token punctuation">,</span> flag<span class="token punctuation">;</span>ll x<span class="token punctuation">;</span>set<span class="token operator">&lt;</span>ll<span class="token operator">&gt;</span> s<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10001</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        s<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">1ll</span> <span class="token operator">*</span> i <span class="token operator">*</span> i <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//Âêës‰∏≠Â≠òÂÖ•ÊâÄÊúâÂèØËÉΩÁöÑa^3</span>    <span class="token punctuation">}</span>    cin <span class="token operator">&gt;&gt;</span> T<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>T<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>ll b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> b <span class="token operator">*</span> b <span class="token operator">*</span> b <span class="token operator">&lt;</span> x<span class="token punctuation">;</span> b<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//Êûö‰∏æb</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">*</span> b <span class="token operator">*</span> b <span class="token operator">*</span> b<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//Êü•Áúã(x-b^3)ÊòØÂê¶Âú®set‰∏≠</span>                flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"YES"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token keyword">else</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"NO"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>vector</code> Ë∂ÖÊó∂Áâà ‚ùå  </p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">int</span> T<span class="token punctuation">,</span> flag<span class="token punctuation">;</span>ll x<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span>ll<span class="token operator">&gt;</span> v<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span>ll<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10001</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">1ll</span> <span class="token operator">*</span> i <span class="token operator">*</span> i <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//1llÊòØ1ÁöÑlong long ÂΩ¢Âºè</span>    <span class="token punctuation">}</span>    cin <span class="token operator">&gt;&gt;</span> T<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>T<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>ll b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">1ll</span> <span class="token operator">*</span> b <span class="token operator">*</span> b <span class="token operator">*</span> b <span class="token operator">&lt;</span> x<span class="token punctuation">;</span> b<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//‰ΩøÁî®vectorÊü•ÊâæÊó∂‰ºöË∂ÖÊó∂</span>            it <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x <span class="token operator">-</span> <span class="token number">1ll</span> <span class="token operator">*</span> b <span class="token operator">*</span> b <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">!=</span> v<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"YES"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token keyword">else</span> cout <span class="token operator">&lt;&lt;</span> <span class="token string">"NO"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="CÔºöËÆ°ÁÆó‰∏™Êï∞"><a href="#CÔºöËÆ°ÁÆó‰∏™Êï∞" class="headerlink" title="CÔºöËÆ°ÁÆó‰∏™Êï∞"></a>CÔºöËÆ°ÁÆó‰∏™Êï∞</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÁªôÂÆö‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $n$Ôºå‰Ω†ÂèØ‰ª•ÊâßË°å‰ª•‰∏ãÊìç‰ΩúÔºö </p><ul><li>‰∏çÂÅöÂ§ÑÁêÜ</li><li>Âú®ÂΩìÂâçÊï∞ÁöÑÂ∑¶‰æßÊãºÊé•‰∏Ä‰∏™Ê≠£Êï¥Êï∞„ÄÇÂ¶ÇÊûúÊ≠§ÂâçÂ∞öÊú™ÊãºÊé•ËøáÔºåÂàôÊãºÊé•ÁöÑÊ≠£Êï¥Êï∞‰∏çËÉΩË∂ÖËøáÂéüÊï∞ $n$ ÁöÑ‰∏ÄÂçäÔºåÂê¶Âàô‰∏çËÉΩË∂ÖËøá‰∏ä‰∏ÄÊ¨°Ë¢´ÊãºÊé•ÁöÑÊï∞ÁöÑ‰∏ÄÂçä„ÄÇÊãºÊé•ÂÆåÊàêÂêéÔºåÂèØ‰ª•ÁªßÁª≠ÊåâÁÖßÊ≠§ËßÑÂàôÁªßÁª≠Â§ÑÁêÜÔºåÁõ¥Âà∞‰∏çËÉΩÂÜçÂä†Ê≠£Êï¥Êï∞‰∏∫Ê≠¢ÔºåÊàñËÄÖ‰∏çÂÅöÂ§ÑÁêÜ„ÄÇ</li></ul><p>ÈóÆÊÄªÂÖ±ËÉΩÂ§ÑÁêÜÂá∫Â§öÂ∞ëÁßçÊ≠£Êï¥Êï∞Ôºü</p><h4 id="„ÄêËæìÂÖ•„Äë-2"><a href="#„ÄêËæìÂÖ•„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>ËæìÂÖ•‰ªÖ‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $n(1 ‚â§ n ‚â§ 1000)$„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-2"><a href="#„ÄêËæìÂá∫„Äë-2" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ËæìÂá∫‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ËÉΩË¢´Â§ÑÁêÜÂá∫Êù•ÁöÑÊï∞Â≠óÁöÑÁßçÁ±ªÊï∞„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë-2"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë-2" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span><span class="token number">6</span><span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë-2"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë-2" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">4</span><span class="token number">6</span><span class="token number">10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-2" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òËÄÉÊü• <strong>ÈÄíÊé®</strong> ÊÄùÊÉ≥„ÄÇ</p><p>‰ª•È¢òÁõÆ‰∏≠ÁöÑ 8 ‰∏∫‰æãÔºå<code>f(8)</code> ‰ª£Ë°® 8 ÊãºÊé•ÂêéÁöÑÊÄª‰∏™Êï∞„ÄÇ</p><p><code>f(8)</code> = <code>f(4)</code> ÁöÑ‰∏™Êï∞‰∏é 8 Êãº + <code>f(3)</code> ÁöÑ‰∏™Êï∞‰∏é 8 Êãº + <code>f(2)</code> ÁöÑ‰∏™Êï∞‰∏é8Êãº + <code>f(1)</code> ÁöÑ‰∏™Êï∞‰∏é8ÊãºÔºåÂç≥  <code>f(8) = f(4) + f(3) + f(2) + f(1)</code>„ÄÇ</p><p>Âõ†Ê≠§‰ªé ÈÄíÊé® ËßíÂ∫¶Ôºå‰ªéÂâçÂæÄÂêéÊé®ÔºåÂç≥ÂèØÂæóÂà∞ÊØè‰∏Ä‰∏™ <code>f(n)</code> ÊãºÊé•ÂêéÁöÑ‰∏™Êï∞</p><h4 id="„Äê-C-‰ª£Á†Å„Äë-2"><a href="#„Äê-C-‰ª£Á†Å„Äë-2" class="headerlink" title="„Äê C++ ‰ª£Á†Å„Äë"></a>„Äê C++ ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> NMAX <span class="token operator">=</span> <span class="token number">1005</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span>ll f<span class="token punctuation">[</span>NMAX<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    f<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NMAX<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            f<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> f<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> f<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="DÔºöÂêéÁºÄË°®ËææÂºèÁöÑÂÄº"><a href="#DÔºöÂêéÁºÄË°®ËææÂºèÁöÑÂÄº" class="headerlink" title="DÔºöÂêéÁºÄË°®ËææÂºèÁöÑÂÄº"></a>DÔºöÂêéÁºÄË°®ËææÂºèÁöÑÂÄº</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-3"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-3" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>‰ªéÈîÆÁõòËØªÂÖ•‰∏Ä‰∏™ÂêéÁºÄË°®ËææÂºèÔºàÂ≠óÁ¨¶‰∏≤ÔºâÔºåÂè™Âê´Êúâ 0-9 ÁªÑÊàêÁöÑËøêÁÆóÊï∞ÂèäÂä†Ôºà+Ôºâ„ÄÅÂáèÔºà-Ôºâ„ÄÅ‰πòÔºà*Ôºâ„ÄÅÈô§Ôºà/ÔºâÂõõÁßçËøêÁÆóÁ¨¶„ÄÇ</p><p>ÊØè‰∏™ËøêÁÆóÊï∞‰πãÈó¥Áî®‰∏Ä‰∏™Á©∫Ê†ºÈöîÂºÄÔºå‰∏çÈúÄË¶ÅÂà§Êñ≠Áªô‰Ω†ÁöÑË°®ËææÂºèÊòØÂê¶ÂêàÊ≥ï„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-3"><a href="#„ÄêËæìÂÖ•„Äë-3" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>‰∏Ä‰∏™ÂêéÁºÄË°®ËææÂºèÔºå‰ª• @ ‰Ωú‰∏∫ÁªìÊùüÊ†áÂøó„ÄÇ</p><p>Êï∞ÊçÆ‰øùËØÅËæìÂÖ•ÁöÑËøêÁÆóÊï∞ÂùáÊòØÊ≠£Êï¥Êï∞Ôºå‰∏îÊØè‰∏™Êï∞ÂÄºÂú®ËøêÁÆóËøáÁ®ã‰∏≠Âùá‰∏ç‰ºöË∂ÖËøá int ÊâÄË°®Á§∫ÁöÑËåÉÂõ¥„ÄÇ</p><p>Èô§Ê≥ïÂΩì‰ΩúÊï¥Èô§Âç≥ÂèØ„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-3"><a href="#„ÄêËæìÂá∫„Äë-3" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ËæìÂá∫‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÂêéÁºÄË°®ËææÂºèÁöÑÂÄº„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë-3"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë-3" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">16</span> <span class="token number">9</span> <span class="token number">4</span> <span class="token number">3</span> <span class="token operator">+</span><span class="token operator">*</span><span class="token operator">-</span>@<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë-3"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë-3" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token operator">-</span><span class="token number">47</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-3"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-3" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òËÄÉÊü• STL ‰∏≠ÁöÑ <code>stack</code> ÔºåÈúÄË¶ÅÂú®ÁêÜËß£ ÂêéÁºÄË°®ËææÂºè ÁöÑÂü∫Á°Ä‰∏äÔºåÂà©Áî® <code>stack</code> ‰π¶ÂÜôÁõ∏Â∫î‰ª£Á†Å</p><blockquote><p>ÂêéÁºÄË°®ËææÂºè Áõ∏ÂÖ≥Áü•ËØÜÁÇπÂçöÂÆ¢Ôºö<a href="http://t.csdn.cn/vvkbP">http://t.csdn.cn/vvkbP</a></p></blockquote><p>üçâ PSÔºöÊú¨È¢òÊï∞ÊçÆÁöÑËØªÂèñÊé®Ëçê‰ΩøÁî® <code>scanf</code>Ôºå<code>cin</code> Âú®ËØªÂèñÂçï‰∏™Â≠óÁ¨¶Êó∂Ôºå‰ºöË∑≥ËøáÁ©∫Ê†ºÔºåËÄå <code>scanf</code>‰∏ç‰ºö</p><h4 id="„Äê-C-‰ª£Á†Å„Äë-3"><a href="#„Äê-C-‰ª£Á†Å„Äë-3" class="headerlink" title="„Äê C++ ‰ª£Á†Å„Äë"></a>„Äê C++ ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>stack<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> s<span class="token punctuation">;</span><span class="token keyword">char</span> c<span class="token punctuation">;</span><span class="token keyword">int</span> sum<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">//Âà©Áî®scanfÔºåÊØèÊ¨°ËØªÂèñ‰∏Ä‰∏™Â≠óÁ¨¶ÔºàÂåÖÊã¨Á©∫Ê†ºÔºâ</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'@'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token comment">//ÈÅáÂà∞Êï∞Â≠óÔºåÁªßÁª≠ËØªÂÖ•</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;=</span> <span class="token char">'0'</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&lt;=</span> <span class="token char">'9'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             tmp <span class="token operator">=</span> tmp <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> c <span class="token operator">-</span> <span class="token char">'0'</span><span class="token punctuation">;</span>                  <span class="token comment">//ÈÅáÂà∞Á©∫Ê†ºÔºåÂ∞ÜÂΩìÂâçÊï∞Â≠óÂÖÉÁ¥†ÂÖ•Ê†à</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">' '</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>            tmp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                  <span class="token comment">//ÈÅáÂà∞ËøêÁÆóÁ¨¶ÔºåËøõË°åËøêÁÆó</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'+'</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">'-'</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">'*'</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">'/'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//ÂºπÂá∫‰∏ªÊ†àÈ°∂ÂÖÉÁ¥†num2Ôºà‰∏ªÊ†àÈ°∂ÂÖÉÁ¥†ÊîæÂú®Êìç‰ΩúÁ¨¶Âè≥ËæπÔºâÂíåÊ¨°Ê†àÈ°∂ÂÖÉÁ¥†num1</span>            <span class="token keyword">int</span> num2 <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            s<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> num1 <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            s<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment">//ËÆ°ÁÆó</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'+'</span><span class="token punctuation">)</span> num2 <span class="token operator">=</span> num1 <span class="token operator">+</span> num2<span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'-'</span><span class="token punctuation">)</span> num2 <span class="token operator">=</span> num1 <span class="token operator">-</span> num2<span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'*'</span><span class="token punctuation">)</span> num2 <span class="token operator">=</span> num1 <span class="token operator">*</span> num2<span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">'/'</span><span class="token punctuation">)</span> num2 <span class="token operator">=</span> num1 <span class="token operator">/</span> num2<span class="token punctuation">;</span>                      <span class="token comment">//Â∞ÜËÆ°ÁÆóÂêéÁöÑÂÖÉÁ¥†ÂÜçÊ¨°ÂÖ•Ê†à</span>            s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>      cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>  <span class="token comment">//ÂΩìÂâçÊ†àÈ°∂ÂÖÉÁ¥†Âç≥‰∏∫ËøêÁÆóÁªìÊûú</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="EÔºöÂÅöËõãÁ≥ï"><a href="#EÔºöÂÅöËõãÁ≥ï" class="headerlink" title="EÔºöÂÅöËõãÁ≥ï"></a>EÔºöÂÅöËõãÁ≥ï</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-4"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-4" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>‰Ω†ÊòØ‰∏ÄÂÆ∂ËõãÁ≥ïÂ∫óÁöÑËÄÅÊùøÔºåËøô‰∏ÄÂ§©‰Ω†Êé•Âà∞‰∫Ü $N$ Âº†ËõãÁ≥ïËÆ¢Âçï„ÄÇ</p><p>Â∫óÂÜÖÊúâÂÖÖË∂≥ÁöÑÂéüÊùêÊñôÔºàÂ•∂Ê≤π„ÄÅÊ∑ÄÁ≤â„ÄÅÈ∏°ËõãÔºâÂèØ‰ª•Áî®‰∫éÂà∂‰ΩúËõãÁ≥ïÔºåÊØèÁßçÂéüÊùêÊñôÊåâ‰ªΩÂ≠òÂÇ®ÔºåÊØè‰ªΩÈÉΩÊúâ‰∏Ä‰∏™ÁæéÂë≥Â∫¶„ÄÇÂ∑≤Áü•Á¨¨ $i$ ‰ªΩËÆ¢ÂçïÁöÑËõãÁ≥ïÈúÄË¶Å‰ΩøÁî® $x_i$ ‰ªΩÂ•∂Ê≤π„ÄÅ$y_i$ ‰ªΩÊ∑ÄÁ≤â‰ª•Âèä $z_i$ ‰ªΩÈ∏°ËõãÂà∂‰Ωú„ÄÇ</p><p>‰Ωú‰∏∫Â∫óÈïøÔºå‰Ω†ÂÜ≥ÂÆöÊåâÈ°∫Â∫èÊØèÊ¨°ÂèñÁõÆÂâçÊúÄÂ•ΩÁöÑÊùêÊñôÂà∂‰ΩúËõãÁ≥ï„ÄÇÊç¢Âè•ËØùËØ¥Ôºå‰Ω†‰ºöÊåâËÆ¢ÂçïÁöÑÁªôÂÆöÈ°∫Â∫èÂà∂‰ΩúËõãÁ≥ïÔºåÂØπ‰∫éÁ¨¨‰∏Ä‰ªΩËõãÁ≥ïÔºå‰ºö‰ΩøÁî®ÁæéÂë≥Â∫¶ÊúÄÈ´òÁöÑ $x_i$ ‰ªΩÂ•∂Ê≤π„ÄÅ$y_i$ ‰ªΩÊ∑ÄÁ≤â‰ª•Âèä $z_i$ ‰ªΩÈ∏°ËõãËøõË°åÂà∂‰ΩúÔºõÂØπ‰∫éÁ¨¨‰∫å‰ªΩËõãÁ≥ïÔºå‰ºö‰ΩøÁî®Ââ©‰∏ãÁöÑÁæéÂë≥Â∫¶ÊúÄÈ´òÁöÑ $x_2$ ‰ªΩÂ•∂Ê≤π„ÄÅ$y_2$ ‰ªΩÊ∑ÄÁ≤â‰ª•Âèä $z_2$ ‰ªΩÈ∏°ËõãËøõË°åÂà∂‰ΩúÔºõ‰ª•Ê≠§Á±ªÊé®„ÄÇ</p><p>Â∑≤Áü•‰∏Ä‰ªΩËõãÁ≥ïÁöÑÁæéÂë≥Â∫¶Á≠âÂêå‰∫éÊâÄÊúâ‰ΩøÁî®ÊéâÁöÑÂéüÊùêÊñôÁöÑÁæéÂë≥Â∫¶‰πãÂíåÔºåÈóÆÊØè‰ªΩËõãÁ≥ïÁöÑÁæéÂë≥Â∫¶ÂàÜÂà´ÊòØÂ§öÂ∞ëÔºü</p><h4 id="„ÄêËæìÂÖ•„Äë-4"><a href="#„ÄêËæìÂÖ•„Äë-4" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏â‰∏™Ê≠£Êï¥Êï∞ $X,Y,Z(1 \le X,Y,Z \le 10^5)$ÔºåÂàÜÂà´Ë°®Á§∫Â∫óÂÜÖ‰∏ÄÂºÄÂßãÊã•ÊúâÁöÑÂ•∂Ê≤π„ÄÅÊ∑ÄÁ≤â‰ª•ÂèäÈ∏°ËõãÁöÑ‰ªΩÊï∞„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´ $X$ ‰∏™Ê≠£Êï¥Êï∞ÔºåË°®Á§∫ÊØè‰ªΩÂ•∂Ê≤πÁöÑÁæéÂë≥Â∫¶„ÄÇ</p><p>Á¨¨‰∏âË°åÂåÖÂê´ $Y$ ‰∏™Ê≠£Êï¥Êï∞ÔºåË°®Á§∫ÊØè‰ªΩÊ∑ÄÁ≤âÁöÑÁæéÂë≥Â∫¶„ÄÇ</p><p>Á¨¨ÂõõË°åÂåÖÂê´ $Z$ ‰∏™Ê≠£Êï¥Êï∞ÔºåË°®Á§∫ÊØè‰ªΩÈ∏°ËõãÁöÑÁæéÂë≥Â∫¶„ÄÇ</p><p>Á¨¨‰∫îË°åÂåÖÂê´‰∏Ä‰∏™Ê≠£Êï¥Êï∞ $N(1‚â§ N ‚â§ min(X,Y, Z))$ÔºåË°®Á§∫ËÆ¢ÂçïÁöÑÊï∞Èáè„ÄÇ</p><p>ÂÖ∂Âêé $N$ Ë°åÔºåÊØèË°åÂåÖÂê´‰∏â‰∏™Ê≠£Êï¥Êï∞ $x_i,y_i,z_i(1 \le x_i,y_i,z_i \le 10)$ÔºåÂàÜÂà´Ë°®Á§∫Âà∂‰ΩúÊØè‰ªΩËÆ¢ÂçïÁöÑËõãÁ≥ïÊâÄÈúÄË¶Å‰ΩøÁî®ÁöÑÂ•∂Ê≤π„ÄÅÊ∑ÄÁ≤âÂèäÈ∏°ËõãÁöÑ‰ªΩÊï∞„ÄÇ</p><ul><li>ÊØè‰ªΩÊùêÊñôÁöÑÁæéÂë≥Â∫¶ÊòØ‰∏Ä‰∏™‰∏çË∂ÖËøá $10000$ ÁöÑÊ≠£Êï¥Êï∞„ÄÇ</li><li>Êï∞ÊçÆ‰øùËØÅ $\sum x_{i} \leq X, \sum y_{i} \leq Y, \sum z_{i} \leq Z$</li></ul><h4 id="„ÄêËæìÂá∫„Äë-4"><a href="#„ÄêËæìÂá∫„Äë-4" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ËæìÂá∫ $N$ Ë°åÔºåÊØèË°åÂåÖÂê´‰∏Ä‰∏™Ê≠£Êï¥Êï∞ÔºåË°®Á§∫ÊØè‰ªΩËÆ¢ÂçïÁöÑËõãÁ≥ïÁöÑÁæéÂë≥Â∫¶„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë-4"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë-4" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token number">3</span> <span class="token number">1</span> <span class="token number">4</span><span class="token number">1</span> <span class="token number">5</span> <span class="token number">9</span> <span class="token number">2</span><span class="token number">6</span> <span class="token number">5</span> <span class="token number">3</span> <span class="token number">5</span> <span class="token number">8</span><span class="token number">2</span><span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë-4"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë-4" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">21</span><span class="token number">26</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-4"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-4" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òÂèØ‰ª•‰ΩøÁî® STL ‰∏≠ÁöÑÂæàÂ§öÂÆπÂô®ÔºåËã•ÈÄâÊã© <code>vector„ÄÅdeque</code> Á≠âÔºåÂè™ÈúÄËØªÂÖ•Êï∞ÊçÆÂêéÔºåÁî® <code>sort()</code> ÂØπÂÖ∂ÈôçÂ∫èÊéíÂ∫èÂç≥ÂèØÔºõËã•ÈÄâÊã© <code>priority_queue</code>ÔºåÂÖ∂ÈªòËÆ§ÂΩ¢Âºè‰∏∫ <strong>Â§ßÈ°∂Â†Ü</strong>ÔºåÁ¨¶ÂêàÈ¢òÁõÆË¶ÅÊ±ÇÔºåËæÉ‰∏∫Êé®Ëçê„ÄÇ</p><h4 id="„Äê-C-‰ª£Á†Å„Äë-4"><a href="#„Äê-C-‰ª£Á†Å„Äë-4" class="headerlink" title="„Äê C++ ‰ª£Á†Å„Äë"></a>„Äê C++ ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> N<span class="token punctuation">,</span> tmp<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">;</span>priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> qx<span class="token punctuation">;</span>  <span class="token comment">//ÂÆö‰πâ3‰∏™‰ºòÂÖàÈòüÂàóÔºåÈªòËÆ§‰∏∫Â§ßÈ°∂Â†ÜÔºåÁæéÈ£üÂ∫¶È´òÁöÑÂÖÉÁ¥†ÊéíÂú®ÈòüÈ¶ñ</span>priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> qy<span class="token punctuation">;</span>priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> qz<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//ËØªÂÖ•Â∫óÈì∫È£üÊùêÂ∫ìÂ≠ò</span>    cin <span class="token operator">&gt;&gt;</span> X <span class="token operator">&gt;&gt;</span> Y <span class="token operator">&gt;&gt;</span> Z<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> X <span class="token operator">+</span> Y <span class="token operator">+</span> Z<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> X<span class="token punctuation">)</span>            qx<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//È£üÊùêÊ†πÊçÆÁæéÂë≥Â∫¶ÂÖ•Èòü</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> X <span class="token operator">+</span> Y<span class="token punctuation">)</span>            qy<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            qz<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//ËØªÂÖ•ËÆ¢Âçï</span>    cin <span class="token operator">&gt;&gt;</span> N<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment">//ÊØè‰∏™ËÆ¢ÂçïÁöÑÁæéÈ£üÂ∫¶</span>        cin <span class="token operator">&gt;&gt;</span> x <span class="token operator">&gt;&gt;</span> y <span class="token operator">&gt;&gt;</span> z<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> x <span class="token operator">+</span> y <span class="token operator">+</span> z<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>                sum <span class="token operator">+=</span> qx<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//Ê†πÊçÆËÆ¢ÂçïË¶ÅÊ±ÇÔºåÈÄâÊã©È£üÊùêÔºàÈ£üÊùêÂá∫ÈòüÔºâ</span>                qx<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> x <span class="token operator">+</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>                sum <span class="token operator">+=</span> qy<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                qy<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                sum <span class="token operator">+=</span> qz<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                qz<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        cout <span class="token operator">&lt;&lt;</span> sum <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="FÔºöÊü•ËµÑÊñô"><a href="#FÔºöÊü•ËµÑÊñô" class="headerlink" title="FÔºöÊü•ËµÑÊñô"></a>FÔºöÊü•ËµÑÊñô</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-5"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-5" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>‰Ω†ÂøΩÁÑ∂Ë¢´Â∏ÉÁΩÆ‰∫Ü‰∏ÄÁØáËÆ∫ÊñáÔºåÂπ∂‰∏îÊó∂Èó¥Â∑≤ÁªèÊâÄÂâ©Êó†Âá†ÔºÅ‰ºóÊâÄÂë®Áü•ÔºåÂÜôËÆ∫ÊñáÈúÄË¶ÅÂºïÁî®ËæÉÂ§öÁöÑÂèÇËÄÉÊñáÁåÆÔºåÂõ†Ê≠§‰Ω†ÈúÄË¶ÅËä±Ë¥π‰∏ÄÂÆöÁöÑÊó∂Èó¥ÂéªÁΩë‰∏äÂØªÊâæËµÑÊñô„ÄÇ</p><p>‰Ω†ÈúÄË¶ÅÊåâÈ°∫Â∫èÊü•Êâæ‰∏Ä‰∫õËµÑÊñôÔºåÊØè‰ªΩËµÑÊñôÈÉΩÂèØ‰ª•Áî®‰∏Ä‰∏™Ê≠£Êï¥Êï∞Ë°®Á§∫„ÄÇÊØèÊ¨°‰∏äÁΩëÊü•ÊâæÂÆåËµÑÊñôÂêéÔºå‰Ω† <strong>ÈÉΩ‰ºö</strong> ÊääËøô‰ªΩËµÑÊñôÂ≠òËøõ‰Ω†ÁöÑÁîµËÑë„ÄÇ</p><p>Ê≠§ÂêéÔºåÂ¶ÇÊûú‰Ω†ÈúÄË¶ÅÂÜçÊ¨°Êü•ÊâæËøô‰ªΩËµÑÊñôÔºåÂπ∂‰∏îÂèëÁé∞ÁîµËÑë‰∏äÂ≠òÁùÄËøô‰ªΩËµÑÊñôÔºåÂ∞±‰∏çÈúÄË¶ÅÂÜçËä±Êõ¥Â§öÁöÑÊó∂Èó¥‰∏äÁΩëÊâæ‰∫Ü„ÄÇ</p><p>‰ΩÜÁé∞Âú®Êúâ‰∏Ä‰∏™Êñ∞ÁöÑÈóÆÈ¢òÔºå‰Ω†ÁöÑÁîµËÑëÂÆπÈáè‰∏çÂ§ßÂ§ü‰∫ÜÔºåÂè™ËÉΩÂ§üËÆ©‰Ω†Â≠òÊúÄÂ§ö $m$ ‰ªΩËµÑÊñô„ÄÇ‰Ω†ËÆ§‰∏∫Êñ∞Êü•Âà∞ÁöÑËµÑÊñôÊÄªÊòØÊØî‰ª•ÂâçÊü•ÁöÑËµÑÊñôÊõ¥Êúâ‰ª∑ÂÄºÔºåÂõ†Ê≠§ÊØèÊ¨°‰Ω†‰ºöÊää <strong>ÊúÄÊó©</strong> Â≠òÂÖ•ÁîµËÑëÁöÑÈÇ£‰ªΩËµÑÊñôÂà†Èô§ÔºåËÖæÂá∫Á©∫Èó¥Êù•Â≠òÊñ∞ÁöÑËµÑÊñô„ÄÇ</p><p>ÁªôÂÆö‰Ω†Ë¶ÅÊü•ËØ¢ÁöÑËµÑÊñôÁöÑÈ°∫Â∫èÔºåÈóÆ‰Ω†ÊÄªÂÖ±ÈúÄË¶Å <strong>‰∏äÁΩëÊü•Êâæ</strong> Â§öÂ∞ëÊ¨°Ôºü</p><p>ÂàùÂßãÊó∂ÁîµËÑë‰∏äÊ≤°Êúâ‰ªª‰ΩïËµÑÊñô„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-5"><a href="#„ÄêËæìÂÖ•„Äë-5" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Á¨¨‰∏ÄË°åÂåÖÂê´‰∏§‰∏™Ê≠£Êï¥Êï∞ $n,m(1‚â§n,m‚â§10^5)$ÔºåÂàÜÂà´Ë°®Á§∫ÈúÄË¶ÅÊü•ÊâæÁöÑÊ¨°Êï∞‰ª•ÂèäÁîµËÑëÁöÑÊúÄÂ§ßÂÆπÈáè„ÄÇ</p><p>Á¨¨‰∫åË°åÂåÖÂê´ $n$ ‰∏™Ê≠£Êï¥Êï∞ $a_1,a_2,‚Ä¶,a_n(1 \le a_i \le5000)$ÔºåË°®Á§∫ÊØèÊ¨°Ë¶ÅÊü•ÁöÑËµÑÊñô„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-5"><a href="#„ÄêËæìÂá∫„Äë-5" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>ËæìÂá∫‰∏Ä‰∏™Êï¥Êï∞ÔºåË°®Á§∫ÈúÄË¶Å‰∏äÁΩëÊü•ÁöÑÊ¨°Êï∞„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë-5"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë-5" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">7</span> <span class="token number">3</span><span class="token number">1</span> <span class="token number">9</span> <span class="token number">1</span> <span class="token number">9</span> <span class="token number">8</span> <span class="token number">10</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë-5"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë-5" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-5"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-5" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢ò‰ΩøÁî® STL ‰∏≠ÁöÑ <code>deque</code>Ôºå‰ºöÊØîËæÉÊñπ‰æø„ÄÇÔºàÊú¨È¢òÊ∂âÂèäÊü•ËØ¢ÔºåËÄå ÂÆπÂô®ÈÄÇÈÖçÂô® <code>queue</code> ‰∏çÊîØÊåÅÊü•ËØ¢ÔºåÊïÖÊé®Ëçê‰ΩøÁî®<code>deque</code> Ôºâ</p><h4 id="„Äê-C-‰ª£Á†Å„Äë-5"><a href="#„Äê-C-‰ª£Á†Å„Äë-5" class="headerlink" title="„Äê C++ ‰ª£Á†Å„Äë"></a>„Äê C++ ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> tmp<span class="token punctuation">,</span> cnt<span class="token punctuation">;</span>deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> dq<span class="token punctuation">;</span>deque<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//cinËØªÂÖ•‰ºòÂåñ</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">;</span>        <span class="token comment">//Êü•ËØ¢ÂΩìÂâçËµÑÊñôÊòØÂê¶Âú®ÁîµËÑë‰∏≠</span>        it <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>dq<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dq<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">==</span> dq<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//ÂΩìÂâçÁîµËÑë‰∏≠Êú™ÊâæÂà∞</span>            <span class="token comment">//Êü•ÊâæÊ¨°Êï∞+1</span>            cnt<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token comment">//Â∞ÜÂΩìÂâçÊñ∞ËµÑÊñôÊîæÂÖ•ÁîµËÑë‰∏≠</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>dq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//Ëã•ÁîµËÑëÂÆπÈáèÂ∑≤Êª°ÔºåÂºπÂá∫È¶ñËµÑÊñô</span>                dq<span class="token punctuation">.</span><span class="token function">pop_front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            dq<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> cnt <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="GÔºöÊòéÊòéÁöÑÈöèÊú∫Êï∞"><a href="#GÔºöÊòéÊòéÁöÑÈöèÊú∫Êï∞" class="headerlink" title="GÔºöÊòéÊòéÁöÑÈöèÊú∫Êï∞"></a>GÔºöÊòéÊòéÁöÑÈöèÊú∫Êï∞</h3><h4 id="„ÄêÈ¢òÁõÆÊèèËø∞„Äë-6"><a href="#„ÄêÈ¢òÁõÆÊèèËø∞„Äë-6" class="headerlink" title="„ÄêÈ¢òÁõÆÊèèËø∞„Äë"></a>„ÄêÈ¢òÁõÆÊèèËø∞„Äë</h4><p>ÂÖàÁî®ËÆ°ÁÆóÊú∫ÁîüÊàê‰∫Ü $N$ ‰∏™ 1 Âà∞ 1000 ‰πãÈó¥ÁöÑÈöèÊú∫Êï¥Êï∞ $N‚â§100$ÔºåÂØπ‰∫éÂÖ∂‰∏≠ÈáçÂ§çÁöÑÊï∞Â≠óÔºåÂè™‰øùÁïô‰∏Ä‰∏™ÔºåÊääÂÖ∂‰ΩôÁõ∏ÂêåÁöÑÊï∞ÂéªÊéâÔºå‰∏çÂêåÁöÑÊï∞ÂØπÂ∫îÁùÄ‰∏çÂêåÁöÑÂ≠¶ÁîüÁöÑÂ≠¶Âè∑„ÄÇÁÑ∂ÂêéÂÜçÊääËøô‰∫õÊï∞‰ªéÂ∞èÂà∞Â§ßÊéíÂ∫èÔºåÊåâÁÖßÊéíÂ•ΩÁöÑÈ°∫Â∫èÂéªÊâæÂêåÂ≠¶ÂÅöË∞ÉÊü•„ÄÇËØ∑‰Ω†ÂçèÂä©ÊòéÊòéÂÆåÊàê ‚ÄúÂéªÈáç‚Äù ‰∏é ‚ÄúÊéíÂ∫è‚Äù ÁöÑÂ∑•‰Ωú„ÄÇ</p><h4 id="„ÄêËæìÂÖ•„Äë-6"><a href="#„ÄêËæìÂÖ•„Äë-6" class="headerlink" title="„ÄêËæìÂÖ•„Äë"></a>„ÄêËæìÂÖ•„Äë</h4><p>Êúâ 2 Ë°åÔºåÁ¨¨ 1 Ë°å‰∏∫ 1 ‰∏™Ê≠£Êï¥Êï∞ÔºåË°®Á§∫ÊâÄÁîüÊàêÁöÑÈöèÊú∫Êï∞ÁöÑ‰∏™Êï∞Ôºö$N$</p><p>Á¨¨ 2 Ë°åÊúâ $N$ ‰∏™Áî®Á©∫Ê†ºÈöîÂºÄÁöÑÊ≠£Êï¥Êï∞Ôºå‰∏∫ÊâÄ‰∫ßÁîüÁöÑÈöèÊú∫Êï∞„ÄÇ</p><h4 id="„ÄêËæìÂá∫„Äë-6"><a href="#„ÄêËæìÂá∫„Äë-6" class="headerlink" title="„ÄêËæìÂá∫„Äë"></a>„ÄêËæìÂá∫„Äë</h4><p>2 Ë°åÔºåÁ¨¨ 1 Ë°å‰∏∫ 1 ‰∏™Ê≠£Êï¥Êï∞MÔºåË°®Á§∫‰∏çÁõ∏ÂêåÁöÑÈöèÊú∫Êï∞ÁöÑ‰∏™Êï∞„ÄÇÁ¨¨ 2 Ë°å‰∏∫ $M$ ‰∏™Áî®Á©∫Ê†ºÈöîÂºÄÁöÑÊ≠£Êï¥Êï∞Ôºå‰∏∫‰ªéÂ∞èÂà∞Â§ßÊéíÂ•ΩÂ∫èÁöÑ‰∏çÁõ∏ÂêåÁöÑÈöèÊú∫Êï∞„ÄÇ</p><h4 id="„ÄêËæìÂÖ•Ê†∑‰æã„Äë-6"><a href="#„ÄêËæìÂÖ•Ê†∑‰æã„Äë-6" class="headerlink" title="„ÄêËæìÂÖ•Ê†∑‰æã„Äë"></a>„ÄêËæìÂÖ•Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">10</span><span class="token number">20</span> <span class="token number">40</span> <span class="token number">32</span> <span class="token number">67</span> <span class="token number">40</span> <span class="token number">20</span> <span class="token number">89</span> <span class="token number">300</span> <span class="token number">400</span> <span class="token number">15</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="„ÄêËæìÂá∫Ê†∑‰æã„Äë-6"><a href="#„ÄêËæìÂá∫Ê†∑‰æã„Äë-6" class="headerlink" title="„ÄêËæìÂá∫Ê†∑‰æã„Äë"></a>„ÄêËæìÂá∫Ê†∑‰æã„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token number">8</span><span class="token number">15</span> <span class="token number">20</span> <span class="token number">32</span> <span class="token number">40</span> <span class="token number">67</span> <span class="token number">89</span> <span class="token number">300</span> <span class="token number">400</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h4 id="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-6"><a href="#„ÄêÈ¢òÁõÆÂàÜÊûê„Äë-6" class="headerlink" title="„ÄêÈ¢òÁõÆÂàÜÊûê„Äë"></a>„ÄêÈ¢òÁõÆÂàÜÊûê„Äë</h4><p>Êú¨È¢òËÄÉÊü• STL ‰∏≠ÁöÑ <code>set</code> Ôºå<code>set</code> ÂÆπÂô®Ëá™Â∏¶ ‚ÄùÂéªÈáç‚Äú Âíå ‚ÄùÊéíÂ∫è‚Äú ÁöÑÊïàÊûúÔºåÈùûÂ∏∏ÈÄÇÂêàÊú¨È¢ò„ÄÇ</p><h4 id="„Äê-C-‰ª£Á†Å„Äë-6"><a href="#„Äê-C-‰ª£Á†Å„Äë-6" class="headerlink" title="„Äê C++ ‰ª£Á†Å„Äë"></a>„Äê C++ ‰ª£Á†Å„Äë</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> N<span class="token punctuation">,</span> tmp<span class="token punctuation">;</span>set<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> s<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    ios<span class="token double-colon punctuation">::</span><span class="token function">sync_with_stdio</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin<span class="token punctuation">.</span><span class="token function">tie</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cin <span class="token operator">&gt;&gt;</span> N<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cin <span class="token operator">&gt;&gt;</span> tmp<span class="token punctuation">;</span>        s<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//setÂÆπÂô®ÈªòËÆ§ÂçáÂ∫è</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> s<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> t<span class="token operator">:</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>        cout <span class="token operator">&lt;&lt;</span> t <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ‰ø°ÊÅØÂ••ËµõÈ¢òËß£ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ‰ø°ÊÅØÂ••Ëµõ </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu‰∏ãÂÆâË£ÖClangÁºñËØëÂô®</title>
      <link href="/2023/03/25/ubuntu/"/>
      <url>/2023/03/25/ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="„ÄêLinux„ÄëUbuntu-22-04-ÂÆâË£Ö-Clang-ÁºñËØëÂô®"><a href="#„ÄêLinux„ÄëUbuntu-22-04-ÂÆâË£Ö-Clang-ÁºñËØëÂô®" class="headerlink" title="„ÄêLinux„ÄëUbuntu 22.04 ÂÆâË£Ö Clang ÁºñËØëÂô®"></a>„ÄêLinux„ÄëUbuntu 22.04 ÂÆâË£Ö Clang ÁºñËØëÂô®</h1><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/Ubuntu-22-04-LTSpng.png" alt="Ubuntu-22-04-LTS"></p><p>Êëä‰∏ªÂ∞ÜÂú®Êú¨Êñá‰∏≠‰ªãÁªçÂ¶Ç‰ΩïÂú® Ubuntu ‰∏äÂÆâË£Ö Clang ÁºñËØëÂô®„ÄÇ</p><hr><h2 id="Clang-‰ªãÁªç-‚òòÔ∏è"><a href="#Clang-‰ªãÁªç-‚òòÔ∏è" class="headerlink" title="Clang ‰ªãÁªç ‚òòÔ∏è"></a>Clang ‰ªãÁªç ‚òòÔ∏è</h2><p><strong>Clang</strong> ÊòØ‰∏ÄÊ¨æÁî± LLVM È°πÁõÆÂºÄÂèëÁöÑ C„ÄÅC++„ÄÅObjective-C Âíå Objective-C++ <strong>ÁºñËØëÂô®</strong>„ÄÇÂÆÉË¢´ËÆæËÆ°ÊàêÂèØ‰ª•Êõø‰ª£ GCCÔºàGNU Compiler CollectionÔºâÁºñËØëÂô®ÔºåÂπ∂‰∏îÂú®ËÆ∏Â§öÊñπÈù¢ÈÉΩÊØî GCC Êõ¥‰ºòÁßÄÔºåÂèØ‰ª•Êèê‰æõÊõ¥Â•ΩÁöÑÁºñËØëÈÄüÂ∫¶„ÄÅÂáÜÁ°ÆÊÄßÂíåÂÖºÂÆπÊÄß„ÄÇ</p><h2 id="Á≥ªÁªüÁâàÊú¨-üñ•"><a href="#Á≥ªÁªüÁâàÊú¨-üñ•" class="headerlink" title="Á≥ªÁªüÁâàÊú¨ üñ•"></a>Á≥ªÁªüÁâàÊú¨ üñ•</h2><p>Á≥ªÁªüÁâàÊú¨ÔºöUbuntu 22.04 LTS</p><h2 id="ÂÆâË£ÖÊ≠•È™§-üöÄ"><a href="#ÂÆâË£ÖÊ≠•È™§-üöÄ" class="headerlink" title="ÂÆâË£ÖÊ≠•È™§ üöÄ"></a>ÂÆâË£ÖÊ≠•È™§ üöÄ</h2><ol><li>ÊâìÂºÄÁªàÁ´ØÂπ∂Êõ¥Êñ∞Á≥ªÁªüËΩØ‰ª∂ÂåÖÔºöÂú®ÁªàÁ´Ø‰∏≠ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§Âπ∂ÊâßË°å„ÄÇ</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/image-20230322232323046.png" alt="sudo apt-get update"></p><ol start="2"><li>ÂÆâË£Ö Clang ÁºñËØëÂô®ÔºöÂú®ÁªàÁ´Ø‰∏≠ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§Âπ∂ÊâßË°å„ÄÇÔºàÂÆâË£ÖËøáÁ®ãËØ∑ËÄêÂøÉÁ≠âÂæÖÔºâ</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> clang<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/image-20230322232633305.png" alt="sudo apt-get install clang"></p><ol start="3"><li>Ê£ÄÊü• Clang ÁâàÊú¨ÔºöÂú®ÁªàÁ´Ø‰∏≠ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§Âπ∂ÊâßË°å„ÄÇ</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">clang <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://ricky-typora-notes.oss-cn-hangzhou.aliyuncs.com/image-20230322232732832.png" alt="clang --version"></p><p>Â¶ÇÊûúÂá∫Áé∞ Clang ÁâàÊú¨‰ø°ÊÅØÔºåÂàôË°®Á§∫ Clang ÁºñËØëÂô®Â∑≤ÁªèÂÆâË£ÖÊàêÂäü„ÄÇ</p><hr><h2 id="CËØ≠Ë®ÄÁºñËØëÊµãËØï-üßëüèª‚Äçüíª"><a href="#CËØ≠Ë®ÄÁºñËØëÊµãËØï-üßëüèª‚Äçüíª" class="headerlink" title="CËØ≠Ë®ÄÁºñËØëÊµãËØï üßëüèª‚Äçüíª"></a>CËØ≠Ë®ÄÁºñËØëÊµãËØï üßëüèª‚Äçüíª</h2><ol><li>ÂàõÂª∫‰∏Ä‰∏™Âêç‰∏∫ <code>helloworld.c</code> ÁöÑÊñá‰ª∂ÔºåËæìÂÖ•‰ª•‰∏ã‰ª£Á†ÅÔºö</li></ol><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>ÊâìÂºÄÁªàÁ´ØÔºåËøõÂÖ• <code>helloworld.c</code> Êñá‰ª∂ÊâÄÂú®ÁöÑÁõÆÂΩï„ÄÇ</li><li>ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§Êù•‰ΩøÁî® Clang ÁºñËØëÁ®ãÂ∫èÔºö</li></ol><pre class="line-numbers language-c" data-language="c"><code class="language-c">clang <span class="token operator">-</span>o helloworld helloworld<span class="token punctuation">.</span>c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÂÖ∂‰∏≠Ôºå<code>clang</code> ÊòØ Clang ÁºñËØëÂô®ÁöÑÂèØÊâßË°åÊñá‰ª∂Ôºå<code>-o</code> ÈÄâÈ°πË°®Á§∫ËæìÂá∫Êñá‰ª∂ÂêçÔºå<code>helloworld</code> ÊòØËæìÂá∫ÁöÑÂèØÊâßË°åÊñá‰ª∂ÁöÑÂêçÁß∞Ôºå<code>helloworld.c</code> ÊòØÊ∫ê‰ª£Á†ÅÊñá‰ª∂ÁöÑÂêçÁß∞„ÄÇ</p><ol start="4"><li>ÊâßË°åÁ®ãÂ∫èÔºö</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./helloworld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ËæìÂá∫ÁªìÊûúÂ∫îËØ•ÊòØÔºö</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Hello, World<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ËØ¥ÊòéÂΩìÂâç C ËØ≠Ë®ÄÁ®ãÂ∫èÂ∑≤ÁªèÊàêÂäüÁºñËØëÂπ∂ËøêË°å‰∫Ü„ÄÇ</p><hr><h2 id="C-ÁºñËØëÊµãËØï-üßëüèª‚Äçüíª"><a href="#C-ÁºñËØëÊµãËØï-üßëüèª‚Äçüíª" class="headerlink" title="C++ÁºñËØëÊµãËØï üßëüèª‚Äçüíª"></a>C++ÁºñËØëÊµãËØï üßëüèª‚Äçüíª</h2><ol><li>ÂàõÂª∫‰∏Ä‰∏™Âêç‰∏∫ <code>test.cpp</code> ÁöÑÊñá‰ª∂ÔºåËæìÂÖ•‰ª•‰∏ã‰ª£Á†ÅÔºö</li></ol><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello, World!"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>ÊâìÂºÄÁªàÁ´ØÔºåËøõÂÖ• <code>test.cpp</code> Êñá‰ª∂ÊâÄÂú®ÁöÑÁõÆÂΩï„ÄÇ</li><li>ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§Êù•‰ΩøÁî® Clang ÁºñËØëÁ®ãÂ∫èÔºö</li></ol><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">clang<span class="token operator">++</span> <span class="token operator">-</span>o test test<span class="token punctuation">.</span>cpp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ÂÖ∂‰∏≠Ôºå<code>clang++</code> ÊòØ Clang ÁºñËØëÂô®ÁöÑÂèØÊâßË°åÊñá‰ª∂Ôºå<code>-o</code> ÈÄâÈ°πË°®Á§∫ËæìÂá∫Êñá‰ª∂ÂêçÔºå<code>test</code> ÊòØËæìÂá∫ÁöÑÂèØÊâßË°åÊñá‰ª∂ÁöÑÂêçÁß∞Ôºå<code>test.cpp</code> ÊòØÊ∫ê‰ª£Á†ÅÊñá‰ª∂ÁöÑÂêçÁß∞„ÄÇ </p><ol start="4"><li>ÊâßË°åÁ®ãÂ∫èÔºö</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ËæìÂá∫ÁªìÊûúÂ∫îËØ•ÊòØÔºö</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Hello, World<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ËØ¥ÊòéÂΩìÂâç C++ ËØ≠Ë®ÄÁ®ãÂ∫èÂ∑≤ÁªèÊàêÂäüÁºñËØëÂπ∂ËøêË°å‰∫Ü„ÄÇ</p>]]></content>
      
      
      <categories>
          
          <category> LinuxÂü∫Á°Ä </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> ËΩØ‰ª∂ÂÆâË£ÖÊïôÁ®ã </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ÊàëÁöÑÁ¨¨‰∏ÄÁØáÂçöÂÆ¢</title>
      <link href="/2023/03/24/wo-de-di-yi-pian-bo-ke/"/>
      <url>/2023/03/24/wo-de-di-yi-pian-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="ÊàëÁöÑÁ¨¨‰∏ÄÁØáÂçöÂÆ¢"><a href="#ÊàëÁöÑÁ¨¨‰∏ÄÁØáÂçöÂÆ¢" class="headerlink" title="ÊàëÁöÑÁ¨¨‰∏ÄÁØáÂçöÂÆ¢"></a>ÊàëÁöÑÁ¨¨‰∏ÄÁØáÂçöÂÆ¢</h1><p>HiÔºåÂ§ßÂÆ∂Â•ΩÂëÄ„ÄÇ</p>]]></content>
      
      
      <categories>
          
          <category> ÈöèÁ¨î </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ÈöèÁ¨î </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
